/**
 * Gtk-4.0
 */

import * as Gjs from './Gjs';
import * as Gsk from './Gsk-4.0';
import * as Graphene from './Graphene-1.0';
import * as GObject from './GObject-2.0';
import * as GLib from './GLib-2.0';
import * as Gdk from './Gdk-4.0';
import * as cairo from './cairo-1.0';
import * as PangoCairo from './PangoCairo-1.0';
import * as Pango from './Pango-1.0';
import * as HarfBuzz from './HarfBuzz-0.0';
import * as Gio from './Gio-2.0';
import * as GdkPixbuf from './GdkPixbuf-2.0';
import * as GModule from './GModule-2.0';

export enum AccessibleAutocomplete {
    NONE,
    INLINE,
    LIST,
    BOTH,
}
export enum AccessibleInvalidState {
    FALSE,
    TRUE,
    GRAMMAR,
    SPELLING,
}
export enum AccessibleProperty {
    AUTOCOMPLETE,
    DESCRIPTION,
    HAS_POPUP,
    KEY_SHORTCUTS,
    LABEL,
    LEVEL,
    MODAL,
    MULTI_LINE,
    MULTI_SELECTABLE,
    ORIENTATION,
    PLACEHOLDER,
    READ_ONLY,
    REQUIRED,
    ROLE_DESCRIPTION,
    SORT,
    VALUE_MAX,
    VALUE_MIN,
    VALUE_NOW,
    VALUE_TEXT,
}
export enum AccessibleRelation {
    ACTIVE_DESCENDANT,
    COL_COUNT,
    COL_INDEX,
    COL_INDEX_TEXT,
    COL_SPAN,
    CONTROLS,
    DESCRIBED_BY,
    DETAILS,
    ERROR_MESSAGE,
    FLOW_TO,
    LABELLED_BY,
    OWNS,
    POS_IN_SET,
    ROW_COUNT,
    ROW_INDEX,
    ROW_INDEX_TEXT,
    ROW_SPAN,
    SET_SIZE,
}
export enum AccessibleRole {
    ALERT,
    ALERT_DIALOG,
    BANNER,
    BUTTON,
    CAPTION,
    CELL,
    CHECKBOX,
    COLUMN_HEADER,
    COMBO_BOX,
    COMMAND,
    COMPOSITE,
    DIALOG,
    DOCUMENT,
    FEED,
    FORM,
    GENERIC,
    GRID,
    GRID_CELL,
    GROUP,
    HEADING,
    IMG,
    INPUT,
    LABEL,
    LANDMARK,
    LEGEND,
    LINK,
    LIST,
    LIST_BOX,
    LIST_ITEM,
    LOG,
    MAIN,
    MARQUEE,
    MATH,
    METER,
    MENU,
    MENU_BAR,
    MENU_ITEM,
    MENU_ITEM_CHECKBOX,
    MENU_ITEM_RADIO,
    NAVIGATION,
    NONE,
    NOTE,
    OPTION,
    PRESENTATION,
    PROGRESS_BAR,
    RADIO,
    RADIO_GROUP,
    RANGE,
    REGION,
    ROW,
    ROW_GROUP,
    ROW_HEADER,
    SCROLLBAR,
    SEARCH,
    SEARCH_BOX,
    SECTION,
    SECTION_HEAD,
    SELECT,
    SEPARATOR,
    SLIDER,
    SPIN_BUTTON,
    STATUS,
    STRUCTURE,
    SWITCH,
    TAB,
    TABLE,
    TAB_LIST,
    TAB_PANEL,
    TEXT_BOX,
    TIME,
    TIMER,
    TOOLBAR,
    TOOLTIP,
    TREE,
    TREE_GRID,
    TREE_ITEM,
    WIDGET,
    WINDOW,
}
export enum AccessibleSort {
    NONE,
    ASCENDING,
    DESCENDING,
    OTHER,
}
export enum AccessibleState {
    BUSY,
    CHECKED,
    DISABLED,
    EXPANDED,
    HIDDEN,
    INVALID,
    PRESSED,
    SELECTED,
}
export enum AccessibleTristate {
    FALSE,
    TRUE,
    MIXED,
}
export enum Align {
    FILL,
    START,
    END,
    CENTER,
    BASELINE,
}
export enum ArrowType {
    UP,
    DOWN,
    LEFT,
    RIGHT,
    NONE,
}
export enum AssistantPageType {
    CONTENT,
    INTRO,
    CONFIRM,
    SUMMARY,
    PROGRESS,
    CUSTOM,
}
export enum BaselinePosition {
    TOP,
    CENTER,
    BOTTOM,
}
export enum BorderStyle {
    NONE,
    HIDDEN,
    SOLID,
    INSET,
    OUTSET,
    DOTTED,
    DASHED,
    DOUBLE,
    GROOVE,
    RIDGE,
}
export enum BuilderError {
    INVALID_TYPE_FUNCTION,
    UNHANDLED_TAG,
    MISSING_ATTRIBUTE,
    INVALID_ATTRIBUTE,
    INVALID_TAG,
    MISSING_PROPERTY_VALUE,
    INVALID_VALUE,
    VERSION_MISMATCH,
    DUPLICATE_ID,
    OBJECT_TYPE_REFUSED,
    TEMPLATE_MISMATCH,
    INVALID_PROPERTY,
    INVALID_SIGNAL,
    INVALID_ID,
    INVALID_FUNCTION,
}
export enum ButtonsType {
    NONE,
    OK,
    CLOSE,
    CANCEL,
    YES_NO,
    OK_CANCEL,
}
export enum CellRendererAccelMode {
    GTK,
    OTHER,
}
export enum CellRendererMode {
    INERT,
    ACTIVATABLE,
    EDITABLE,
}
export enum ConstraintAttribute {
    NONE,
    LEFT,
    RIGHT,
    TOP,
    BOTTOM,
    START,
    END,
    WIDTH,
    HEIGHT,
    CENTER_X,
    CENTER_Y,
    BASELINE,
}
export enum ConstraintRelation {
    LE,
    EQ,
    GE,
}
export enum ConstraintStrength {
    REQUIRED,
    STRONG,
    MEDIUM,
    WEAK,
}
export enum ConstraintVflParserError {
    SYMBOL,
    ATTRIBUTE,
    VIEW,
    METRIC,
    PRIORITY,
    RELATION,
}
export enum CornerType {
    TOP_LEFT,
    BOTTOM_LEFT,
    TOP_RIGHT,
    BOTTOM_RIGHT,
}
export enum CssParserError {
    FAILED,
    SYNTAX,
    IMPORT,
    NAME,
    UNKNOWN_VALUE,
}
export enum CssParserWarning {
    DEPRECATED,
    SYNTAX,
    UNIMPLEMENTED,
}
export enum DeleteType {
    CHARS,
    WORD_ENDS,
    WORDS,
    DISPLAY_LINES,
    DISPLAY_LINE_ENDS,
    PARAGRAPH_ENDS,
    PARAGRAPHS,
    WHITESPACE,
}
export enum DirectionType {
    TAB_FORWARD,
    TAB_BACKWARD,
    UP,
    DOWN,
    LEFT,
    RIGHT,
}
export enum EditableProperties {
    PROP_TEXT,
    PROP_CURSOR_POSITION,
    PROP_SELECTION_BOUND,
    PROP_EDITABLE,
    PROP_WIDTH_CHARS,
    PROP_MAX_WIDTH_CHARS,
    PROP_XALIGN,
    PROP_ENABLE_UNDO,
    NUM_PROPERTIES,
}
export enum EntryIconPosition {
    PRIMARY,
    SECONDARY,
}
export enum EventSequenceState {
    NONE,
    CLAIMED,
    DENIED,
}
export enum FileChooserAction {
    OPEN,
    SAVE,
    SELECT_FOLDER,
}
export enum FileChooserError {
    NONEXISTENT,
    BAD_FILENAME,
    ALREADY_EXISTS,
    INCOMPLETE_HOSTNAME,
}
export enum FilterChange {
    DIFFERENT,
    LESS_STRICT,
    MORE_STRICT,
}
export enum FilterMatch {
    SOME,
    NONE,
    ALL,
}
export enum IconSize {
    INHERIT,
    NORMAL,
    LARGE,
}
export enum IconThemeError {
    NOT_FOUND,
    FAILED,
}
export enum IconViewDropPosition {
    NO_DROP,
    DROP_INTO,
    DROP_LEFT,
    DROP_RIGHT,
    DROP_ABOVE,
    DROP_BELOW,
}
export enum ImageType {
    EMPTY,
    ICON_NAME,
    GICON,
    PAINTABLE,
}
export enum InputPurpose {
    FREE_FORM,
    ALPHA,
    DIGITS,
    NUMBER,
    PHONE,
    URL,
    EMAIL,
    NAME,
    PASSWORD,
    PIN,
    TERMINAL,
}
export enum Justification {
    LEFT,
    RIGHT,
    CENTER,
    FILL,
}
export enum LevelBarMode {
    CONTINUOUS,
    DISCRETE,
}
export enum License {
    UNKNOWN,
    CUSTOM,
    GPL_2_0,
    GPL_3_0,
    LGPL_2_1,
    LGPL_3_0,
    BSD,
    MIT_X11,
    ARTISTIC,
    GPL_2_0_ONLY,
    GPL_3_0_ONLY,
    LGPL_2_1_ONLY,
    LGPL_3_0_ONLY,
    AGPL_3_0,
    AGPL_3_0_ONLY,
    BSD_3,
    APACHE_2_0,
    MPL_2_0,
}
export enum MessageType {
    INFO,
    WARNING,
    QUESTION,
    ERROR,
    OTHER,
}
export enum MovementStep {
    LOGICAL_POSITIONS,
    VISUAL_POSITIONS,
    WORDS,
    DISPLAY_LINES,
    DISPLAY_LINE_ENDS,
    PARAGRAPHS,
    PARAGRAPH_ENDS,
    PAGES,
    BUFFER_ENDS,
    HORIZONTAL_PAGES,
}
export enum NotebookTab {
    FIRST,
    LAST,
}
export enum NumberUpLayout {
    LRTB,
    LRBT,
    RLTB,
    RLBT,
    TBLR,
    TBRL,
    BTLR,
    BTRL,
}
export enum Ordering {
    SMALLER,
    EQUAL,
    LARGER,
}
export enum Orientation {
    HORIZONTAL,
    VERTICAL,
}
export enum Overflow {
    VISIBLE,
    HIDDEN,
}
export enum PackType {
    START,
    END,
}
export enum PadActionType {
    BUTTON,
    RING,
    STRIP,
}
export enum PageOrientation {
    PORTRAIT,
    LANDSCAPE,
    REVERSE_PORTRAIT,
    REVERSE_LANDSCAPE,
}
export enum PageSet {
    ALL,
    EVEN,
    ODD,
}
export enum PanDirection {
    LEFT,
    RIGHT,
    UP,
    DOWN,
}
export enum PolicyType {
    ALWAYS,
    AUTOMATIC,
    NEVER,
    EXTERNAL,
}
export enum PositionType {
    LEFT,
    RIGHT,
    TOP,
    BOTTOM,
}
export enum PrintDuplex {
    SIMPLEX,
    HORIZONTAL,
    VERTICAL,
}
export enum PrintError {
    GENERAL,
    INTERNAL_ERROR,
    NOMEM,
    INVALID_FILE,
}
export enum PrintOperationAction {
    PRINT_DIALOG,
    PRINT,
    PREVIEW,
    EXPORT,
}
export enum PrintOperationResult {
    ERROR,
    APPLY,
    CANCEL,
    IN_PROGRESS,
}
export enum PrintPages {
    ALL,
    CURRENT,
    RANGES,
    SELECTION,
}
export enum PrintQuality {
    LOW,
    NORMAL,
    HIGH,
    DRAFT,
}
export enum PrintStatus {
    INITIAL,
    PREPARING,
    GENERATING_DATA,
    SENDING_DATA,
    PENDING,
    PENDING_ISSUE,
    PRINTING,
    FINISHED,
    FINISHED_ABORTED,
}
export enum PropagationLimit {
    NONE,
    SAME_NATIVE,
}
export enum PropagationPhase {
    NONE,
    CAPTURE,
    BUBBLE,
    TARGET,
}
export enum RecentManagerError {
    NOT_FOUND,
    INVALID_URI,
    INVALID_ENCODING,
    NOT_REGISTERED,
    READ,
    WRITE,
    UNKNOWN,
}
export enum ResponseType {
    NONE,
    REJECT,
    ACCEPT,
    DELETE_EVENT,
    OK,
    CANCEL,
    CLOSE,
    YES,
    NO,
    APPLY,
    HELP,
}
export enum RevealerTransitionType {
    NONE,
    CROSSFADE,
    SLIDE_RIGHT,
    SLIDE_LEFT,
    SLIDE_UP,
    SLIDE_DOWN,
    SWING_RIGHT,
    SWING_LEFT,
    SWING_UP,
    SWING_DOWN,
}
export enum ScrollStep {
    STEPS,
    PAGES,
    ENDS,
    HORIZONTAL_STEPS,
    HORIZONTAL_PAGES,
    HORIZONTAL_ENDS,
}
export enum ScrollType {
    NONE,
    JUMP,
    STEP_BACKWARD,
    STEP_FORWARD,
    PAGE_BACKWARD,
    PAGE_FORWARD,
    STEP_UP,
    STEP_DOWN,
    PAGE_UP,
    PAGE_DOWN,
    STEP_LEFT,
    STEP_RIGHT,
    PAGE_LEFT,
    PAGE_RIGHT,
    START,
    END,
}
export enum ScrollablePolicy {
    MINIMUM,
    NATURAL,
}
export enum SelectionMode {
    NONE,
    SINGLE,
    BROWSE,
    MULTIPLE,
}
export enum SensitivityType {
    AUTO,
    ON,
    OFF,
}
export enum ShortcutScope {
    LOCAL,
    MANAGED,
    GLOBAL,
}
export enum ShortcutType {
    ACCELERATOR,
    GESTURE_PINCH,
    GESTURE_STRETCH,
    GESTURE_ROTATE_CLOCKWISE,
    GESTURE_ROTATE_COUNTERCLOCKWISE,
    GESTURE_TWO_FINGER_SWIPE_LEFT,
    GESTURE_TWO_FINGER_SWIPE_RIGHT,
    GESTURE,
    GESTURE_SWIPE_LEFT,
    GESTURE_SWIPE_RIGHT,
}
export enum SizeGroupMode {
    NONE,
    HORIZONTAL,
    VERTICAL,
    BOTH,
}
export enum SizeRequestMode {
    HEIGHT_FOR_WIDTH,
    WIDTH_FOR_HEIGHT,
    CONSTANT_SIZE,
}
export enum SortType {
    ASCENDING,
    DESCENDING,
}
export enum SorterChange {
    DIFFERENT,
    INVERTED,
    LESS_STRICT,
    MORE_STRICT,
}
export enum SorterOrder {
    PARTIAL,
    NONE,
    TOTAL,
}
export enum SpinButtonUpdatePolicy {
    ALWAYS,
    IF_VALID,
}
export enum SpinType {
    STEP_FORWARD,
    STEP_BACKWARD,
    PAGE_FORWARD,
    PAGE_BACKWARD,
    HOME,
    END,
    USER_DEFINED,
}
export enum StackTransitionType {
    NONE,
    CROSSFADE,
    SLIDE_RIGHT,
    SLIDE_LEFT,
    SLIDE_UP,
    SLIDE_DOWN,
    SLIDE_LEFT_RIGHT,
    SLIDE_UP_DOWN,
    OVER_UP,
    OVER_DOWN,
    OVER_LEFT,
    OVER_RIGHT,
    UNDER_UP,
    UNDER_DOWN,
    UNDER_LEFT,
    UNDER_RIGHT,
    OVER_UP_DOWN,
    OVER_DOWN_UP,
    OVER_LEFT_RIGHT,
    OVER_RIGHT_LEFT,
    ROTATE_LEFT,
    ROTATE_RIGHT,
    ROTATE_LEFT_RIGHT,
}
export enum StringFilterMatchMode {
    EXACT,
    SUBSTRING,
    PREFIX,
}
export enum SystemSetting {
    DPI,
    FONT_NAME,
    FONT_CONFIG,
    DISPLAY,
    ICON_THEME,
}
export enum TextDirection {
    NONE,
    LTR,
    RTL,
}
export enum TextExtendSelection {
    WORD,
    LINE,
}
export enum TextViewLayer {
    BELOW_TEXT,
    ABOVE_TEXT,
}
export enum TextWindowType {
    WIDGET,
    TEXT,
    LEFT,
    RIGHT,
    TOP,
    BOTTOM,
}
export enum TreeViewColumnSizing {
    GROW_ONLY,
    AUTOSIZE,
    FIXED,
}
export enum TreeViewDropPosition {
    BEFORE,
    AFTER,
    INTO_OR_BEFORE,
    INTO_OR_AFTER,
}
export enum TreeViewGridLines {
    NONE,
    HORIZONTAL,
    VERTICAL,
    BOTH,
}
export enum Unit {
    NONE,
    POINTS,
    INCH,
    MM,
}
export enum WrapMode {
    NONE,
    CHAR,
    WORD,
    WORD_CHAR,
}
export enum ApplicationInhibitFlags {
    LOGOUT,
    SWITCH,
    SUSPEND,
    IDLE,
}
export enum BuilderClosureFlags {
    SWAPPED,
}
export enum CellRendererState {
    SELECTED,
    PRELIT,
    INSENSITIVE,
    SORTED,
    FOCUSED,
    EXPANDABLE,
    EXPANDED,
}
export enum DebugFlags {
    TEXT,
    TREE,
    KEYBINDINGS,
    MODULES,
    GEOMETRY,
    ICONTHEME,
    PRINTING,
    BUILDER,
    SIZE_REQUEST,
    NO_CSS_CACHE,
    INTERACTIVE,
    TOUCHSCREEN,
    ACTIONS,
    LAYOUT,
    SNAPSHOT,
    CONSTRAINTS,
    BUILDER_OBJECTS,
    A11Y,
    ICONFALLBACK,
}
export enum DialogFlags {
    MODAL,
    DESTROY_WITH_PARENT,
    USE_HEADER_BAR,
}
export enum EventControllerScrollFlags {
    NONE,
    VERTICAL,
    HORIZONTAL,
    DISCRETE,
    KINETIC,
    BOTH_AXES,
}
export enum FontChooserLevel {
    FAMILY,
    STYLE,
    SIZE,
    VARIATIONS,
    FEATURES,
}
export enum IconLookupFlags {
    FORCE_REGULAR,
    FORCE_SYMBOLIC,
    PRELOAD,
}
export enum InputHints {
    NONE,
    SPELLCHECK,
    NO_SPELLCHECK,
    WORD_COMPLETION,
    LOWERCASE,
    UPPERCASE_CHARS,
    UPPERCASE_WORDS,
    UPPERCASE_SENTENCES,
    INHIBIT_OSK,
    VERTICAL_WRITING,
    EMOJI,
    NO_EMOJI,
    PRIVATE,
}
export enum PickFlags {
    DEFAULT,
    INSENSITIVE,
    NON_TARGETABLE,
}
export enum PopoverMenuFlags {
    NESTED,
}
export enum PrintCapabilities {
    PAGE_SET,
    COPIES,
    COLLATE,
    REVERSE,
    SCALE,
    GENERATE_PDF,
    GENERATE_PS,
    PREVIEW,
    NUMBER_UP,
    NUMBER_UP_LAYOUT,
}
export enum ShortcutActionFlags {
    EXCLUSIVE,
}
export enum StateFlags {
    NORMAL,
    ACTIVE,
    PRELIGHT,
    SELECTED,
    INSENSITIVE,
    INCONSISTENT,
    FOCUSED,
    BACKDROP,
    DIR_LTR,
    DIR_RTL,
    LINK,
    VISITED,
    CHECKED,
    DROP_ACTIVE,
    FOCUS_VISIBLE,
    FOCUS_WITHIN,
}
export enum StyleContextPrintFlags {
    NONE,
    RECURSE,
    SHOW_STYLE,
    SHOW_CHANGE,
}
export enum TextSearchFlags {
    VISIBLE_ONLY,
    TEXT_ONLY,
    CASE_INSENSITIVE,
}
export enum TreeModelFlags {
    ITERS_PERSIST,
    LIST_ONLY,
}
export const ACCESSIBLE_VALUE_UNDEFINED: number
export const BINARY_AGE: number
export const IM_MODULE_EXTENSION_POINT_NAME: string
export const INPUT_ERROR: number
export const INTERFACE_AGE: number
export const LEVEL_BAR_OFFSET_FULL: string
export const LEVEL_BAR_OFFSET_HIGH: string
export const LEVEL_BAR_OFFSET_LOW: string
export const MAJOR_VERSION: number
export const MAX_COMPOSE_LEN: number
export const MEDIA_FILE_EXTENSION_POINT_NAME: string
export const MICRO_VERSION: number
export const MINOR_VERSION: number
export const PAPER_NAME_A3: string
export const PAPER_NAME_A4: string
export const PAPER_NAME_A5: string
export const PAPER_NAME_B5: string
export const PAPER_NAME_EXECUTIVE: string
export const PAPER_NAME_LEGAL: string
export const PAPER_NAME_LETTER: string
export const PRINT_SETTINGS_COLLATE: string
export const PRINT_SETTINGS_DEFAULT_SOURCE: string
export const PRINT_SETTINGS_DITHER: string
export const PRINT_SETTINGS_DUPLEX: string
export const PRINT_SETTINGS_FINISHINGS: string
export const PRINT_SETTINGS_MEDIA_TYPE: string
export const PRINT_SETTINGS_NUMBER_UP: string
export const PRINT_SETTINGS_NUMBER_UP_LAYOUT: string
export const PRINT_SETTINGS_N_COPIES: string
export const PRINT_SETTINGS_ORIENTATION: string
export const PRINT_SETTINGS_OUTPUT_BASENAME: string
export const PRINT_SETTINGS_OUTPUT_BIN: string
export const PRINT_SETTINGS_OUTPUT_DIR: string
export const PRINT_SETTINGS_OUTPUT_FILE_FORMAT: string
export const PRINT_SETTINGS_OUTPUT_URI: string
export const PRINT_SETTINGS_PAGE_RANGES: string
export const PRINT_SETTINGS_PAGE_SET: string
export const PRINT_SETTINGS_PAPER_FORMAT: string
export const PRINT_SETTINGS_PAPER_HEIGHT: string
export const PRINT_SETTINGS_PAPER_WIDTH: string
export const PRINT_SETTINGS_PRINTER: string
export const PRINT_SETTINGS_PRINTER_LPI: string
export const PRINT_SETTINGS_PRINT_PAGES: string
export const PRINT_SETTINGS_QUALITY: string
export const PRINT_SETTINGS_RESOLUTION: string
export const PRINT_SETTINGS_RESOLUTION_X: string
export const PRINT_SETTINGS_RESOLUTION_Y: string
export const PRINT_SETTINGS_REVERSE: string
export const PRINT_SETTINGS_SCALE: string
export const PRINT_SETTINGS_USE_COLOR: string
export const PRINT_SETTINGS_WIN32_DRIVER_EXTRA: string
export const PRINT_SETTINGS_WIN32_DRIVER_VERSION: string
export const PRIORITY_RESIZE: number
export const STYLE_PROVIDER_PRIORITY_APPLICATION: number
export const STYLE_PROVIDER_PRIORITY_FALLBACK: number
export const STYLE_PROVIDER_PRIORITY_SETTINGS: number
export const STYLE_PROVIDER_PRIORITY_THEME: number
export const STYLE_PROVIDER_PRIORITY_USER: number
export const TEXT_VIEW_PRIORITY_VALIDATE: number
export const TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID: number
export const TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID: number
export function accelerator_get_default_mod_mask(): Gdk.ModifierType
export function accelerator_get_label(accelerator_key: number, accelerator_mods: Gdk.ModifierType): string
export function accelerator_get_label_with_keycode(display: Gdk.Display | null, accelerator_key: number, keycode: number, accelerator_mods: Gdk.ModifierType): string
export function accelerator_name(accelerator_key: number, accelerator_mods: Gdk.ModifierType): string
export function accelerator_name_with_keycode(display: Gdk.Display | null, accelerator_key: number, keycode: number, accelerator_mods: Gdk.ModifierType): string
export function accelerator_parse(accelerator: string): [ /* returnType */ boolean, /* accelerator_key */ number | null, /* accelerator_mods */ Gdk.ModifierType | null ]
export function accelerator_parse_with_keycode(accelerator: string, display?: Gdk.Display | null): [ /* returnType */ boolean, /* accelerator_key */ number | null, /* accelerator_codes */ number[] | null, /* accelerator_mods */ Gdk.ModifierType | null ]
export function accelerator_valid(keyval: number, modifiers: Gdk.ModifierType): boolean
export function accessible_property_init_value(property: AccessibleProperty, value: any): void
export function accessible_relation_init_value(relation: AccessibleRelation, value: any): void
export function accessible_state_init_value(state: AccessibleState, value: any): void
export function bitset_iter_init_at(set: Bitset, target: number): [ /* returnType */ boolean, /* iter */ BitsetIter, /* value */ number | null ]
export function bitset_iter_init_first(set: Bitset): [ /* returnType */ boolean, /* iter */ BitsetIter, /* value */ number | null ]
export function bitset_iter_init_last(set: Bitset): [ /* returnType */ boolean, /* iter */ BitsetIter, /* value */ number | null ]
export function builder_error_quark(): GLib.Quark
export function check_version(required_major: number, required_minor: number, required_micro: number): string | null
export function constraint_vfl_parser_error_quark(): GLib.Quark
export function css_parser_error_quark(): GLib.Quark
export function css_parser_warning_quark(): GLib.Quark
export function disable_setlocale(): void
export function distribute_natural_allocation(extra_space: number, sizes: RequestedSize[]): number
export function editable_delegate_get_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
export function editable_delegate_set_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
export function editable_install_properties(object_class: GObject.ObjectClass, first_prop: number): number
export function enumerate_printers(func: PrinterFunc, wait: boolean): void
export function file_chooser_error_quark(): GLib.Quark
export function get_binary_age(): number
export function get_debug_flags(): DebugFlags
export function get_default_language(): Pango.Language
export function get_interface_age(): number
export function get_locale_direction(): TextDirection
export function get_major_version(): number
export function get_micro_version(): number
export function get_minor_version(): number
export function hsv_to_rgb(h: number, s: number, v: number): [ /* r */ number, /* g */ number, /* b */ number ]
export function icon_theme_error_quark(): GLib.Quark
export function init(): void
export function init_check(): boolean
export function is_initialized(): boolean
export function native_get_for_surface(surface: Gdk.Surface): Native
export function ordering_from_cmpfunc(cmpfunc_result: number): Ordering
export function paper_size_get_default(): string
export function paper_size_get_paper_sizes(include_custom: boolean): PaperSize[]
export function param_spec_expression(name: string, nick: string, blurb: string, flags: GObject.ParamFlags): GObject.ParamSpec
export function print_error_quark(): GLib.Quark
export function print_run_page_setup_dialog(parent: Window | null, page_setup: PageSetup | null, settings: PrintSettings): PageSetup
export function print_run_page_setup_dialog_async(parent: Window | null, page_setup: PageSetup | null, settings: PrintSettings, done_cb: PageSetupDoneFunc): void
export function recent_manager_error_quark(): GLib.Quark
export function render_activity(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_arrow(context: StyleContext, cr: cairo.Context, angle: number, x: number, y: number, size: number): void
export function render_background(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_check(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_expander(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_focus(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_frame(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_handle(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_icon(context: StyleContext, cr: cairo.Context, texture: Gdk.Texture, x: number, y: number): void
export function render_layout(context: StyleContext, cr: cairo.Context, x: number, y: number, layout: Pango.Layout): void
export function render_line(context: StyleContext, cr: cairo.Context, x0: number, y0: number, x1: number, y1: number): void
export function render_option(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function rgb_to_hsv(r: number, g: number, b: number): [ /* h */ number, /* s */ number, /* v */ number ]
export function set_debug_flags(flags: DebugFlags): void
export function show_uri(parent: Window | null, uri: string, timestamp: number): void
export function show_uri_full(parent: Window | null, uri: string, timestamp: number, cancellable?: Gio.Cancellable | null): void
export function show_uri_full_finish(parent: Window, result: Gio.AsyncResult): boolean
export function test_accessible_assertion_message_role(domain: string, file: string, line: number, func: string, expr: string, accessible: Accessible, expected_role: AccessibleRole, actual_role: AccessibleRole): void
export function test_accessible_has_property(accessible: Accessible, property: AccessibleProperty): boolean
export function test_accessible_has_relation(accessible: Accessible, relation: AccessibleRelation): boolean
export function test_accessible_has_role(accessible: Accessible, role: AccessibleRole): boolean
export function test_accessible_has_state(accessible: Accessible, state: AccessibleState): boolean
export function test_list_all_types(): GObject.Type[]
export function test_register_all_types(): void
export function test_widget_wait_for_draw(widget: Widget): void
export function tree_create_row_drag_content(tree_model: TreeModel, path: TreePath): Gdk.ContentProvider
export function tree_get_row_drag_data(value: any): [ /* returnType */ boolean, /* tree_model */ TreeModel | null, /* path */ TreePath | null ]
export function tree_row_reference_deleted(proxy: GObject.Object, path: TreePath): void
export function tree_row_reference_inserted(proxy: GObject.Object, path: TreePath): void
export function value_dup_expression(value: any): Expression | null
export function value_get_expression(value: any): Expression | null
export function value_set_expression(value: any, expression: Expression): void
export function value_take_expression(value: any, expression?: Expression | null): void
export interface AssistantPageFunc {
    (current_page: number): number
}
export interface CellAllocCallback {
    (renderer: CellRenderer, cell_area: Gdk.Rectangle, cell_background: Gdk.Rectangle): boolean
}
export interface CellCallback {
    (renderer: CellRenderer): boolean
}
export interface CellLayoutDataFunc {
    (cell_layout: CellLayout, cell: CellRenderer, tree_model: TreeModel, iter: TreeIter): void
}
export interface CustomAllocateFunc {
    (widget: Widget, width: number, height: number, baseline: number): void
}
export interface CustomFilterFunc {
    (item: GObject.Object): boolean
}
export interface CustomMeasureFunc {
    (widget: Widget, orientation: Orientation, for_size: number): void
}
export interface CustomRequestModeFunc {
    (widget: Widget): SizeRequestMode
}
export interface DrawingAreaDrawFunc {
    (drawing_area: DrawingArea, cr: cairo.Context, width: number, height: number): void
}
export interface EntryCompletionMatchFunc {
    (completion: EntryCompletion, key: string, iter: TreeIter): boolean
}
export interface ExpressionNotify {
    (): void
}
export interface FlowBoxCreateWidgetFunc {
    (item: GObject.Object): Widget
}
export interface FlowBoxFilterFunc {
    (child: FlowBoxChild): boolean
}
export interface FlowBoxForeachFunc {
    (box: FlowBox, child: FlowBoxChild): void
}
export interface FlowBoxSortFunc {
    (child1: FlowBoxChild, child2: FlowBoxChild): number
}
export interface FontFilterFunc {
    (family: Pango.FontFamily, face: Pango.FontFace): boolean
}
export interface IconViewForeachFunc {
    (icon_view: IconView, path: TreePath): void
}
export interface ListBoxCreateWidgetFunc {
    (item: GObject.Object): Widget
}
export interface ListBoxFilterFunc {
    (row: ListBoxRow): boolean
}
export interface ListBoxForeachFunc {
    (box: ListBox, row: ListBoxRow): void
}
export interface ListBoxSortFunc {
    (row1: ListBoxRow, row2: ListBoxRow): number
}
export interface ListBoxUpdateHeaderFunc {
    (row: ListBoxRow, before?: ListBoxRow | null): void
}
export interface MapListModelMapFunc {
    (item: GObject.Object): GObject.Object
}
export interface MenuButtonCreatePopupFunc {
    (menu_button: MenuButton): void
}
export interface PageSetupDoneFunc {
    (page_setup: PageSetup): void
}
export interface PrintJobCompleteFunc {
    (print_job: PrintJob, error: GLib.Error): void
}
export interface PrintSettingsFunc {
    (key: string, value: string): void
}
export interface PrinterFunc {
    (printer: Printer): boolean
}
export interface ScaleFormatValueFunc {
    (scale: Scale, value: number): string
}
export interface ShortcutFunc {
    (widget: Widget, args?: GLib.Variant | null): boolean
}
export interface TextCharPredicate {
    (ch: number): boolean
}
export interface TextTagTableForeach {
    (tag: TextTag): void
}
export interface TickCallback {
    (widget: Widget, frame_clock: Gdk.FrameClock): boolean
}
export interface TreeCellDataFunc {
    (tree_column: TreeViewColumn, cell: CellRenderer, tree_model: TreeModel, iter: TreeIter): void
}
export interface TreeIterCompareFunc {
    (model: TreeModel, a: TreeIter, b: TreeIter): number
}
export interface TreeListModelCreateModelFunc {
    (item: GObject.Object): Gio.ListModel | null
}
export interface TreeModelFilterModifyFunc {
    (model: TreeModel, iter: TreeIter, column: number): void
}
export interface TreeModelFilterVisibleFunc {
    (model: TreeModel, iter: TreeIter): boolean
}
export interface TreeModelForeachFunc {
    (model: TreeModel, path: TreePath, iter: TreeIter): boolean
}
export interface TreeSelectionForeachFunc {
    (model: TreeModel, path: TreePath, iter: TreeIter): void
}
export interface TreeSelectionFunc {
    (selection: TreeSelection, model: TreeModel, path: TreePath, path_currently_selected: boolean): boolean
}
export interface TreeViewColumnDropFunc {
    (tree_view: TreeView, column: TreeViewColumn, prev_column: TreeViewColumn, next_column: TreeViewColumn): boolean
}
export interface TreeViewMappingFunc {
    (tree_view: TreeView, path: TreePath): void
}
export interface TreeViewRowSeparatorFunc {
    (model: TreeModel, iter: TreeIter): boolean
}
export interface TreeViewSearchEqualFunc {
    (model: TreeModel, column: number, key: string, iter: TreeIter): boolean
}
export interface WidgetActionActivateFunc {
    (widget: Widget, action_name: string, parameter: GLib.Variant): void
}
export class Accessible {
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    static name: string
}
export interface Actionable_ConstructProps extends Widget_ConstructProps {
    action_name?: string
    action_target?: GLib.Variant
}
export class Actionable {
    /* Properties of Gtk.Actionable */
    action_name: string
    action_target: GLib.Variant
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant | null
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value?: GLib.Variant | null): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Actionable */
    vfunc_get_action_name(): string | null
    vfunc_get_action_target_value(): GLib.Variant | null
    vfunc_set_action_name(action_name?: string | null): void
    vfunc_set_action_target_value(target_value?: GLib.Variant | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Actionable) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Actionable) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Actionable, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Actionable, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Actionable) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Actionable) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Actionable, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Actionable, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Actionable) => void)): number
    connect_after(sigName: "map", callback: (($obj: Actionable) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Actionable, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Actionable, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Actionable, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Actionable, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Actionable, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Actionable, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Actionable) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Actionable) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Actionable) => void)): number
    connect_after(sigName: "show", callback: (($obj: Actionable) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Actionable, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Actionable, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Actionable) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Actionable) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Actionable) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Actionable) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::action-name", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-target", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-target", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Actionable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Actionable_ConstructProps)
    _init (config?: Actionable_ConstructProps): void
    static $gtype: GObject.Type
}
export interface AppChooser_ConstructProps extends Widget_ConstructProps {
    content_type?: string
}
export class AppChooser {
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.AppChooser */
    get_app_info(): Gio.AppInfo | null
    get_content_type(): string
    refresh(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: AppChooser) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: AppChooser) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: AppChooser, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: AppChooser, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: AppChooser) => void)): number
    connect_after(sigName: "hide", callback: (($obj: AppChooser) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: AppChooser, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: AppChooser, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: AppChooser) => void)): number
    connect_after(sigName: "map", callback: (($obj: AppChooser) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: AppChooser, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: AppChooser, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: AppChooser, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: AppChooser, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: AppChooser, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: AppChooser, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: AppChooser) => void)): number
    connect_after(sigName: "realize", callback: (($obj: AppChooser) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: AppChooser) => void)): number
    connect_after(sigName: "show", callback: (($obj: AppChooser) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: AppChooser, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: AppChooser, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: AppChooser) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: AppChooser) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: AppChooser) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: AppChooser) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::can-focus", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: AppChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AppChooser_ConstructProps)
    _init (config?: AppChooser_ConstructProps): void
    static $gtype: GObject.Type
}
export class Buildable {
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Buildable */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    static name: string
}
export class BuilderScope {
    /* Virtual methods of Gtk.BuilderScope */
    vfunc_create_closure(builder: Builder, function_name: string, flags: BuilderClosureFlags, object: GObject.Object): Function
    vfunc_get_type_from_function(builder: Builder, function_name: string): GObject.Type
    vfunc_get_type_from_name(builder: Builder, type_name: string): GObject.Type
    static name: string
}
export interface CellEditable_ConstructProps extends Widget_ConstructProps {
    editing_canceled?: boolean
}
export class CellEditable {
    /* Properties of Gtk.CellEditable */
    editing_canceled: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellEditable */
    vfunc_editing_done(): void
    vfunc_remove_widget(): void
    vfunc_start_editing(event?: Gdk.Event | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "editing-done", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "editing-done"): void
    connect(sigName: "remove-widget", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "remove-widget", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "remove-widget"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: CellEditable, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: CellEditable, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "hide", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: CellEditable, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: CellEditable, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "map", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: CellEditable, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: CellEditable, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: CellEditable, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: CellEditable, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: CellEditable, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: CellEditable, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "realize", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "show", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: CellEditable, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: CellEditable, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: CellEditable) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: CellEditable) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::editing-canceled", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing-canceled", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: CellEditable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellEditable_ConstructProps)
    _init (config?: CellEditable_ConstructProps): void
    static $gtype: GObject.Type
}
export class CellLayout {
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of Gtk.CellLayout */
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    static name: string
}
export class ColorChooser {
    /* Properties of Gtk.ColorChooser */
    rgba: Gdk.RGBA
    use_alpha: boolean
    /* Methods of Gtk.ColorChooser */
    add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    get_rgba(): /* color */ Gdk.RGBA
    get_use_alpha(): boolean
    set_rgba(color: Gdk.RGBA): void
    set_use_alpha(use_alpha: boolean): void
    /* Virtual methods of Gtk.ColorChooser */
    vfunc_add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    vfunc_color_activated(color: Gdk.RGBA): void
    vfunc_get_rgba(): /* color */ Gdk.RGBA
    vfunc_set_rgba(color: Gdk.RGBA): void
    /* Signals of Gtk.ColorChooser */
    connect(sigName: "color-activated", callback: (($obj: ColorChooser, color: Gdk.RGBA) => void)): number
    connect_after(sigName: "color-activated", callback: (($obj: ColorChooser, color: Gdk.RGBA) => void)): number
    emit(sigName: "color-activated", color: Gdk.RGBA): void
    static name: string
}
export class ConstraintTarget {
    static name: string
}
export interface Editable_ConstructProps extends Widget_ConstructProps {
    editable?: boolean
    enable_undo?: boolean
    max_width_chars?: number
    text?: string
    width_chars?: number
    xalign?: number
}
export class Editable {
    /* Properties of Gtk.Editable */
    readonly cursor_position: number
    editable: boolean
    enable_undo: boolean
    max_width_chars: number
    readonly selection_bound: number
    text: string
    width_chars: number
    xalign: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Editable */
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    finish_delegate(): void
    get_alignment(): number
    get_chars(start_pos: number, end_pos: number): string
    get_delegate(): Editable | null
    get_editable(): boolean
    get_enable_undo(): boolean
    get_max_width_chars(): number
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    get_text(): string
    get_width_chars(): number
    init_delegate(): void
    insert_text(text: string, length: number, position: number): /* position */ number
    select_region(start_pos: number, end_pos: number): void
    set_alignment(xalign: number): void
    set_editable(is_editable: boolean): void
    set_enable_undo(enable_undo: boolean): void
    set_max_width_chars(n_chars: number): void
    set_position(position: number): void
    set_text(text: string): void
    set_width_chars(n_chars: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Editable */
    vfunc_changed(): void
    vfunc_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_get_delegate(): Editable | null
    vfunc_get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    vfunc_get_text(): string
    vfunc_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_set_selection_bounds(start_pos: number, end_pos: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: (($obj: Editable) => void)): number
    connect_after(sigName: "changed", callback: (($obj: Editable) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "delete-text", callback: (($obj: Editable, start_pos: number, end_pos: number) => void)): number
    connect_after(sigName: "delete-text", callback: (($obj: Editable, start_pos: number, end_pos: number) => void)): number
    emit(sigName: "delete-text", start_pos: number, end_pos: number): void
    connect(sigName: "insert-text", callback: (($obj: Editable, text: string, length: number, position: number) => void)): number
    connect_after(sigName: "insert-text", callback: (($obj: Editable, text: string, length: number, position: number) => void)): number
    emit(sigName: "insert-text", text: string, length: number, position: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Editable) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Editable) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Editable, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Editable, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Editable) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Editable) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Editable, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Editable, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Editable) => void)): number
    connect_after(sigName: "map", callback: (($obj: Editable) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Editable, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Editable, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Editable, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Editable, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Editable, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Editable, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Editable) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Editable) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Editable) => void)): number
    connect_after(sigName: "show", callback: (($obj: Editable) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Editable, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Editable, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Editable) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Editable) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Editable) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Editable) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::cursor-position", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-position", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-undo", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-undo", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-bound", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-bound", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Editable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Editable_ConstructProps)
    _init (config?: Editable_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static delegate_get_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static delegate_set_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static install_properties(object_class: GObject.ObjectClass, first_prop: number): number
    static $gtype: GObject.Type
}
export class FileChooser {
    /* Properties of Gtk.FileChooser */
    action: FileChooserAction
    create_folders: boolean
    filter: FileFilter
    readonly filters: Gio.ListModel
    select_multiple: boolean
    readonly shortcut_folders: Gio.ListModel
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options?: string[] | null, option_labels?: string[] | null): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: Gio.File): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): Gio.File
    get_current_name(): string
    get_file(): Gio.File
    get_files(): Gio.ListModel
    get_filter(): FileFilter | null
    get_filters(): Gio.ListModel
    get_select_multiple(): boolean
    get_shortcut_folders(): Gio.ListModel
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: Gio.File): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(file: Gio.File): boolean
    set_current_name(name: string): void
    set_file(file: Gio.File): boolean
    set_filter(filter: FileFilter): void
    set_select_multiple(select_multiple: boolean): void
    static name: string
}
export class FontChooser {
    /* Properties of Gtk.FontChooser */
    font: string
    font_desc: Pango.FontDescription
    readonly font_features: string
    language: string
    level: FontChooserLevel
    preview_text: string
    show_preview_entry: boolean
    /* Methods of Gtk.FontChooser */
    get_font(): string | null
    get_font_desc(): Pango.FontDescription | null
    get_font_face(): Pango.FontFace | null
    get_font_family(): Pango.FontFamily | null
    get_font_features(): string
    get_font_map(): Pango.FontMap | null
    get_font_size(): number
    get_language(): string
    get_level(): FontChooserLevel
    get_preview_text(): string
    get_show_preview_entry(): boolean
    set_filter_func(filter: FontFilterFunc | null): void
    set_font(fontname: string): void
    set_font_desc(font_desc: Pango.FontDescription): void
    set_font_map(fontmap?: Pango.FontMap | null): void
    set_language(language: string): void
    set_level(level: FontChooserLevel): void
    set_preview_text(text: string): void
    set_show_preview_entry(show_preview_entry: boolean): void
    /* Virtual methods of Gtk.FontChooser */
    vfunc_font_activated(fontname: string): void
    vfunc_get_font_face(): Pango.FontFace | null
    vfunc_get_font_family(): Pango.FontFamily | null
    vfunc_get_font_map(): Pango.FontMap | null
    vfunc_get_font_size(): number
    vfunc_set_filter_func(filter: FontFilterFunc | null): void
    vfunc_set_font_map(fontmap?: Pango.FontMap | null): void
    /* Signals of Gtk.FontChooser */
    connect(sigName: "font-activated", callback: (($obj: FontChooser, fontname: string) => void)): number
    connect_after(sigName: "font-activated", callback: (($obj: FontChooser, fontname: string) => void)): number
    emit(sigName: "font-activated", fontname: string): void
    static name: string
}
export interface Native_ConstructProps extends Widget_ConstructProps {
}
export class Native {
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    realize(): void
    unrealize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Native) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Native) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Native, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Native, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Native) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Native) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Native, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Native, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Native) => void)): number
    connect_after(sigName: "map", callback: (($obj: Native) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Native, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Native, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Native, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Native, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Native, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Native, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Native) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Native) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Native) => void)): number
    connect_after(sigName: "show", callback: (($obj: Native) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Native, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Native, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Native) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Native) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Native) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Native) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::can-focus", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Native, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Native_ConstructProps)
    _init (config?: Native_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get_for_surface(surface: Gdk.Surface): Native
    static $gtype: GObject.Type
}
export class Orientable {
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    static name: string
}
export class PrintOperationPreview {
    /* Methods of Gtk.PrintOperationPreview */
    end_preview(): void
    is_selected(page_nr: number): boolean
    render_page(page_nr: number): void
    /* Virtual methods of Gtk.PrintOperationPreview */
    vfunc_end_preview(): void
    vfunc_got_page_size(context: PrintContext, page_setup: PageSetup): void
    vfunc_is_selected(page_nr: number): boolean
    vfunc_ready(context: PrintContext): void
    vfunc_render_page(page_nr: number): void
    /* Signals of Gtk.PrintOperationPreview */
    connect(sigName: "got-page-size", callback: (($obj: PrintOperationPreview, context: PrintContext, page_setup: PageSetup) => void)): number
    connect_after(sigName: "got-page-size", callback: (($obj: PrintOperationPreview, context: PrintContext, page_setup: PageSetup) => void)): number
    emit(sigName: "got-page-size", context: PrintContext, page_setup: PageSetup): void
    connect(sigName: "ready", callback: (($obj: PrintOperationPreview, context: PrintContext) => void)): number
    connect_after(sigName: "ready", callback: (($obj: PrintOperationPreview, context: PrintContext) => void)): number
    emit(sigName: "ready", context: PrintContext): void
    static name: string
}
export interface Root_ConstructProps extends Native_ConstructProps {
}
export class Root {
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Root */
    get_display(): Gdk.Display
    get_focus(): Widget | null
    set_focus(focus?: Widget | null): void
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    realize(): void
    unrealize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Root) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Root) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Root, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Root, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Root) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Root) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Root, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Root, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Root) => void)): number
    connect_after(sigName: "map", callback: (($obj: Root) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Root, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Root, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Root, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Root, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Root, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Root, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Root) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Root) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Root) => void)): number
    connect_after(sigName: "show", callback: (($obj: Root) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Root, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Root, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Root) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Root) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Root) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Root) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::can-focus", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Root, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Root_ConstructProps)
    _init (config?: Root_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get_for_surface(surface: Gdk.Surface): Native
    static $gtype: GObject.Type
}
export class Scrollable {
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.Scrollable */
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    static name: string
}
export class SelectionModel {
    /* Methods of Gtk.SelectionModel */
    get_selection(): Bitset
    get_selection_in_range(position: number, n_items: number): Bitset
    is_selected(position: number): boolean
    select_all(): boolean
    select_item(position: number, unselect_rest: boolean): boolean
    select_range(position: number, n_items: number, unselect_rest: boolean): boolean
    selection_changed(position: number, n_items: number): void
    set_selection(selected: Bitset, mask: Bitset): boolean
    unselect_all(): boolean
    unselect_item(position: number): boolean
    unselect_range(position: number, n_items: number): boolean
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.SelectionModel */
    vfunc_get_selection_in_range(position: number, n_items: number): Bitset
    vfunc_is_selected(position: number): boolean
    vfunc_select_all(): boolean
    vfunc_select_item(position: number, unselect_rest: boolean): boolean
    vfunc_select_range(position: number, n_items: number, unselect_rest: boolean): boolean
    vfunc_set_selection(selected: Bitset, mask: Bitset): boolean
    vfunc_unselect_all(): boolean
    vfunc_unselect_item(position: number): boolean
    vfunc_unselect_range(position: number, n_items: number): boolean
    /* Virtual methods of Gio.ListModel */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Signals of Gtk.SelectionModel */
    connect(sigName: "selection-changed", callback: (($obj: SelectionModel, position: number, n_items: number) => void)): number
    connect_after(sigName: "selection-changed", callback: (($obj: SelectionModel, position: number, n_items: number) => void)): number
    emit(sigName: "selection-changed", position: number, n_items: number): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: SelectionModel, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: SelectionModel, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    static name: string
}
export class ShortcutManager {
    /* Virtual methods of Gtk.ShortcutManager */
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    static name: string
}
export class StyleProvider {
    /* Signals of Gtk.StyleProvider */
    connect(sigName: "gtk-private-changed", callback: (($obj: StyleProvider) => void)): number
    connect_after(sigName: "gtk-private-changed", callback: (($obj: StyleProvider) => void)): number
    emit(sigName: "gtk-private-changed"): void
    static name: string
}
export class TreeDragDest {
    /* Methods of Gtk.TreeDragDest */
    drag_data_received(dest: TreePath, value: any): boolean
    row_drop_possible(dest_path: TreePath, value: any): boolean
    /* Virtual methods of Gtk.TreeDragDest */
    vfunc_drag_data_received(dest: TreePath, value: any): boolean
    vfunc_row_drop_possible(dest_path: TreePath, value: any): boolean
    static name: string
}
export class TreeDragSource {
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath): Gdk.ContentProvider | null
    row_draggable(path: TreePath): boolean
    /* Virtual methods of Gtk.TreeDragSource */
    vfunc_drag_data_delete(path: TreePath): boolean
    vfunc_drag_data_get(path: TreePath): Gdk.ContentProvider | null
    vfunc_row_draggable(path: TreePath): boolean
    static name: string
}
export class TreeModel {
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): GObject.Type
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string | null
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    unref_node(iter: TreeIter): void
    /* Virtual methods of Gtk.TreeModel */
    vfunc_get_column_type(index_: number): GObject.Type
    vfunc_get_flags(): TreeModelFlags
    vfunc_get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_get_n_columns(): number
    vfunc_get_path(iter: TreeIter): TreePath
    vfunc_get_value(iter: TreeIter, column: number): /* value */ any
    vfunc_iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_has_child(iter: TreeIter): boolean
    vfunc_iter_n_children(iter?: TreeIter | null): number
    vfunc_iter_next(iter: TreeIter): boolean
    vfunc_iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_previous(iter: TreeIter): boolean
    vfunc_ref_node(iter: TreeIter): void
    vfunc_row_changed(path: TreePath, iter: TreeIter): void
    vfunc_row_deleted(path: TreePath): void
    vfunc_row_has_child_toggled(path: TreePath, iter: TreeIter): void
    vfunc_row_inserted(path: TreePath, iter: TreeIter): void
    vfunc_unref_node(iter: TreeIter): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: (($obj: TreeModel, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-changed", callback: (($obj: TreeModel, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-changed", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-deleted", callback: (($obj: TreeModel, path: TreePath) => void)): number
    connect_after(sigName: "row-deleted", callback: (($obj: TreeModel, path: TreePath) => void)): number
    emit(sigName: "row-deleted", path: TreePath): void
    connect(sigName: "row-has-child-toggled", callback: (($obj: TreeModel, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-has-child-toggled", callback: (($obj: TreeModel, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-has-child-toggled", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-inserted", callback: (($obj: TreeModel, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-inserted", callback: (($obj: TreeModel, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-inserted", path: TreePath, iter: TreeIter): void
    connect(sigName: "rows-reordered", callback: (($obj: TreeModel, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    connect_after(sigName: "rows-reordered", callback: (($obj: TreeModel, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    emit(sigName: "rows-reordered", path: TreePath, iter: TreeIter, new_order?: object | null): void
    static name: string
}
export class TreeSortable {
    /* Methods of Gtk.TreeSortable */
    get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    has_default_sort_func(): boolean
    set_default_sort_func(sort_func: TreeIterCompareFunc): void
    set_sort_column_id(sort_column_id: number, order: SortType): void
    set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc): void
    sort_column_changed(): void
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): GObject.Type
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string | null
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    unref_node(iter: TreeIter): void
    /* Virtual methods of Gtk.TreeSortable */
    vfunc_get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    vfunc_has_default_sort_func(): boolean
    vfunc_set_default_sort_func(sort_func: TreeIterCompareFunc): void
    vfunc_set_sort_column_id(sort_column_id: number, order: SortType): void
    vfunc_set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc): void
    vfunc_sort_column_changed(): void
    /* Virtual methods of Gtk.TreeModel */
    vfunc_get_column_type(index_: number): GObject.Type
    vfunc_get_flags(): TreeModelFlags
    vfunc_get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_get_n_columns(): number
    vfunc_get_path(iter: TreeIter): TreePath
    vfunc_get_value(iter: TreeIter, column: number): /* value */ any
    vfunc_iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_has_child(iter: TreeIter): boolean
    vfunc_iter_n_children(iter?: TreeIter | null): number
    vfunc_iter_next(iter: TreeIter): boolean
    vfunc_iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_previous(iter: TreeIter): boolean
    vfunc_ref_node(iter: TreeIter): void
    vfunc_row_changed(path: TreePath, iter: TreeIter): void
    vfunc_row_deleted(path: TreePath): void
    vfunc_row_has_child_toggled(path: TreePath, iter: TreeIter): void
    vfunc_row_inserted(path: TreePath, iter: TreeIter): void
    vfunc_unref_node(iter: TreeIter): void
    /* Signals of Gtk.TreeSortable */
    connect(sigName: "sort-column-changed", callback: (($obj: TreeSortable) => void)): number
    connect_after(sigName: "sort-column-changed", callback: (($obj: TreeSortable) => void)): number
    emit(sigName: "sort-column-changed"): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: (($obj: TreeSortable, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-changed", callback: (($obj: TreeSortable, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-changed", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-deleted", callback: (($obj: TreeSortable, path: TreePath) => void)): number
    connect_after(sigName: "row-deleted", callback: (($obj: TreeSortable, path: TreePath) => void)): number
    emit(sigName: "row-deleted", path: TreePath): void
    connect(sigName: "row-has-child-toggled", callback: (($obj: TreeSortable, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-has-child-toggled", callback: (($obj: TreeSortable, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-has-child-toggled", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-inserted", callback: (($obj: TreeSortable, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-inserted", callback: (($obj: TreeSortable, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-inserted", path: TreePath, iter: TreeIter): void
    connect(sigName: "rows-reordered", callback: (($obj: TreeSortable, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    connect_after(sigName: "rows-reordered", callback: (($obj: TreeSortable, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    emit(sigName: "rows-reordered", path: TreePath, iter: TreeIter, new_order?: object | null): void
    static name: string
}
export interface ATContext_ConstructProps extends GObject.Object_ConstructProps {
    accessible?: Accessible
    accessible_role?: AccessibleRole
    display?: Gdk.Display
}
export class ATContext {
    /* Properties of Gtk.ATContext */
    accessible_role: AccessibleRole
    display: Gdk.Display
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ATContext */
    get_accessible(): Accessible
    get_accessible_role(): AccessibleRole
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ATContext */
    connect(sigName: "state-change", callback: (($obj: ATContext) => void)): number
    connect_after(sigName: "state-change", callback: (($obj: ATContext) => void)): number
    emit(sigName: "state-change"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ATContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ATContext, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accessible-role", callback: (($obj: ATContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ATContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: ATContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: ATContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ATContext_ConstructProps)
    _init (config?: ATContext_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static create(accessible_role: AccessibleRole, accessible: Accessible, display: Gdk.Display): ATContext
    static $gtype: GObject.Type
}
export interface AboutDialog_ConstructProps extends Window_ConstructProps {
    artists?: string[]
    authors?: string[]
    comments?: string
    copyright?: string
    documenters?: string[]
    license?: string
    license_type?: License
    logo?: Gdk.Paintable
    logo_icon_name?: string
    program_name?: string
    system_information?: string
    translator_credits?: string
    version?: string
    website?: string
    website_label?: string
    wrap_license?: boolean
    accessible_role?: AccessibleRole
}
export class AboutDialog {
    /* Properties of Gtk.AboutDialog */
    artists: string[]
    authors: string[]
    comments: string
    copyright: string
    documenters: string[]
    license: string
    license_type: License
    logo: Gdk.Paintable
    logo_icon_name: string
    program_name: string
    system_information: string
    translator_credits: string
    version: string
    website: string
    website_label: string
    wrap_license: boolean
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Window */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.AboutDialog */
    add_credit_section(section_name: string, people: string[]): void
    get_artists(): string[]
    get_authors(): string[]
    get_comments(): string | null
    get_copyright(): string | null
    get_documenters(): string[]
    get_license(): string | null
    get_license_type(): License
    get_logo(): Gdk.Paintable | null
    get_logo_icon_name(): string | null
    get_program_name(): string | null
    get_system_information(): string | null
    get_translator_credits(): string | null
    get_version(): string | null
    get_website(): string | null
    get_website_label(): string | null
    get_wrap_license(): boolean
    set_artists(artists: string[]): void
    set_authors(authors: string[]): void
    set_comments(comments?: string | null): void
    set_copyright(copyright?: string | null): void
    set_documenters(documenters: string[]): void
    set_license(license?: string | null): void
    set_license_type(license_type: License): void
    set_logo(logo?: Gdk.Paintable | null): void
    set_logo_icon_name(icon_name?: string | null): void
    set_program_name(name?: string | null): void
    set_system_information(system_information?: string | null): void
    set_translator_credits(translator_credits?: string | null): void
    set_version(version?: string | null): void
    set_website(website?: string | null): void
    set_website_label(website_label: string): void
    set_wrap_license(wrap_license: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.AboutDialog */
    connect(sigName: "activate-link", callback: (($obj: AboutDialog, uri: string) => boolean)): number
    connect_after(sigName: "activate-link", callback: (($obj: AboutDialog, uri: string) => boolean)): number
    emit(sigName: "activate-link", uri: string): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: AboutDialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: AboutDialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: AboutDialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: AboutDialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: AboutDialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: AboutDialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: AboutDialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: AboutDialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: AboutDialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: AboutDialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: AboutDialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: AboutDialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: AboutDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: AboutDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: AboutDialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: AboutDialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: AboutDialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: AboutDialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::artists", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::artists", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::authors", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::authors", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::comments", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::comments", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::copyright", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::copyright", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::documenters", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::documenters", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::license", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::license", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::license-type", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::license-type", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::logo", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::logo", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::logo-icon-name", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::logo-icon-name", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::program-name", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::program-name", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::system-information", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-information", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translator-credits", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translator-credits", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::version", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::version", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::website", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::website", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::website-label", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::website-label", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-license", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-license", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: AboutDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AboutDialog_ConstructProps)
    _init (config?: AboutDialog_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): AboutDialog
    static $gtype: GObject.Type
}
export interface ActionBar_ConstructProps extends Widget_ConstructProps {
    revealed?: boolean
    accessible_role?: AccessibleRole
}
export class ActionBar {
    /* Properties of Gtk.ActionBar */
    revealed: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ActionBar */
    get_center_widget(): Widget | null
    get_revealed(): boolean
    pack_end(child: Widget): void
    pack_start(child: Widget): void
    remove(child: Widget): void
    set_center_widget(center_widget?: Widget | null): void
    set_revealed(revealed: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ActionBar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ActionBar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ActionBar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ActionBar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ActionBar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ActionBar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ActionBar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ActionBar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ActionBar) => void)): number
    connect_after(sigName: "map", callback: (($obj: ActionBar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ActionBar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ActionBar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ActionBar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ActionBar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ActionBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ActionBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ActionBar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ActionBar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ActionBar) => void)): number
    connect_after(sigName: "show", callback: (($obj: ActionBar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ActionBar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ActionBar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ActionBar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ActionBar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ActionBar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ActionBar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::revealed", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::revealed", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ActionBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ActionBar_ConstructProps)
    _init (config?: ActionBar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ActionBar
    static $gtype: GObject.Type
}
export interface ActivateAction_ConstructProps extends ShortcutAction_ConstructProps {
}
export class ActivateAction {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutAction */
    activate(flags: ShortcutActionFlags, widget: Widget, args?: GLib.Variant | null): boolean
    print(string: GLib.String): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ActivateAction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ActivateAction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ActivateAction_ConstructProps)
    _init (config?: ActivateAction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get(): ActivateAction
    static $gtype: GObject.Type
}
export interface Adjustment_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    lower?: number
    page_increment?: number
    page_size?: number
    step_increment?: number
    upper?: number
    value?: number
}
export class Adjustment {
    /* Properties of Gtk.Adjustment */
    lower: number
    page_increment: number
    page_size: number
    step_increment: number
    upper: number
    value: number
    /* Fields of Gtk.Adjustment */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Adjustment */
    clamp_page(lower: number, upper: number): void
    configure(value: number, lower: number, upper: number, step_increment: number, page_increment: number, page_size: number): void
    get_lower(): number
    get_minimum_increment(): number
    get_page_increment(): number
    get_page_size(): number
    get_step_increment(): number
    get_upper(): number
    get_value(): number
    set_lower(lower: number): void
    set_page_increment(page_increment: number): void
    set_page_size(page_size: number): void
    set_step_increment(step_increment: number): void
    set_upper(upper: number): void
    set_value(value: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Adjustment */
    vfunc_changed(): void
    vfunc_value_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Adjustment */
    connect(sigName: "changed", callback: (($obj: Adjustment) => void)): number
    connect_after(sigName: "changed", callback: (($obj: Adjustment) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "value-changed", callback: (($obj: Adjustment) => void)): number
    connect_after(sigName: "value-changed", callback: (($obj: Adjustment) => void)): number
    emit(sigName: "value-changed"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::lower", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lower", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-increment", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-increment", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-size", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-size", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::step-increment", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::step-increment", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::upper", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::upper", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Adjustment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Adjustment_ConstructProps)
    _init (config?: Adjustment_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(value: number, lower: number, upper: number, step_increment: number, page_increment: number, page_size: number): Adjustment
    static $gtype: GObject.Type
}
export interface AlternativeTrigger_ConstructProps extends ShortcutTrigger_ConstructProps {
    first?: ShortcutTrigger
    second?: ShortcutTrigger
}
export class AlternativeTrigger {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.AlternativeTrigger */
    get_first(): ShortcutTrigger
    get_second(): ShortcutTrigger
    /* Methods of Gtk.ShortcutTrigger */
    compare(trigger2: ShortcutTrigger): number
    equal(trigger2: ShortcutTrigger): boolean
    hash(): number
    print(string: GLib.String): void
    print_label(display: Gdk.Display, string: GLib.String): boolean
    to_label(display: Gdk.Display): string
    to_string(): string
    trigger(event: Gdk.Event, enable_mnemonics: boolean): Gdk.KeyMatch
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AlternativeTrigger, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AlternativeTrigger, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AlternativeTrigger_ConstructProps)
    _init (config?: AlternativeTrigger_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(first: ShortcutTrigger, second: ShortcutTrigger): AlternativeTrigger
    static $gtype: GObject.Type
}
export interface AnyFilter_ConstructProps extends MultiFilter_ConstructProps {
}
export class AnyFilter {
    /* Fields of Gtk.Filter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MultiFilter */
    append(filter: Filter): void
    remove(position: number): void
    /* Methods of Gtk.Filter */
    changed(change: FilterChange): void
    get_strictness(): FilterMatch
    match(item: GObject.Object): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.MultiFilter */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of Gtk.Filter */
    vfunc_get_strictness(): FilterMatch
    vfunc_match(item?: GObject.Object | null): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Filter */
    connect(sigName: "changed", callback: (($obj: AnyFilter, change: FilterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: AnyFilter, change: FilterChange) => void)): number
    emit(sigName: "changed", change: FilterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AnyFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AnyFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: AnyFilter, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: AnyFilter, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AnyFilter_ConstructProps)
    _init (config?: AnyFilter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): AnyFilter
    static $gtype: GObject.Type
}
export interface AppChooserButton_ConstructProps extends Widget_ConstructProps {
    heading?: string
    modal?: boolean
    show_default_item?: boolean
    show_dialog_item?: boolean
    accessible_role?: AccessibleRole
    content_type?: string
}
export class AppChooserButton {
    /* Properties of Gtk.AppChooserButton */
    heading: string
    modal: boolean
    show_default_item: boolean
    show_dialog_item: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.AppChooserButton */
    append_custom_item(name: string, label: string, icon: Gio.Icon): void
    append_separator(): void
    get_heading(): string | null
    get_modal(): boolean
    get_show_default_item(): boolean
    get_show_dialog_item(): boolean
    set_active_custom_item(name: string): void
    set_heading(heading: string): void
    set_modal(modal: boolean): void
    set_show_default_item(setting: boolean): void
    set_show_dialog_item(setting: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.AppChooser */
    get_app_info(): Gio.AppInfo | null
    get_content_type(): string
    refresh(): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.AppChooserButton */
    connect(sigName: "changed", callback: (($obj: AppChooserButton) => void)): number
    connect_after(sigName: "changed", callback: (($obj: AppChooserButton) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "custom-item-activated", callback: (($obj: AppChooserButton, item_name: string) => void)): number
    connect_after(sigName: "custom-item-activated", callback: (($obj: AppChooserButton, item_name: string) => void)): number
    emit(sigName: "custom-item-activated", item_name: string): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: AppChooserButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: AppChooserButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: AppChooserButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: AppChooserButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: AppChooserButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: AppChooserButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: AppChooserButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: AppChooserButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: AppChooserButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: AppChooserButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: AppChooserButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: AppChooserButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: AppChooserButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: AppChooserButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: AppChooserButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: AppChooserButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: AppChooserButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: AppChooserButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: AppChooserButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: AppChooserButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: AppChooserButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: AppChooserButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: AppChooserButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: AppChooserButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: AppChooserButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: AppChooserButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::heading", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::heading", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-default-item", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-default-item", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-dialog-item", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-dialog-item", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: AppChooserButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AppChooserButton_ConstructProps)
    _init (config?: AppChooserButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(content_type: string): AppChooserButton
    static $gtype: GObject.Type
}
export interface AppChooserDialog_ConstructProps extends Dialog_ConstructProps {
    gfile?: Gio.File
    heading?: string
    accessible_role?: AccessibleRole
    content_type?: string
}
export class AppChooserDialog {
    /* Properties of Gtk.AppChooserDialog */
    heading: string
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Dialog */
    parent_instance: Window
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.AppChooserDialog */
    get_heading(): string | null
    get_widget(): Widget
    set_heading(heading: string): void
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_content_area(): Box
    get_header_bar(): HeaderBar
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.AppChooser */
    get_app_info(): Gio.AppInfo | null
    get_content_type(): string
    refresh(): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Dialog */
    vfunc_close(): void
    vfunc_response(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "close", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: AppChooserDialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: AppChooserDialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: AppChooserDialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: AppChooserDialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: AppChooserDialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: AppChooserDialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: AppChooserDialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: AppChooserDialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: AppChooserDialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: AppChooserDialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: AppChooserDialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: AppChooserDialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: AppChooserDialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: AppChooserDialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: AppChooserDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: AppChooserDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: AppChooserDialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: AppChooserDialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: AppChooserDialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: AppChooserDialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::heading", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::heading", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: AppChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AppChooserDialog_ConstructProps)
    _init (config?: AppChooserDialog_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(parent: Window | null, flags: DialogFlags, file: Gio.File): AppChooserDialog
    static new(): AppChooserDialog
    static new_for_content_type(parent: Window | null, flags: DialogFlags, content_type: string): AppChooserDialog
    static $gtype: GObject.Type
}
export interface AppChooserWidget_ConstructProps extends Widget_ConstructProps {
    default_text?: string
    show_all?: boolean
    show_default?: boolean
    show_fallback?: boolean
    show_other?: boolean
    show_recommended?: boolean
    accessible_role?: AccessibleRole
    content_type?: string
}
export class AppChooserWidget {
    /* Properties of Gtk.AppChooserWidget */
    default_text: string
    show_all: boolean
    show_default: boolean
    show_fallback: boolean
    show_other: boolean
    show_recommended: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.AppChooserWidget */
    get_default_text(): string | null
    get_show_all(): boolean
    get_show_default(): boolean
    get_show_fallback(): boolean
    get_show_other(): boolean
    get_show_recommended(): boolean
    set_default_text(text: string): void
    set_show_all(setting: boolean): void
    set_show_default(setting: boolean): void
    set_show_fallback(setting: boolean): void
    set_show_other(setting: boolean): void
    set_show_recommended(setting: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.AppChooser */
    get_app_info(): Gio.AppInfo | null
    get_content_type(): string
    refresh(): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.AppChooserWidget */
    connect(sigName: "application-activated", callback: (($obj: AppChooserWidget, application: Gio.AppInfo) => void)): number
    connect_after(sigName: "application-activated", callback: (($obj: AppChooserWidget, application: Gio.AppInfo) => void)): number
    emit(sigName: "application-activated", application: Gio.AppInfo): void
    connect(sigName: "application-selected", callback: (($obj: AppChooserWidget, application: Gio.AppInfo) => void)): number
    connect_after(sigName: "application-selected", callback: (($obj: AppChooserWidget, application: Gio.AppInfo) => void)): number
    emit(sigName: "application-selected", application: Gio.AppInfo): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: AppChooserWidget) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: AppChooserWidget) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: AppChooserWidget, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: AppChooserWidget, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: AppChooserWidget) => void)): number
    connect_after(sigName: "hide", callback: (($obj: AppChooserWidget) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: AppChooserWidget, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: AppChooserWidget, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: AppChooserWidget) => void)): number
    connect_after(sigName: "map", callback: (($obj: AppChooserWidget) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: AppChooserWidget, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: AppChooserWidget, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: AppChooserWidget, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: AppChooserWidget, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: AppChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: AppChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: AppChooserWidget) => void)): number
    connect_after(sigName: "realize", callback: (($obj: AppChooserWidget) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: AppChooserWidget) => void)): number
    connect_after(sigName: "show", callback: (($obj: AppChooserWidget) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: AppChooserWidget, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: AppChooserWidget, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: AppChooserWidget) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: AppChooserWidget) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: AppChooserWidget) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: AppChooserWidget) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::default-text", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-text", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-all", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-all", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-default", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-default", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-fallback", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-fallback", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-other", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-other", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-recommended", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-recommended", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: AppChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AppChooserWidget_ConstructProps)
    _init (config?: AppChooserWidget_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(content_type: string): AppChooserWidget
    static $gtype: GObject.Type
}
export interface Application_ConstructProps extends Gio.Application_ConstructProps {
    menubar?: Gio.MenuModel
    register_session?: boolean
}
export class Application {
    /* Properties of Gtk.Application */
    readonly active_window: Window
    menubar: Gio.MenuModel
    register_session: boolean
    readonly screensaver_active: boolean
    /* Properties of Gio.Application */
    action_group: Gio.ActionGroup
    application_id: string
    flags: Gio.ApplicationFlags
    inactivity_timeout: number
    readonly is_busy: boolean
    readonly is_registered: boolean
    readonly is_remote: boolean
    resource_base_path: string
    /* Fields of Gtk.Application */
    parent_instance: Gio.Application
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Application */
    add_window(window: Window): void
    get_accels_for_action(detailed_action_name: string): string[]
    get_actions_for_accel(accel: string): string[]
    get_active_window(): Window | null
    get_menu_by_id(id: string): Gio.Menu | null
    get_menubar(): Gio.MenuModel | null
    get_window_by_id(id: number): Window | null
    get_windows(): Window[]
    inhibit(window: Window | null, flags: ApplicationInhibitFlags, reason?: string | null): number
    list_action_descriptions(): string[]
    remove_window(window: Window): void
    set_accels_for_action(detailed_action_name: string, accels: string[]): void
    set_menubar(menubar?: Gio.MenuModel | null): void
    uninhibit(cookie: number): void
    /* Methods of Gio.Application */
    activate(): void
    add_main_option(long_name: string, short_name: number, flags: GLib.OptionFlags, arg: GLib.OptionArg, description: string, arg_description?: string | null): void
    add_main_option_entries(entries: GLib.OptionEntry[]): void
    add_option_group(group: GLib.OptionGroup): void
    bind_busy_property(object: GObject.Object, property: string): void
    get_application_id(): string | null
    get_dbus_connection(): Gio.DBusConnection | null
    get_dbus_object_path(): string | null
    get_flags(): Gio.ApplicationFlags
    get_inactivity_timeout(): number
    get_is_busy(): boolean
    get_is_registered(): boolean
    get_is_remote(): boolean
    get_resource_base_path(): string | null
    hold(): void
    mark_busy(): void
    open(files: Gio.File[], hint: string): void
    quit(): void
    register(cancellable?: Gio.Cancellable | null): boolean
    release(): void
    run(argv?: string[] | null): number
    send_notification(id: string | null, notification: Gio.Notification): void
    set_action_group(action_group?: Gio.ActionGroup | null): void
    set_application_id(application_id?: string | null): void
    set_default(): void
    set_flags(flags: Gio.ApplicationFlags): void
    set_inactivity_timeout(inactivity_timeout: number): void
    set_option_context_description(description?: string | null): void
    set_option_context_parameter_string(parameter_string?: string | null): void
    set_option_context_summary(summary?: string | null): void
    set_resource_base_path(resource_path?: string | null): void
    unbind_busy_property(object: GObject.Object, property: string): void
    unmark_busy(): void
    withdraw_notification(id: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ActionGroup */
    action_added(action_name: string): void
    action_enabled_changed(action_name: string, enabled: boolean): void
    action_removed(action_name: string): void
    action_state_changed(action_name: string, state: GLib.Variant): void
    activate_action(action_name: string, parameter?: GLib.Variant | null): void
    change_action_state(action_name: string, value: GLib.Variant): void
    get_action_enabled(action_name: string): boolean
    get_action_parameter_type(action_name: string): GLib.VariantType | null
    get_action_state(action_name: string): GLib.Variant | null
    get_action_state_hint(action_name: string): GLib.Variant | null
    get_action_state_type(action_name: string): GLib.VariantType | null
    has_action(action_name: string): boolean
    list_actions(): string[]
    query_action(action_name: string): [ /* returnType */ boolean, /* enabled */ boolean, /* parameter_type */ GLib.VariantType | null, /* state_type */ GLib.VariantType | null, /* state_hint */ GLib.Variant | null, /* state */ GLib.Variant | null ]
    /* Methods of Gio.ActionMap */
    add_action(action: Gio.Action): void
    add_action_entries(entries: Gio.ActionEntry[], user_data?: object | null): void
    lookup_action(action_name: string): Gio.Action | null
    remove_action(action_name: string): void
    /* Virtual methods of Gtk.Application */
    vfunc_window_added(window: Window): void
    vfunc_window_removed(window: Window): void
    vfunc_action_added(action_name: string): void
    vfunc_action_enabled_changed(action_name: string, enabled: boolean): void
    vfunc_action_removed(action_name: string): void
    vfunc_action_state_changed(action_name: string, state: GLib.Variant): void
    vfunc_activate_action(action_name: string, parameter?: GLib.Variant | null): void
    vfunc_change_action_state(action_name: string, value: GLib.Variant): void
    vfunc_get_action_enabled(action_name: string): boolean
    vfunc_get_action_parameter_type(action_name: string): GLib.VariantType | null
    vfunc_get_action_state(action_name: string): GLib.Variant | null
    vfunc_get_action_state_hint(action_name: string): GLib.Variant | null
    vfunc_get_action_state_type(action_name: string): GLib.VariantType | null
    vfunc_has_action(action_name: string): boolean
    vfunc_list_actions(): string[]
    vfunc_query_action(action_name: string): [ /* returnType */ boolean, /* enabled */ boolean, /* parameter_type */ GLib.VariantType | null, /* state_type */ GLib.VariantType | null, /* state_hint */ GLib.Variant | null, /* state */ GLib.Variant | null ]
    vfunc_add_action(action: Gio.Action): void
    vfunc_lookup_action(action_name: string): Gio.Action | null
    vfunc_remove_action(action_name: string): void
    /* Virtual methods of Gio.Application */
    vfunc_activate(): void
    vfunc_add_platform_data(builder: GLib.VariantBuilder): void
    vfunc_after_emit(platform_data: GLib.Variant): void
    vfunc_before_emit(platform_data: GLib.Variant): void
    vfunc_command_line(command_line: Gio.ApplicationCommandLine): number
    vfunc_dbus_register(connection: Gio.DBusConnection, object_path: string): boolean
    vfunc_dbus_unregister(connection: Gio.DBusConnection, object_path: string): void
    vfunc_handle_local_options(options: GLib.VariantDict): number
    vfunc_local_command_line(arguments_: string[]): [ /* returnType */ boolean, /* arguments_ */ string[], /* exit_status */ number ]
    vfunc_name_lost(): boolean
    vfunc_open(files: Gio.File[], hint: string): void
    vfunc_quit_mainloop(): void
    vfunc_run_mainloop(): void
    vfunc_shutdown(): void
    vfunc_startup(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Application */
    connect(sigName: "query-end", callback: (($obj: Application) => void)): number
    connect_after(sigName: "query-end", callback: (($obj: Application) => void)): number
    emit(sigName: "query-end"): void
    connect(sigName: "window-added", callback: (($obj: Application, window: Window) => void)): number
    connect_after(sigName: "window-added", callback: (($obj: Application, window: Window) => void)): number
    emit(sigName: "window-added", window: Window): void
    connect(sigName: "window-removed", callback: (($obj: Application, window: Window) => void)): number
    connect_after(sigName: "window-removed", callback: (($obj: Application, window: Window) => void)): number
    emit(sigName: "window-removed", window: Window): void
    /* Signals of Gio.Application */
    connect(sigName: "activate", callback: (($obj: Application) => void)): number
    connect_after(sigName: "activate", callback: (($obj: Application) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "command-line", callback: (($obj: Application, command_line: Gio.ApplicationCommandLine) => number)): number
    connect_after(sigName: "command-line", callback: (($obj: Application, command_line: Gio.ApplicationCommandLine) => number)): number
    emit(sigName: "command-line", command_line: Gio.ApplicationCommandLine): void
    connect(sigName: "handle-local-options", callback: (($obj: Application, options: GLib.VariantDict) => number)): number
    connect_after(sigName: "handle-local-options", callback: (($obj: Application, options: GLib.VariantDict) => number)): number
    emit(sigName: "handle-local-options", options: GLib.VariantDict): void
    connect(sigName: "name-lost", callback: (($obj: Application) => boolean)): number
    connect_after(sigName: "name-lost", callback: (($obj: Application) => boolean)): number
    emit(sigName: "name-lost"): void
    connect(sigName: "open", callback: (($obj: Application, files: Gio.File[], hint: string) => void)): number
    connect_after(sigName: "open", callback: (($obj: Application, files: Gio.File[], hint: string) => void)): number
    emit(sigName: "open", files: Gio.File[], hint: string): void
    connect(sigName: "shutdown", callback: (($obj: Application) => void)): number
    connect_after(sigName: "shutdown", callback: (($obj: Application) => void)): number
    emit(sigName: "shutdown"): void
    connect(sigName: "startup", callback: (($obj: Application) => void)): number
    connect_after(sigName: "startup", callback: (($obj: Application) => void)): number
    emit(sigName: "startup"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ActionGroup */
    connect(sigName: "action-added", callback: (($obj: Application, action_name: string) => void)): number
    connect_after(sigName: "action-added", callback: (($obj: Application, action_name: string) => void)): number
    emit(sigName: "action-added", action_name: string): void
    connect(sigName: "action-enabled-changed", callback: (($obj: Application, action_name: string, enabled: boolean) => void)): number
    connect_after(sigName: "action-enabled-changed", callback: (($obj: Application, action_name: string, enabled: boolean) => void)): number
    emit(sigName: "action-enabled-changed", action_name: string, enabled: boolean): void
    connect(sigName: "action-removed", callback: (($obj: Application, action_name: string) => void)): number
    connect_after(sigName: "action-removed", callback: (($obj: Application, action_name: string) => void)): number
    emit(sigName: "action-removed", action_name: string): void
    connect(sigName: "action-state-changed", callback: (($obj: Application, action_name: string, value: GLib.Variant) => void)): number
    connect_after(sigName: "action-state-changed", callback: (($obj: Application, action_name: string, value: GLib.Variant) => void)): number
    emit(sigName: "action-state-changed", action_name: string, value: GLib.Variant): void
    connect(sigName: "notify::active-window", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active-window", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::menubar", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::menubar", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::register-session", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::register-session", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screensaver-active", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screensaver-active", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-group", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-group", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application-id", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application-id", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::flags", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::flags", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inactivity-timeout", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inactivity-timeout", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-busy", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-busy", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-registered", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-registered", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-remote", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-remote", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resource-base-path", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resource-base-path", callback: (($obj: Application, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Application_ConstructProps)
    _init (config?: Application_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(application_id: string | null, flags: Gio.ApplicationFlags): Application
    static $gtype: GObject.Type
}
export interface ApplicationWindow_ConstructProps extends Window_ConstructProps {
    show_menubar?: boolean
    accessible_role?: AccessibleRole
}
export class ApplicationWindow {
    /* Properties of Gtk.ApplicationWindow */
    show_menubar: boolean
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.ApplicationWindow */
    parent_instance: Window
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ApplicationWindow */
    get_help_overlay(): ShortcutsWindow | null
    get_id(): number
    get_show_menubar(): boolean
    set_help_overlay(help_overlay?: ShortcutsWindow | null): void
    set_show_menubar(show_menubar: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ActionGroup */
    action_added(action_name: string): void
    action_enabled_changed(action_name: string, enabled: boolean): void
    action_removed(action_name: string): void
    action_state_changed(action_name: string, state: GLib.Variant): void
    change_action_state(action_name: string, value: GLib.Variant): void
    get_action_enabled(action_name: string): boolean
    get_action_parameter_type(action_name: string): GLib.VariantType | null
    get_action_state(action_name: string): GLib.Variant | null
    get_action_state_hint(action_name: string): GLib.Variant | null
    get_action_state_type(action_name: string): GLib.VariantType | null
    has_action(action_name: string): boolean
    list_actions(): string[]
    query_action(action_name: string): [ /* returnType */ boolean, /* enabled */ boolean, /* parameter_type */ GLib.VariantType | null, /* state_type */ GLib.VariantType | null, /* state_hint */ GLib.Variant | null, /* state */ GLib.Variant | null ]
    /* Methods of Gio.ActionMap */
    add_action(action: Gio.Action): void
    add_action_entries(entries: Gio.ActionEntry[], user_data?: object | null): void
    lookup_action(action_name: string): Gio.Action | null
    remove_action(action_name: string): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.ApplicationWindow */
    vfunc_action_added(action_name: string): void
    vfunc_action_enabled_changed(action_name: string, enabled: boolean): void
    vfunc_action_removed(action_name: string): void
    vfunc_action_state_changed(action_name: string, state: GLib.Variant): void
    vfunc_activate_action(action_name: string, parameter?: GLib.Variant | null): void
    vfunc_change_action_state(action_name: string, value: GLib.Variant): void
    vfunc_get_action_enabled(action_name: string): boolean
    vfunc_get_action_parameter_type(action_name: string): GLib.VariantType | null
    vfunc_get_action_state(action_name: string): GLib.Variant | null
    vfunc_get_action_state_hint(action_name: string): GLib.Variant | null
    vfunc_get_action_state_type(action_name: string): GLib.VariantType | null
    vfunc_has_action(action_name: string): boolean
    vfunc_list_actions(): string[]
    vfunc_query_action(action_name: string): [ /* returnType */ boolean, /* enabled */ boolean, /* parameter_type */ GLib.VariantType | null, /* state_type */ GLib.VariantType | null, /* state_hint */ GLib.Variant | null, /* state */ GLib.Variant | null ]
    vfunc_add_action(action: Gio.Action): void
    vfunc_lookup_action(action_name: string): Gio.Action | null
    vfunc_remove_action(action_name: string): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: ApplicationWindow) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: ApplicationWindow) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: ApplicationWindow, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: ApplicationWindow, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ApplicationWindow, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ApplicationWindow, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ApplicationWindow, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ApplicationWindow, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "map", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ApplicationWindow, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ApplicationWindow, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ApplicationWindow, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ApplicationWindow, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ApplicationWindow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ApplicationWindow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "show", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ApplicationWindow, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ApplicationWindow, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ApplicationWindow) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ApplicationWindow) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ActionGroup */
    connect(sigName: "action-added", callback: (($obj: ApplicationWindow, action_name: string) => void)): number
    connect_after(sigName: "action-added", callback: (($obj: ApplicationWindow, action_name: string) => void)): number
    emit(sigName: "action-added", action_name: string): void
    connect(sigName: "action-enabled-changed", callback: (($obj: ApplicationWindow, action_name: string, enabled: boolean) => void)): number
    connect_after(sigName: "action-enabled-changed", callback: (($obj: ApplicationWindow, action_name: string, enabled: boolean) => void)): number
    emit(sigName: "action-enabled-changed", action_name: string, enabled: boolean): void
    connect(sigName: "action-removed", callback: (($obj: ApplicationWindow, action_name: string) => void)): number
    connect_after(sigName: "action-removed", callback: (($obj: ApplicationWindow, action_name: string) => void)): number
    emit(sigName: "action-removed", action_name: string): void
    connect(sigName: "action-state-changed", callback: (($obj: ApplicationWindow, action_name: string, value: GLib.Variant) => void)): number
    connect_after(sigName: "action-state-changed", callback: (($obj: ApplicationWindow, action_name: string, value: GLib.Variant) => void)): number
    emit(sigName: "action-state-changed", action_name: string, value: GLib.Variant): void
    connect(sigName: "notify::show-menubar", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-menubar", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ApplicationWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ApplicationWindow_ConstructProps)
    _init (config?: ApplicationWindow_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(application: Application): ApplicationWindow
    static new(): ApplicationWindow
    static $gtype: GObject.Type
}
export interface AspectFrame_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    obey_child?: boolean
    ratio?: number
    xalign?: number
    yalign?: number
    accessible_role?: AccessibleRole
}
export class AspectFrame {
    /* Properties of Gtk.AspectFrame */
    child: Widget
    obey_child: boolean
    ratio: number
    xalign: number
    yalign: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.AspectFrame */
    get_child(): Widget | null
    get_obey_child(): boolean
    get_ratio(): number
    get_xalign(): number
    get_yalign(): number
    set_child(child?: Widget | null): void
    set_obey_child(obey_child: boolean): void
    set_ratio(ratio: number): void
    set_xalign(xalign: number): void
    set_yalign(yalign: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: AspectFrame) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: AspectFrame) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: AspectFrame, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: AspectFrame, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: AspectFrame) => void)): number
    connect_after(sigName: "hide", callback: (($obj: AspectFrame) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: AspectFrame, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: AspectFrame, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: AspectFrame) => void)): number
    connect_after(sigName: "map", callback: (($obj: AspectFrame) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: AspectFrame, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: AspectFrame, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: AspectFrame, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: AspectFrame, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: AspectFrame, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: AspectFrame, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: AspectFrame) => void)): number
    connect_after(sigName: "realize", callback: (($obj: AspectFrame) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: AspectFrame) => void)): number
    connect_after(sigName: "show", callback: (($obj: AspectFrame) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: AspectFrame, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: AspectFrame, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: AspectFrame) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: AspectFrame) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: AspectFrame) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: AspectFrame) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::obey-child", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::obey-child", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ratio", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ratio", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: AspectFrame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AspectFrame_ConstructProps)
    _init (config?: AspectFrame_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(xalign: number, yalign: number, ratio: number, obey_child: boolean): AspectFrame
    static $gtype: GObject.Type
}
export interface Assistant_ConstructProps extends Window_ConstructProps {
    use_header_bar?: number
    accessible_role?: AccessibleRole
}
export class Assistant {
    /* Properties of Gtk.Assistant */
    readonly pages: Gio.ListModel
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Window */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Assistant */
    add_action_widget(child: Widget): void
    append_page(page: Widget): number
    commit(): void
    get_current_page(): number
    get_n_pages(): number
    get_nth_page(page_num: number): Widget | null
    get_page(child: Widget): AssistantPage
    get_page_complete(page: Widget): boolean
    get_page_title(page: Widget): string
    get_page_type(page: Widget): AssistantPageType
    get_pages(): Gio.ListModel
    insert_page(page: Widget, position: number): number
    next_page(): void
    prepend_page(page: Widget): number
    previous_page(): void
    remove_action_widget(child: Widget): void
    remove_page(page_num: number): void
    set_current_page(page_num: number): void
    set_forward_page_func(page_func: AssistantPageFunc | null): void
    set_page_complete(page: Widget, complete: boolean): void
    set_page_title(page: Widget, title: string): void
    set_page_type(page: Widget, type: AssistantPageType): void
    update_buttons_state(): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Assistant */
    connect(sigName: "apply", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "apply", callback: (($obj: Assistant) => void)): number
    emit(sigName: "apply"): void
    connect(sigName: "cancel", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: Assistant) => void)): number
    emit(sigName: "cancel"): void
    connect(sigName: "close", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "close", callback: (($obj: Assistant) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "escape", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "escape", callback: (($obj: Assistant) => void)): number
    emit(sigName: "escape"): void
    connect(sigName: "prepare", callback: (($obj: Assistant, page: Widget) => void)): number
    connect_after(sigName: "prepare", callback: (($obj: Assistant, page: Widget) => void)): number
    emit(sigName: "prepare", page: Widget): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: Assistant) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: Assistant) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: Assistant) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: Assistant) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: Assistant, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: Assistant, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: Assistant) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Assistant) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Assistant, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Assistant, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Assistant) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Assistant, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Assistant, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "map", callback: (($obj: Assistant) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Assistant, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Assistant, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Assistant, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Assistant, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Assistant, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Assistant, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Assistant) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "show", callback: (($obj: Assistant) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Assistant, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Assistant, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Assistant) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Assistant) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Assistant) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::pages", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pages", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Assistant, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Assistant_ConstructProps)
    _init (config?: Assistant_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Assistant
    static $gtype: GObject.Type
}
export interface AssistantPage_ConstructProps extends GObject.Object_ConstructProps {
    child?: Widget
    complete?: boolean
    page_type?: AssistantPageType
    title?: string
}
export class AssistantPage {
    /* Properties of Gtk.AssistantPage */
    complete: boolean
    page_type: AssistantPageType
    title: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.AssistantPage */
    get_child(): Widget
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: AssistantPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: AssistantPage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::complete", callback: (($obj: AssistantPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complete", callback: (($obj: AssistantPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-type", callback: (($obj: AssistantPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-type", callback: (($obj: AssistantPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: AssistantPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: AssistantPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: AssistantPage_ConstructProps)
    _init (config?: AssistantPage_ConstructProps): void
    static $gtype: GObject.Type
}
export interface BinLayout_ConstructProps extends LayoutManager_ConstructProps {
}
export class BinLayout {
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: BinLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: BinLayout, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: BinLayout_ConstructProps)
    _init (config?: BinLayout_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): BinLayout
    static $gtype: GObject.Type
}
export interface BookmarkList_ConstructProps extends GObject.Object_ConstructProps {
    attributes?: string
    filename?: string
    io_priority?: number
}
export class BookmarkList {
    /* Properties of Gtk.BookmarkList */
    attributes: string
    io_priority: number
    readonly loading: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.BookmarkList */
    get_attributes(): string | null
    get_filename(): string
    get_io_priority(): number
    is_loading(): boolean
    set_attributes(attributes?: string | null): void
    set_io_priority(io_priority: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.BookmarkList */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: BookmarkList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: BookmarkList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: BookmarkList, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: BookmarkList, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::attributes", callback: (($obj: BookmarkList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: BookmarkList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::io-priority", callback: (($obj: BookmarkList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::io-priority", callback: (($obj: BookmarkList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loading", callback: (($obj: BookmarkList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loading", callback: (($obj: BookmarkList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: BookmarkList_ConstructProps)
    _init (config?: BookmarkList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(filename?: string | null, attributes?: string | null): BookmarkList
    static $gtype: GObject.Type
}
export interface BoolFilter_ConstructProps extends Filter_ConstructProps {
    expression?: Expression
    invert?: boolean
}
export class BoolFilter {
    /* Properties of Gtk.BoolFilter */
    expression: Expression
    invert: boolean
    /* Fields of Gtk.Filter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.BoolFilter */
    get_expression(): Expression | null
    get_invert(): boolean
    set_expression(expression?: Expression | null): void
    set_invert(invert: boolean): void
    /* Methods of Gtk.Filter */
    changed(change: FilterChange): void
    get_strictness(): FilterMatch
    match(item: GObject.Object): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Filter */
    vfunc_get_strictness(): FilterMatch
    vfunc_match(item?: GObject.Object | null): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Filter */
    connect(sigName: "changed", callback: (($obj: BoolFilter, change: FilterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: BoolFilter, change: FilterChange) => void)): number
    emit(sigName: "changed", change: FilterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: BoolFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: BoolFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::expression", callback: (($obj: BoolFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expression", callback: (($obj: BoolFilter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::invert", callback: (($obj: BoolFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invert", callback: (($obj: BoolFilter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: BoolFilter_ConstructProps)
    _init (config?: BoolFilter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(expression?: Expression | null): BoolFilter
    static $gtype: GObject.Type
}
export interface Box_ConstructProps extends Widget_ConstructProps {
    baseline_position?: BaselinePosition
    homogeneous?: boolean
    spacing?: number
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class Box {
    /* Properties of Gtk.Box */
    baseline_position: BaselinePosition
    homogeneous: boolean
    spacing: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Box */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Box */
    append(child: Widget): void
    get_baseline_position(): BaselinePosition
    get_homogeneous(): boolean
    get_spacing(): number
    insert_child_after(child: Widget, sibling?: Widget | null): void
    prepend(child: Widget): void
    remove(child: Widget): void
    reorder_child_after(child: Widget, sibling?: Widget | null): void
    set_baseline_position(position: BaselinePosition): void
    set_homogeneous(homogeneous: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Box) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Box) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Box, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Box, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Box) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Box) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Box, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Box, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Box) => void)): number
    connect_after(sigName: "map", callback: (($obj: Box) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Box, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Box, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Box, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Box, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Box, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Box, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Box) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Box) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Box) => void)): number
    connect_after(sigName: "show", callback: (($obj: Box) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Box, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Box, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Box) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Box) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Box) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Box) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::baseline-position", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::baseline-position", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::homogeneous", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::homogeneous", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spacing", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spacing", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: Box, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Box_ConstructProps)
    _init (config?: Box_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(orientation: Orientation, spacing: number): Box
    static $gtype: GObject.Type
}
export interface BoxLayout_ConstructProps extends LayoutManager_ConstructProps {
    baseline_position?: BaselinePosition
    homogeneous?: boolean
    spacing?: number
    orientation?: Orientation
}
export class BoxLayout {
    /* Properties of Gtk.BoxLayout */
    baseline_position: BaselinePosition
    homogeneous: boolean
    spacing: number
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.BoxLayout */
    get_baseline_position(): BaselinePosition
    get_homogeneous(): boolean
    get_spacing(): number
    set_baseline_position(position: BaselinePosition): void
    set_homogeneous(homogeneous: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::baseline-position", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::baseline-position", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::homogeneous", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::homogeneous", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spacing", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spacing", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: BoxLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: BoxLayout_ConstructProps)
    _init (config?: BoxLayout_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(orientation: Orientation): BoxLayout
    static $gtype: GObject.Type
}
export interface Builder_ConstructProps extends GObject.Object_ConstructProps {
    current_object?: GObject.Object
    scope?: BuilderScope
    translation_domain?: string
}
export class Builder {
    /* Properties of Gtk.Builder */
    current_object: GObject.Object
    scope: BuilderScope
    translation_domain: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Builder */
    add_from_file(filename: string): boolean
    add_from_resource(resource_path: string): boolean
    add_from_string(buffer: string, length: number): boolean
    add_objects_from_file(filename: string, object_ids: string[]): boolean
    add_objects_from_resource(resource_path: string, object_ids: string[]): boolean
    add_objects_from_string(buffer: string, length: number, object_ids: string[]): boolean
    create_closure(function_name: string, flags: BuilderClosureFlags, object?: GObject.Object | null): Function
    expose_object(name: string, object: GObject.Object): void
    extend_with_template(object: GObject.Object, template_type: GObject.Type, buffer: string, length: number): boolean
    get_current_object(): GObject.Object | null
    get_object(name: string): GObject.Object | null
    get_objects(): GObject.Object[]
    get_scope(): BuilderScope
    get_translation_domain(): string | null
    get_type_from_name(type_name: string): GObject.Type
    set_current_object(current_object?: GObject.Object | null): void
    set_scope(scope?: BuilderScope | null): void
    set_translation_domain(domain?: string | null): void
    value_from_string(pspec: GObject.ParamSpec, string: string): [ /* returnType */ boolean, /* value */ any ]
    value_from_string_type(type: GObject.Type, string: string): [ /* returnType */ boolean, /* value */ any ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Builder, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Builder, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::current-object", callback: (($obj: Builder, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-object", callback: (($obj: Builder, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scope", callback: (($obj: Builder, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scope", callback: (($obj: Builder, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translation-domain", callback: (($obj: Builder, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translation-domain", callback: (($obj: Builder, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Builder_ConstructProps)
    _init (config?: Builder_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Builder
    static new_from_file(filename: string): Builder
    static new_from_resource(resource_path: string): Builder
    static new_from_string(string: string, length: number): Builder
    static $gtype: GObject.Type
}
export interface BuilderCScope_ConstructProps extends GObject.Object_ConstructProps {
}
export class BuilderCScope {
    /* Fields of Gtk.BuilderCScope */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.BuilderCScope */
    add_callback_symbol(callback_name: string, callback_symbol: GObject.Callback): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.BuilderCScope */
    vfunc_create_closure(builder: Builder, function_name: string, flags: BuilderClosureFlags, object: GObject.Object): Function
    vfunc_get_type_from_function(builder: Builder, function_name: string): GObject.Type
    vfunc_get_type_from_name(builder: Builder, type_name: string): GObject.Type
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: BuilderCScope, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: BuilderCScope, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: BuilderCScope_ConstructProps)
    _init (config?: BuilderCScope_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): BuilderCScope
    static $gtype: GObject.Type
}
export interface BuilderListItemFactory_ConstructProps extends ListItemFactory_ConstructProps {
    bytes?: GLib.Bytes
    resource?: string
    scope?: BuilderScope
}
export class BuilderListItemFactory {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.BuilderListItemFactory */
    get_bytes(): GLib.Bytes
    get_resource(): string | null
    get_scope(): BuilderScope | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: BuilderListItemFactory, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: BuilderListItemFactory, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: BuilderListItemFactory_ConstructProps)
    _init (config?: BuilderListItemFactory_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new_from_bytes(scope: BuilderScope | null, bytes: GLib.Bytes): BuilderListItemFactory
    static new_from_resource(scope: BuilderScope | null, resource_path: string): BuilderListItemFactory
    static $gtype: GObject.Type
}
export interface Button_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    has_frame?: boolean
    icon_name?: string
    label?: string
    use_underline?: boolean
    accessible_role?: AccessibleRole
    action_name?: string
    action_target?: GLib.Variant
}
export class Button {
    /* Properties of Gtk.Button */
    child: Widget
    has_frame: boolean
    icon_name: string
    label: string
    use_underline: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Actionable */
    action_name: string
    action_target: GLib.Variant
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Button */
    get_child(): Widget | null
    get_has_frame(): boolean
    get_icon_name(): string | null
    get_label(): string | null
    get_use_underline(): boolean
    set_child(child?: Widget | null): void
    set_has_frame(has_frame: boolean): void
    set_icon_name(icon_name: string): void
    set_label(label: string): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant | null
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value?: GLib.Variant | null): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Button */
    vfunc_activate(): void
    vfunc_clicked(): void
    vfunc_get_action_name(): string | null
    vfunc_get_action_target_value(): GLib.Variant | null
    vfunc_set_action_name(action_name?: string | null): void
    vfunc_set_action_target_value(target_value?: GLib.Variant | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Button */
    connect(sigName: "activate", callback: (($obj: Button) => void)): number
    connect_after(sigName: "activate", callback: (($obj: Button) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "clicked", callback: (($obj: Button) => void)): number
    connect_after(sigName: "clicked", callback: (($obj: Button) => void)): number
    emit(sigName: "clicked"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Button) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Button) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Button, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Button, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Button) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Button) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Button, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Button, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Button) => void)): number
    connect_after(sigName: "map", callback: (($obj: Button) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Button, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Button, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Button, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Button, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Button, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Button, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Button) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Button) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Button) => void)): number
    connect_after(sigName: "show", callback: (($obj: Button) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Button, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Button, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Button) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Button) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Button) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Button) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-name", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-target", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-target", callback: (($obj: Button, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Button_ConstructProps)
    _init (config?: Button_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Button
    static new_from_icon_name(icon_name?: string | null): Button
    static new_with_label(label: string): Button
    static new_with_mnemonic(label: string): Button
    static $gtype: GObject.Type
}
export class CClosureExpression {
    /* Methods of Gtk.Expression */
    bind(target: GObject.Object, property: string, this_?: GObject.Object | null): ExpressionWatch
    evaluate(this_: GObject.Object | null, value: any): boolean
    get_value_type(): GObject.Type
    is_static(): boolean
    ref(): Expression
    unref(): void
    watch(this_: GObject.Object | null, notify: ExpressionNotify): ExpressionWatch
    static name: string
    static new(value_type: GObject.Type, marshal: GObject.ClosureMarshal | null, params: Expression[], callback_func: GObject.Callback): CClosureExpression
    constructor(value_type: GObject.Type, marshal: GObject.ClosureMarshal | null, params: Expression[], callback_func: GObject.Callback)
    /* Static methods and pseudo-constructors */
    static new(value_type: GObject.Type, marshal: GObject.ClosureMarshal | null, params: Expression[], callback_func: GObject.Callback): CClosureExpression
}
export interface Calendar_ConstructProps extends Widget_ConstructProps {
    day?: number
    month?: number
    show_day_names?: boolean
    show_heading?: boolean
    show_week_numbers?: boolean
    year?: number
    accessible_role?: AccessibleRole
}
export class Calendar {
    /* Properties of Gtk.Calendar */
    day: number
    month: number
    show_day_names: boolean
    show_heading: boolean
    show_week_numbers: boolean
    year: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Calendar */
    clear_marks(): void
    get_date(): GLib.DateTime
    get_day_is_marked(day: number): boolean
    get_show_day_names(): boolean
    get_show_heading(): boolean
    get_show_week_numbers(): boolean
    mark_day(day: number): void
    select_day(date: GLib.DateTime): void
    set_show_day_names(value: boolean): void
    set_show_heading(value: boolean): void
    set_show_week_numbers(value: boolean): void
    unmark_day(day: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Calendar */
    connect(sigName: "day-selected", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "day-selected", callback: (($obj: Calendar) => void)): number
    emit(sigName: "day-selected"): void
    connect(sigName: "next-month", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "next-month", callback: (($obj: Calendar) => void)): number
    emit(sigName: "next-month"): void
    connect(sigName: "next-year", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "next-year", callback: (($obj: Calendar) => void)): number
    emit(sigName: "next-year"): void
    connect(sigName: "prev-month", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "prev-month", callback: (($obj: Calendar) => void)): number
    emit(sigName: "prev-month"): void
    connect(sigName: "prev-year", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "prev-year", callback: (($obj: Calendar) => void)): number
    emit(sigName: "prev-year"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Calendar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Calendar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Calendar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Calendar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Calendar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Calendar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "map", callback: (($obj: Calendar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Calendar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Calendar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Calendar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Calendar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Calendar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Calendar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Calendar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "show", callback: (($obj: Calendar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Calendar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Calendar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Calendar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Calendar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Calendar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::day", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::day", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::month", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::month", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-day-names", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-day-names", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-heading", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-heading", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-week-numbers", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-week-numbers", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::year", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::year", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Calendar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Calendar_ConstructProps)
    _init (config?: Calendar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Calendar
    static $gtype: GObject.Type
}
export interface CallbackAction_ConstructProps extends ShortcutAction_ConstructProps {
}
export class CallbackAction {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutAction */
    activate(flags: ShortcutActionFlags, widget: Widget, args?: GLib.Variant | null): boolean
    print(string: GLib.String): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CallbackAction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CallbackAction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CallbackAction_ConstructProps)
    _init (config?: CallbackAction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CallbackAction
    static $gtype: GObject.Type
}
export interface CellArea_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    focus_cell?: CellRenderer
}
export class CellArea {
    /* Properties of Gtk.CellArea */
    readonly edit_widget: CellEditable
    readonly edited_cell: CellRenderer
    focus_cell: CellRenderer
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellArea */
    activate(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean): boolean
    activate_cell(widget: Widget, renderer: CellRenderer, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    add(renderer: CellRenderer): void
    add_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): void
    apply_attributes(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    attribute_connect(renderer: CellRenderer, attribute: string, column: number): void
    attribute_disconnect(renderer: CellRenderer, attribute: string): void
    attribute_get_column(renderer: CellRenderer, attribute: string): number
    cell_get_property(renderer: CellRenderer, property_name: string, value: any): void
    cell_set_property(renderer: CellRenderer, property_name: string, value: any): void
    copy_context(context: CellAreaContext): CellAreaContext
    create_context(): CellAreaContext
    event(context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): number
    focus(direction: DirectionType): boolean
    foreach(callback: CellCallback): void
    foreach_alloc(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback): void
    get_cell_allocation(context: CellAreaContext, widget: Widget, renderer: CellRenderer, cell_area: Gdk.Rectangle): /* allocation */ Gdk.Rectangle
    get_cell_at_position(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, x: number, y: number): [ /* returnType */ CellRenderer, /* alloc_area */ Gdk.Rectangle | null ]
    get_current_path_string(): string
    get_edit_widget(): CellEditable
    get_edited_cell(): CellRenderer
    get_focus_cell(): CellRenderer
    get_focus_from_sibling(renderer: CellRenderer): CellRenderer | null
    get_focus_siblings(renderer: CellRenderer): CellRenderer[]
    get_preferred_height(context: CellAreaContext, widget: Widget): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_for_width(context: CellAreaContext, widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_width(context: CellAreaContext, widget: Widget): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(context: CellAreaContext, widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    has_renderer(renderer: CellRenderer): boolean
    inner_cell_area(widget: Widget, cell_area: Gdk.Rectangle): /* inner_area */ Gdk.Rectangle
    is_activatable(): boolean
    is_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): boolean
    remove(renderer: CellRenderer): void
    remove_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): void
    request_renderer(renderer: CellRenderer, orientation: Orientation, widget: Widget, for_size: number): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    set_focus_cell(renderer: CellRenderer): void
    snapshot(context: CellAreaContext, widget: Widget, snapshot: Snapshot, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean): void
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of Gtk.CellArea */
    vfunc_activate(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean): boolean
    vfunc_add(renderer: CellRenderer): void
    vfunc_apply_attributes(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    vfunc_copy_context(context: CellAreaContext): CellAreaContext
    vfunc_create_context(): CellAreaContext
    vfunc_event(context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): number
    vfunc_focus(direction: DirectionType): boolean
    vfunc_foreach(callback: CellCallback): void
    vfunc_foreach_alloc(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback): void
    vfunc_get_cell_property(renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_preferred_height(context: CellAreaContext, widget: Widget): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_for_width(context: CellAreaContext, widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(context: CellAreaContext, widget: Widget): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height(context: CellAreaContext, widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_is_activatable(): boolean
    vfunc_remove(renderer: CellRenderer): void
    vfunc_set_cell_property(renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_snapshot(context: CellAreaContext, widget: Widget, snapshot: Snapshot, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellArea */
    connect(sigName: "add-editable", callback: (($obj: CellArea, renderer: CellRenderer, editable: CellEditable, cell_area: Gdk.Rectangle, path: string) => void)): number
    connect_after(sigName: "add-editable", callback: (($obj: CellArea, renderer: CellRenderer, editable: CellEditable, cell_area: Gdk.Rectangle, path: string) => void)): number
    emit(sigName: "add-editable", renderer: CellRenderer, editable: CellEditable, cell_area: Gdk.Rectangle, path: string): void
    connect(sigName: "apply-attributes", callback: (($obj: CellArea, model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean) => void)): number
    connect_after(sigName: "apply-attributes", callback: (($obj: CellArea, model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean) => void)): number
    emit(sigName: "apply-attributes", model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    connect(sigName: "focus-changed", callback: (($obj: CellArea, renderer: CellRenderer, path: string) => void)): number
    connect_after(sigName: "focus-changed", callback: (($obj: CellArea, renderer: CellRenderer, path: string) => void)): number
    emit(sigName: "focus-changed", renderer: CellRenderer, path: string): void
    connect(sigName: "remove-editable", callback: (($obj: CellArea, renderer: CellRenderer, editable: CellEditable) => void)): number
    connect_after(sigName: "remove-editable", callback: (($obj: CellArea, renderer: CellRenderer, editable: CellEditable) => void)): number
    emit(sigName: "remove-editable", renderer: CellRenderer, editable: CellEditable): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellArea, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::edit-widget", callback: (($obj: CellArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::edit-widget", callback: (($obj: CellArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::edited-cell", callback: (($obj: CellArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::edited-cell", callback: (($obj: CellArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-cell", callback: (($obj: CellArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-cell", callback: (($obj: CellArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellArea_ConstructProps)
    _init (config?: CellArea_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static find_cell_property(aclass: CellArea | Function | GObject.Type, property_name: string): GObject.ParamSpec
    static install_cell_property(aclass: CellArea | Function | GObject.Type, property_id: number, pspec: GObject.ParamSpec): void
    static list_cell_properties(aclass: CellArea | Function | GObject.Type): GObject.ParamSpec[]
    static $gtype: GObject.Type
}
export interface CellAreaBox_ConstructProps extends CellArea_ConstructProps {
    spacing?: number
    orientation?: Orientation
}
export class CellAreaBox {
    /* Properties of Gtk.CellAreaBox */
    spacing: number
    /* Properties of Gtk.CellArea */
    readonly edit_widget: CellEditable
    readonly edited_cell: CellRenderer
    focus_cell: CellRenderer
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellAreaBox */
    get_spacing(): number
    pack_end(renderer: CellRenderer, expand: boolean, align: boolean, fixed: boolean): void
    pack_start(renderer: CellRenderer, expand: boolean, align: boolean, fixed: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.CellArea */
    activate(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean): boolean
    activate_cell(widget: Widget, renderer: CellRenderer, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    add(renderer: CellRenderer): void
    add_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): void
    apply_attributes(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    attribute_connect(renderer: CellRenderer, attribute: string, column: number): void
    attribute_disconnect(renderer: CellRenderer, attribute: string): void
    attribute_get_column(renderer: CellRenderer, attribute: string): number
    cell_get_property(renderer: CellRenderer, property_name: string, value: any): void
    cell_set_property(renderer: CellRenderer, property_name: string, value: any): void
    copy_context(context: CellAreaContext): CellAreaContext
    create_context(): CellAreaContext
    event(context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): number
    focus(direction: DirectionType): boolean
    foreach(callback: CellCallback): void
    foreach_alloc(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback): void
    get_cell_allocation(context: CellAreaContext, widget: Widget, renderer: CellRenderer, cell_area: Gdk.Rectangle): /* allocation */ Gdk.Rectangle
    get_cell_at_position(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, x: number, y: number): [ /* returnType */ CellRenderer, /* alloc_area */ Gdk.Rectangle | null ]
    get_current_path_string(): string
    get_edit_widget(): CellEditable
    get_edited_cell(): CellRenderer
    get_focus_cell(): CellRenderer
    get_focus_from_sibling(renderer: CellRenderer): CellRenderer | null
    get_focus_siblings(renderer: CellRenderer): CellRenderer[]
    get_preferred_height(context: CellAreaContext, widget: Widget): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_for_width(context: CellAreaContext, widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_width(context: CellAreaContext, widget: Widget): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(context: CellAreaContext, widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    has_renderer(renderer: CellRenderer): boolean
    inner_cell_area(widget: Widget, cell_area: Gdk.Rectangle): /* inner_area */ Gdk.Rectangle
    is_activatable(): boolean
    is_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): boolean
    remove(renderer: CellRenderer): void
    remove_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): void
    request_renderer(renderer: CellRenderer, orientation: Orientation, widget: Widget, for_size: number): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    set_focus_cell(renderer: CellRenderer): void
    snapshot(context: CellAreaContext, widget: Widget, snapshot: Snapshot, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean): void
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.CellArea */
    vfunc_activate(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean): boolean
    vfunc_add(renderer: CellRenderer): void
    vfunc_apply_attributes(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    vfunc_copy_context(context: CellAreaContext): CellAreaContext
    vfunc_create_context(): CellAreaContext
    vfunc_event(context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): number
    vfunc_focus(direction: DirectionType): boolean
    vfunc_foreach(callback: CellCallback): void
    vfunc_foreach_alloc(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback): void
    vfunc_get_cell_property(renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_preferred_height(context: CellAreaContext, widget: Widget): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_for_width(context: CellAreaContext, widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(context: CellAreaContext, widget: Widget): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height(context: CellAreaContext, widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_is_activatable(): boolean
    vfunc_remove(renderer: CellRenderer): void
    vfunc_set_cell_property(renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_snapshot(context: CellAreaContext, widget: Widget, snapshot: Snapshot, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellArea */
    connect(sigName: "add-editable", callback: (($obj: CellAreaBox, renderer: CellRenderer, editable: CellEditable, cell_area: Gdk.Rectangle, path: string) => void)): number
    connect_after(sigName: "add-editable", callback: (($obj: CellAreaBox, renderer: CellRenderer, editable: CellEditable, cell_area: Gdk.Rectangle, path: string) => void)): number
    emit(sigName: "add-editable", renderer: CellRenderer, editable: CellEditable, cell_area: Gdk.Rectangle, path: string): void
    connect(sigName: "apply-attributes", callback: (($obj: CellAreaBox, model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean) => void)): number
    connect_after(sigName: "apply-attributes", callback: (($obj: CellAreaBox, model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean) => void)): number
    emit(sigName: "apply-attributes", model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    connect(sigName: "focus-changed", callback: (($obj: CellAreaBox, renderer: CellRenderer, path: string) => void)): number
    connect_after(sigName: "focus-changed", callback: (($obj: CellAreaBox, renderer: CellRenderer, path: string) => void)): number
    emit(sigName: "focus-changed", renderer: CellRenderer, path: string): void
    connect(sigName: "remove-editable", callback: (($obj: CellAreaBox, renderer: CellRenderer, editable: CellEditable) => void)): number
    connect_after(sigName: "remove-editable", callback: (($obj: CellAreaBox, renderer: CellRenderer, editable: CellEditable) => void)): number
    emit(sigName: "remove-editable", renderer: CellRenderer, editable: CellEditable): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::spacing", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spacing", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::edit-widget", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::edit-widget", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::edited-cell", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::edited-cell", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-cell", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-cell", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: CellAreaBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellAreaBox_ConstructProps)
    _init (config?: CellAreaBox_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellAreaBox
    static $gtype: GObject.Type
}
export interface CellAreaContext_ConstructProps extends GObject.Object_ConstructProps {
    area?: CellArea
}
export class CellAreaContext {
    /* Properties of Gtk.CellAreaContext */
    readonly minimum_height: number
    readonly minimum_width: number
    readonly natural_height: number
    readonly natural_width: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellAreaContext */
    allocate(width: number, height: number): void
    get_allocation(): [ /* width */ number | null, /* height */ number | null ]
    get_area(): CellArea
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    push_preferred_height(minimum_height: number, natural_height: number): void
    push_preferred_width(minimum_width: number, natural_width: number): void
    reset(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellAreaContext */
    vfunc_allocate(width: number, height: number): void
    vfunc_get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_reset(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::minimum-height", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::minimum-height", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::minimum-width", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::minimum-width", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::natural-height", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::natural-height", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::natural-width", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::natural-width", callback: (($obj: CellAreaContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellAreaContext_ConstructProps)
    _init (config?: CellAreaContext_ConstructProps): void
    static $gtype: GObject.Type
}
export interface CellRenderer_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    cell_background?: string
    cell_background_rgba?: Gdk.RGBA
    cell_background_set?: boolean
    height?: number
    is_expanded?: boolean
    is_expander?: boolean
    mode?: CellRendererMode
    sensitive?: boolean
    visible?: boolean
    width?: number
    xalign?: number
    xpad?: number
    yalign?: number
    ypad?: number
}
export class CellRenderer {
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRenderer) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRenderer) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRenderer, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRenderer, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::cell-background", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRenderer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRenderer_ConstructProps)
    _init (config?: CellRenderer_ConstructProps): void
    static $gtype: GObject.Type
}
export interface CellRendererAccel_ConstructProps extends CellRendererText_ConstructProps {
    accel_key?: number
    accel_mode?: CellRendererAccelMode
    accel_mods?: Gdk.ModifierType
    keycode?: number
}
export class CellRendererAccel {
    /* Properties of Gtk.CellRendererAccel */
    accel_key: number
    accel_mode: CellRendererAccelMode
    accel_mods: Gdk.ModifierType
    keycode: number
    /* Properties of Gtk.CellRendererText */
    align_set: boolean
    alignment: Pango.Alignment
    attributes: Pango.AttrList
    background: string
    background_rgba: Gdk.RGBA
    background_set: boolean
    editable: boolean
    editable_set: boolean
    ellipsize: Pango.EllipsizeMode
    ellipsize_set: boolean
    family: string
    family_set: boolean
    font: string
    font_desc: Pango.FontDescription
    foreground: string
    foreground_rgba: Gdk.RGBA
    foreground_set: boolean
    language: string
    language_set: boolean
    markup: string
    max_width_chars: number
    placeholder_text: string
    rise: number
    rise_set: boolean
    scale: number
    scale_set: boolean
    single_paragraph_mode: boolean
    size: number
    size_points: number
    size_set: boolean
    stretch: Pango.Stretch
    stretch_set: boolean
    strikethrough: boolean
    strikethrough_set: boolean
    style: Pango.Style
    style_set: boolean
    text: string
    underline: Pango.Underline
    underline_set: boolean
    variant: Pango.Variant
    variant_set: boolean
    weight: number
    weight_set: boolean
    width_chars: number
    wrap_mode: Pango.WrapMode
    wrap_width: number
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Fields of Gtk.CellRendererText */
    parent: CellRenderer
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRendererText */
    set_fixed_height_from_font(number_of_rows: number): void
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellRendererText */
    vfunc_edited(path: string, new_text: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererAccel */
    connect(sigName: "accel-cleared", callback: (($obj: CellRendererAccel, path_string: string) => void)): number
    connect_after(sigName: "accel-cleared", callback: (($obj: CellRendererAccel, path_string: string) => void)): number
    emit(sigName: "accel-cleared", path_string: string): void
    connect(sigName: "accel-edited", callback: (($obj: CellRendererAccel, path_string: string, accel_key: number, accel_mods: Gdk.ModifierType, hardware_keycode: number) => void)): number
    connect_after(sigName: "accel-edited", callback: (($obj: CellRendererAccel, path_string: string, accel_key: number, accel_mods: Gdk.ModifierType, hardware_keycode: number) => void)): number
    emit(sigName: "accel-edited", path_string: string, accel_key: number, accel_mods: Gdk.ModifierType, hardware_keycode: number): void
    /* Signals of Gtk.CellRendererText */
    connect(sigName: "edited", callback: (($obj: CellRendererAccel, path: string, new_text: string) => void)): number
    connect_after(sigName: "edited", callback: (($obj: CellRendererAccel, path: string, new_text: string) => void)): number
    emit(sigName: "edited", path: string, new_text: string): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRendererAccel) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRendererAccel) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRendererAccel, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRendererAccel, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accel-key", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accel-key", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accel-mode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accel-mode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accel-mods", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accel-mods", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::keycode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keycode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::align-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alignment", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alignment", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-rgba", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-rgba", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-desc", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-desc", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-rgba", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-rgba", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::markup", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::markup", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder-text", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder-text", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-paragraph-mode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-paragraph-mode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-points", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-points", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-mode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-mode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-width", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-width", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRendererAccel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRendererAccel_ConstructProps)
    _init (config?: CellRendererAccel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellRendererAccel
    static $gtype: GObject.Type
}
export interface CellRendererCombo_ConstructProps extends CellRendererText_ConstructProps {
    has_entry?: boolean
    model?: TreeModel
    text_column?: number
}
export class CellRendererCombo {
    /* Properties of Gtk.CellRendererCombo */
    has_entry: boolean
    model: TreeModel
    text_column: number
    /* Properties of Gtk.CellRendererText */
    align_set: boolean
    alignment: Pango.Alignment
    attributes: Pango.AttrList
    background: string
    background_rgba: Gdk.RGBA
    background_set: boolean
    editable: boolean
    editable_set: boolean
    ellipsize: Pango.EllipsizeMode
    ellipsize_set: boolean
    family: string
    family_set: boolean
    font: string
    font_desc: Pango.FontDescription
    foreground: string
    foreground_rgba: Gdk.RGBA
    foreground_set: boolean
    language: string
    language_set: boolean
    markup: string
    max_width_chars: number
    placeholder_text: string
    rise: number
    rise_set: boolean
    scale: number
    scale_set: boolean
    single_paragraph_mode: boolean
    size: number
    size_points: number
    size_set: boolean
    stretch: Pango.Stretch
    stretch_set: boolean
    strikethrough: boolean
    strikethrough_set: boolean
    style: Pango.Style
    style_set: boolean
    text: string
    underline: Pango.Underline
    underline_set: boolean
    variant: Pango.Variant
    variant_set: boolean
    weight: number
    weight_set: boolean
    width_chars: number
    wrap_mode: Pango.WrapMode
    wrap_width: number
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Fields of Gtk.CellRendererText */
    parent: CellRenderer
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRendererText */
    set_fixed_height_from_font(number_of_rows: number): void
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellRendererText */
    vfunc_edited(path: string, new_text: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererCombo */
    connect(sigName: "changed", callback: (($obj: CellRendererCombo, path_string: string, new_iter: TreeIter) => void)): number
    connect_after(sigName: "changed", callback: (($obj: CellRendererCombo, path_string: string, new_iter: TreeIter) => void)): number
    emit(sigName: "changed", path_string: string, new_iter: TreeIter): void
    /* Signals of Gtk.CellRendererText */
    connect(sigName: "edited", callback: (($obj: CellRendererCombo, path: string, new_text: string) => void)): number
    connect_after(sigName: "edited", callback: (($obj: CellRendererCombo, path: string, new_text: string) => void)): number
    emit(sigName: "edited", path: string, new_text: string): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRendererCombo) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRendererCombo) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRendererCombo, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRendererCombo, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::has-entry", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-entry", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-column", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-column", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::align-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alignment", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alignment", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-rgba", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-rgba", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-desc", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-desc", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-rgba", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-rgba", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::markup", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::markup", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder-text", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder-text", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-paragraph-mode", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-paragraph-mode", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-points", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-points", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-mode", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-mode", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-width", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-width", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRendererCombo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRendererCombo_ConstructProps)
    _init (config?: CellRendererCombo_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellRendererCombo
    static $gtype: GObject.Type
}
export interface CellRendererPixbuf_ConstructProps extends CellRenderer_ConstructProps {
    gicon?: Gio.Icon
    icon_name?: string
    icon_size?: IconSize
    pixbuf?: GdkPixbuf.Pixbuf
    pixbuf_expander_closed?: GdkPixbuf.Pixbuf
    pixbuf_expander_open?: GdkPixbuf.Pixbuf
    texture?: Gdk.Texture
}
export class CellRendererPixbuf {
    /* Properties of Gtk.CellRendererPixbuf */
    gicon: Gio.Icon
    icon_name: string
    icon_size: IconSize
    pixbuf: GdkPixbuf.Pixbuf
    pixbuf_expander_closed: GdkPixbuf.Pixbuf
    pixbuf_expander_open: GdkPixbuf.Pixbuf
    texture: Gdk.Texture
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRendererPixbuf) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRendererPixbuf) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRendererPixbuf, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRendererPixbuf, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::gicon", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gicon", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-size", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-size", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixbuf", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixbuf", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixbuf-expander-closed", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixbuf-expander-closed", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixbuf-expander-open", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixbuf-expander-open", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::texture", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::texture", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRendererPixbuf_ConstructProps)
    _init (config?: CellRendererPixbuf_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellRendererPixbuf
    static $gtype: GObject.Type
}
export interface CellRendererProgress_ConstructProps extends CellRenderer_ConstructProps {
    inverted?: boolean
    pulse?: number
    text?: string
    text_xalign?: number
    text_yalign?: number
    value?: number
    orientation?: Orientation
}
export class CellRendererProgress {
    /* Properties of Gtk.CellRendererProgress */
    inverted: boolean
    pulse: number
    text: string
    text_xalign: number
    text_yalign: number
    value: number
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRendererProgress) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRendererProgress) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRendererProgress, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRendererProgress, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::inverted", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inverted", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pulse", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pulse", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-xalign", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-xalign", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-yalign", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-yalign", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: CellRendererProgress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRendererProgress_ConstructProps)
    _init (config?: CellRendererProgress_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellRendererProgress
    static $gtype: GObject.Type
}
export interface CellRendererSpin_ConstructProps extends CellRendererText_ConstructProps {
    adjustment?: Adjustment
    climb_rate?: number
    digits?: number
}
export class CellRendererSpin {
    /* Properties of Gtk.CellRendererSpin */
    adjustment: Adjustment
    climb_rate: number
    digits: number
    /* Properties of Gtk.CellRendererText */
    align_set: boolean
    alignment: Pango.Alignment
    attributes: Pango.AttrList
    background: string
    background_rgba: Gdk.RGBA
    background_set: boolean
    editable: boolean
    editable_set: boolean
    ellipsize: Pango.EllipsizeMode
    ellipsize_set: boolean
    family: string
    family_set: boolean
    font: string
    font_desc: Pango.FontDescription
    foreground: string
    foreground_rgba: Gdk.RGBA
    foreground_set: boolean
    language: string
    language_set: boolean
    markup: string
    max_width_chars: number
    placeholder_text: string
    rise: number
    rise_set: boolean
    scale: number
    scale_set: boolean
    single_paragraph_mode: boolean
    size: number
    size_points: number
    size_set: boolean
    stretch: Pango.Stretch
    stretch_set: boolean
    strikethrough: boolean
    strikethrough_set: boolean
    style: Pango.Style
    style_set: boolean
    text: string
    underline: Pango.Underline
    underline_set: boolean
    variant: Pango.Variant
    variant_set: boolean
    weight: number
    weight_set: boolean
    width_chars: number
    wrap_mode: Pango.WrapMode
    wrap_width: number
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Fields of Gtk.CellRendererText */
    parent: CellRenderer
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRendererText */
    set_fixed_height_from_font(number_of_rows: number): void
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellRendererText */
    vfunc_edited(path: string, new_text: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererText */
    connect(sigName: "edited", callback: (($obj: CellRendererSpin, path: string, new_text: string) => void)): number
    connect_after(sigName: "edited", callback: (($obj: CellRendererSpin, path: string, new_text: string) => void)): number
    emit(sigName: "edited", path: string, new_text: string): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRendererSpin) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRendererSpin) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRendererSpin, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRendererSpin, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::adjustment", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::adjustment", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::climb-rate", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::climb-rate", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::digits", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::digits", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::align-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alignment", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alignment", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-rgba", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-rgba", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-desc", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-desc", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-rgba", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-rgba", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::markup", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::markup", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder-text", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder-text", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-paragraph-mode", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-paragraph-mode", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-points", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-points", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-mode", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-mode", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-width", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-width", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRendererSpin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRendererSpin_ConstructProps)
    _init (config?: CellRendererSpin_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellRendererSpin
    static $gtype: GObject.Type
}
export interface CellRendererSpinner_ConstructProps extends CellRenderer_ConstructProps {
    active?: boolean
    pulse?: number
    size?: IconSize
}
export class CellRendererSpinner {
    /* Properties of Gtk.CellRendererSpinner */
    active: boolean
    pulse: number
    size: IconSize
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRendererSpinner) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRendererSpinner) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRendererSpinner, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRendererSpinner, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pulse", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pulse", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRendererSpinner_ConstructProps)
    _init (config?: CellRendererSpinner_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellRendererSpinner
    static $gtype: GObject.Type
}
export interface CellRendererText_ConstructProps extends CellRenderer_ConstructProps {
    align_set?: boolean
    alignment?: Pango.Alignment
    attributes?: Pango.AttrList
    background?: string
    background_rgba?: Gdk.RGBA
    background_set?: boolean
    editable?: boolean
    editable_set?: boolean
    ellipsize?: Pango.EllipsizeMode
    ellipsize_set?: boolean
    family?: string
    family_set?: boolean
    font?: string
    font_desc?: Pango.FontDescription
    foreground?: string
    foreground_rgba?: Gdk.RGBA
    foreground_set?: boolean
    language?: string
    language_set?: boolean
    markup?: string
    max_width_chars?: number
    placeholder_text?: string
    rise?: number
    rise_set?: boolean
    scale?: number
    scale_set?: boolean
    single_paragraph_mode?: boolean
    size?: number
    size_points?: number
    size_set?: boolean
    stretch?: Pango.Stretch
    stretch_set?: boolean
    strikethrough?: boolean
    strikethrough_set?: boolean
    style?: Pango.Style
    style_set?: boolean
    text?: string
    underline?: Pango.Underline
    underline_set?: boolean
    variant?: Pango.Variant
    variant_set?: boolean
    weight?: number
    weight_set?: boolean
    width_chars?: number
    wrap_mode?: Pango.WrapMode
    wrap_width?: number
}
export class CellRendererText {
    /* Properties of Gtk.CellRendererText */
    align_set: boolean
    alignment: Pango.Alignment
    attributes: Pango.AttrList
    background: string
    background_rgba: Gdk.RGBA
    background_set: boolean
    editable: boolean
    editable_set: boolean
    ellipsize: Pango.EllipsizeMode
    ellipsize_set: boolean
    family: string
    family_set: boolean
    font: string
    font_desc: Pango.FontDescription
    foreground: string
    foreground_rgba: Gdk.RGBA
    foreground_set: boolean
    language: string
    language_set: boolean
    markup: string
    max_width_chars: number
    placeholder_text: string
    rise: number
    rise_set: boolean
    scale: number
    scale_set: boolean
    single_paragraph_mode: boolean
    size: number
    size_points: number
    size_set: boolean
    stretch: Pango.Stretch
    stretch_set: boolean
    strikethrough: boolean
    strikethrough_set: boolean
    style: Pango.Style
    style_set: boolean
    text: string
    underline: Pango.Underline
    underline_set: boolean
    variant: Pango.Variant
    variant_set: boolean
    weight: number
    weight_set: boolean
    width_chars: number
    wrap_mode: Pango.WrapMode
    wrap_width: number
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Fields of Gtk.CellRendererText */
    parent: CellRenderer
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRendererText */
    set_fixed_height_from_font(number_of_rows: number): void
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellRendererText */
    vfunc_edited(path: string, new_text: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererText */
    connect(sigName: "edited", callback: (($obj: CellRendererText, path: string, new_text: string) => void)): number
    connect_after(sigName: "edited", callback: (($obj: CellRendererText, path: string, new_text: string) => void)): number
    emit(sigName: "edited", path: string, new_text: string): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRendererText) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRendererText) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRendererText, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRendererText, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alignment", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alignment", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-rgba", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-rgba", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-desc", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-desc", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-rgba", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-rgba", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::markup", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::markup", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder-text", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder-text", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-paragraph-mode", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-paragraph-mode", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-points", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-points", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-mode", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-mode", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-width", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-width", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRendererText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRendererText_ConstructProps)
    _init (config?: CellRendererText_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellRendererText
    static $gtype: GObject.Type
}
export interface CellRendererToggle_ConstructProps extends CellRenderer_ConstructProps {
    activatable?: boolean
    active?: boolean
    inconsistent?: boolean
    radio?: boolean
}
export class CellRendererToggle {
    /* Properties of Gtk.CellRendererToggle */
    activatable: boolean
    active: boolean
    inconsistent: boolean
    radio: boolean
    /* Properties of Gtk.CellRenderer */
    cell_background: string
    cell_background_rgba: Gdk.RGBA
    cell_background_set: boolean
    readonly editing: boolean
    height: number
    is_expanded: boolean
    is_expander: boolean
    mode: CellRendererMode
    sensitive: boolean
    visible: boolean
    width: number
    xalign: number
    xpad: number
    yalign: number
    ypad: number
    /* Fields of Gtk.CellRenderer */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellRendererToggle */
    get_activatable(): boolean
    get_active(): boolean
    get_radio(): boolean
    set_activatable(setting: boolean): void
    set_active(setting: boolean): void
    set_radio(radio: boolean): void
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_is_expanded(): boolean
    get_is_expander(): boolean
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_is_expanded(is_expanded: boolean): void
    set_is_expander(is_expander: boolean): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled(): void
    vfunc_editing_started(editable: CellEditable, path: string): void
    vfunc_get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_snapshot(snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererToggle */
    connect(sigName: "toggled", callback: (($obj: CellRendererToggle, path: string) => void)): number
    connect_after(sigName: "toggled", callback: (($obj: CellRendererToggle, path: string) => void)): number
    emit(sigName: "toggled", path: string): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: (($obj: CellRendererToggle) => void)): number
    connect_after(sigName: "editing-canceled", callback: (($obj: CellRendererToggle) => void)): number
    emit(sigName: "editing-canceled"): void
    connect(sigName: "editing-started", callback: (($obj: CellRendererToggle, editable: CellEditable, path: string) => void)): number
    connect_after(sigName: "editing-started", callback: (($obj: CellRendererToggle, editable: CellEditable, path: string) => void)): number
    emit(sigName: "editing-started", editable: CellEditable, path: string): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::activatable", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activatable", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::active", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inconsistent", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inconsistent", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::radio", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::radio", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-rgba", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-background-set", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-background-set", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expanded", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expanded", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-expander", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-expander", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xpad", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xpad", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ypad", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ypad", callback: (($obj: CellRendererToggle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellRendererToggle_ConstructProps)
    _init (config?: CellRendererToggle_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellRendererToggle
    static $gtype: GObject.Type
}
export interface CellView_ConstructProps extends Widget_ConstructProps {
    cell_area?: CellArea
    cell_area_context?: CellAreaContext
    draw_sensitive?: boolean
    fit_model?: boolean
    model?: TreeModel
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class CellView {
    /* Properties of Gtk.CellView */
    draw_sensitive: boolean
    fit_model: boolean
    model: TreeModel
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CellView */
    get_displayed_row(): TreePath | null
    get_draw_sensitive(): boolean
    get_fit_model(): boolean
    get_model(): TreeModel | null
    set_displayed_row(path?: TreePath | null): void
    set_draw_sensitive(draw_sensitive: boolean): void
    set_fit_model(fit_model: boolean): void
    set_model(model?: TreeModel | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.CellView */
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: CellView) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: CellView) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: CellView, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: CellView, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: CellView) => void)): number
    connect_after(sigName: "hide", callback: (($obj: CellView) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: CellView, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: CellView, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: CellView) => void)): number
    connect_after(sigName: "map", callback: (($obj: CellView) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: CellView, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: CellView, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: CellView, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: CellView, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: CellView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: CellView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: CellView) => void)): number
    connect_after(sigName: "realize", callback: (($obj: CellView) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: CellView) => void)): number
    connect_after(sigName: "show", callback: (($obj: CellView) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: CellView, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: CellView, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: CellView) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: CellView) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: CellView) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: CellView) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::draw-sensitive", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draw-sensitive", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fit-model", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fit-model", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: CellView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CellView_ConstructProps)
    _init (config?: CellView_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CellView
    static new_with_context(area: CellArea, context: CellAreaContext): CellView
    static new_with_markup(markup: string): CellView
    static new_with_text(text: string): CellView
    static new_with_texture(texture: Gdk.Texture): CellView
    static $gtype: GObject.Type
}
export interface CenterBox_ConstructProps extends Widget_ConstructProps {
    baseline_position?: BaselinePosition
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class CenterBox {
    /* Properties of Gtk.CenterBox */
    baseline_position: BaselinePosition
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CenterBox */
    get_baseline_position(): BaselinePosition
    get_center_widget(): Widget | null
    get_end_widget(): Widget | null
    get_start_widget(): Widget | null
    set_baseline_position(position: BaselinePosition): void
    set_center_widget(child?: Widget | null): void
    set_end_widget(child?: Widget | null): void
    set_start_widget(child?: Widget | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: CenterBox) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: CenterBox) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: CenterBox, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: CenterBox, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: CenterBox) => void)): number
    connect_after(sigName: "hide", callback: (($obj: CenterBox) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: CenterBox, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: CenterBox, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: CenterBox) => void)): number
    connect_after(sigName: "map", callback: (($obj: CenterBox) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: CenterBox, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: CenterBox, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: CenterBox, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: CenterBox, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: CenterBox, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: CenterBox, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: CenterBox) => void)): number
    connect_after(sigName: "realize", callback: (($obj: CenterBox) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: CenterBox) => void)): number
    connect_after(sigName: "show", callback: (($obj: CenterBox) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: CenterBox, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: CenterBox, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: CenterBox) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: CenterBox) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: CenterBox) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: CenterBox) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::baseline-position", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::baseline-position", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: CenterBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CenterBox_ConstructProps)
    _init (config?: CenterBox_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CenterBox
    static $gtype: GObject.Type
}
export interface CenterLayout_ConstructProps extends LayoutManager_ConstructProps {
}
export class CenterLayout {
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CenterLayout */
    get_baseline_position(): BaselinePosition
    get_center_widget(): Widget | null
    get_end_widget(): Widget | null
    get_orientation(): Orientation
    get_start_widget(): Widget | null
    set_baseline_position(baseline_position: BaselinePosition): void
    set_center_widget(widget?: Widget | null): void
    set_end_widget(widget?: Widget | null): void
    set_orientation(orientation: Orientation): void
    set_start_widget(widget?: Widget | null): void
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CenterLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CenterLayout, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CenterLayout_ConstructProps)
    _init (config?: CenterLayout_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CenterLayout
    static $gtype: GObject.Type
}
export interface CheckButton_ConstructProps extends Widget_ConstructProps {
    active?: boolean
    group?: CheckButton
    inconsistent?: boolean
    label?: string
    use_underline?: boolean
    accessible_role?: AccessibleRole
    action_name?: string
    action_target?: GLib.Variant
}
export class CheckButton {
    /* Properties of Gtk.CheckButton */
    active: boolean
    group: CheckButton
    inconsistent: boolean
    label: string
    use_underline: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Actionable */
    action_name: string
    action_target: GLib.Variant
    /* Fields of Gtk.CheckButton */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CheckButton */
    get_active(): boolean
    get_inconsistent(): boolean
    get_label(): string | null
    get_use_underline(): boolean
    set_active(setting: boolean): void
    set_group(group?: CheckButton | null): void
    set_inconsistent(inconsistent: boolean): void
    set_label(label?: string | null): void
    set_use_underline(setting: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant | null
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value?: GLib.Variant | null): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.CheckButton */
    vfunc_activate(): void
    vfunc_toggled(): void
    vfunc_get_action_name(): string | null
    vfunc_get_action_target_value(): GLib.Variant | null
    vfunc_set_action_name(action_name?: string | null): void
    vfunc_set_action_target_value(target_value?: GLib.Variant | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CheckButton */
    connect(sigName: "activate", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "activate", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "toggled", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "toggled", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "toggled"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: CheckButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: CheckButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: CheckButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: CheckButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: CheckButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: CheckButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: CheckButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: CheckButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: CheckButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: CheckButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: CheckButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: CheckButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: CheckButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: CheckButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::group", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::group", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inconsistent", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inconsistent", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-name", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-target", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-target", callback: (($obj: CheckButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CheckButton_ConstructProps)
    _init (config?: CheckButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CheckButton
    static new_with_label(label?: string | null): CheckButton
    static new_with_mnemonic(label?: string | null): CheckButton
    static $gtype: GObject.Type
}
export class ClosureExpression {
    /* Methods of Gtk.Expression */
    bind(target: GObject.Object, property: string, this_?: GObject.Object | null): ExpressionWatch
    evaluate(this_: GObject.Object | null, value: any): boolean
    get_value_type(): GObject.Type
    is_static(): boolean
    ref(): Expression
    unref(): void
    watch(this_: GObject.Object | null, notify: ExpressionNotify): ExpressionWatch
    static name: string
    static new(value_type: GObject.Type, closure: Function, params?: Expression[] | null): ClosureExpression
    constructor(value_type: GObject.Type, closure: Function, params?: Expression[] | null)
    /* Static methods and pseudo-constructors */
    static new(value_type: GObject.Type, closure: Function, params?: Expression[] | null): ClosureExpression
}
export interface ColorButton_ConstructProps extends Widget_ConstructProps {
    modal?: boolean
    show_editor?: boolean
    title?: string
    accessible_role?: AccessibleRole
    rgba?: Gdk.RGBA
    use_alpha?: boolean
}
export class ColorButton {
    /* Properties of Gtk.ColorButton */
    modal: boolean
    show_editor: boolean
    title: string
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.ColorChooser */
    rgba: Gdk.RGBA
    use_alpha: boolean
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ColorButton */
    get_modal(): boolean
    get_title(): string
    set_modal(modal: boolean): void
    set_title(title: string): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.ColorChooser */
    add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    get_rgba(): /* color */ Gdk.RGBA
    get_use_alpha(): boolean
    set_rgba(color: Gdk.RGBA): void
    set_use_alpha(use_alpha: boolean): void
    /* Virtual methods of Gtk.ColorButton */
    vfunc_add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    vfunc_color_activated(color: Gdk.RGBA): void
    vfunc_get_rgba(): /* color */ Gdk.RGBA
    vfunc_set_rgba(color: Gdk.RGBA): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColorButton */
    connect(sigName: "color-set", callback: (($obj: ColorButton) => void)): number
    connect_after(sigName: "color-set", callback: (($obj: ColorButton) => void)): number
    emit(sigName: "color-set"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ColorButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ColorButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ColorButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ColorButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ColorButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ColorButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ColorButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ColorButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ColorButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: ColorButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ColorButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ColorButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ColorButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ColorButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ColorButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ColorButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ColorButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ColorButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ColorButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: ColorButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ColorButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ColorButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ColorButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ColorButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ColorButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ColorButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColorChooser */
    connect(sigName: "color-activated", callback: (($obj: ColorButton, color: Gdk.RGBA) => void)): number
    connect_after(sigName: "color-activated", callback: (($obj: ColorButton, color: Gdk.RGBA) => void)): number
    emit(sigName: "color-activated", color: Gdk.RGBA): void
    connect(sigName: "notify::modal", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-editor", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-editor", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rgba", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rgba", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-alpha", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-alpha", callback: (($obj: ColorButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ColorButton_ConstructProps)
    _init (config?: ColorButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ColorButton
    static new_with_rgba(rgba: Gdk.RGBA): ColorButton
    static $gtype: GObject.Type
}
export interface ColorChooserDialog_ConstructProps extends Dialog_ConstructProps {
    show_editor?: boolean
    accessible_role?: AccessibleRole
    rgba?: Gdk.RGBA
    use_alpha?: boolean
}
export class ColorChooserDialog {
    /* Properties of Gtk.ColorChooserDialog */
    show_editor: boolean
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.ColorChooser */
    rgba: Gdk.RGBA
    use_alpha: boolean
    /* Fields of Gtk.Dialog */
    parent_instance: Window
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_content_area(): Box
    get_header_bar(): HeaderBar
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.ColorChooser */
    add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    get_rgba(): /* color */ Gdk.RGBA
    get_use_alpha(): boolean
    set_rgba(color: Gdk.RGBA): void
    set_use_alpha(use_alpha: boolean): void
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.ColorChooserDialog */
    vfunc_add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    vfunc_color_activated(color: Gdk.RGBA): void
    vfunc_get_rgba(): /* color */ Gdk.RGBA
    vfunc_set_rgba(color: Gdk.RGBA): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close(): void
    vfunc_response(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "close", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: ColorChooserDialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: ColorChooserDialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: ColorChooserDialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: ColorChooserDialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: ColorChooserDialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: ColorChooserDialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ColorChooserDialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ColorChooserDialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ColorChooserDialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ColorChooserDialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ColorChooserDialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ColorChooserDialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ColorChooserDialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ColorChooserDialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ColorChooserDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ColorChooserDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ColorChooserDialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ColorChooserDialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ColorChooserDialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ColorChooserDialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColorChooser */
    connect(sigName: "color-activated", callback: (($obj: ColorChooserDialog, color: Gdk.RGBA) => void)): number
    connect_after(sigName: "color-activated", callback: (($obj: ColorChooserDialog, color: Gdk.RGBA) => void)): number
    emit(sigName: "color-activated", color: Gdk.RGBA): void
    connect(sigName: "notify::show-editor", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-editor", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rgba", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rgba", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-alpha", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-alpha", callback: (($obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ColorChooserDialog_ConstructProps)
    _init (config?: ColorChooserDialog_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(title?: string | null, parent?: Window | null): ColorChooserDialog
    static new(): ColorChooserDialog
    static $gtype: GObject.Type
}
export interface ColorChooserWidget_ConstructProps extends Widget_ConstructProps {
    show_editor?: boolean
    accessible_role?: AccessibleRole
    rgba?: Gdk.RGBA
    use_alpha?: boolean
}
export class ColorChooserWidget {
    /* Properties of Gtk.ColorChooserWidget */
    show_editor: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.ColorChooser */
    rgba: Gdk.RGBA
    use_alpha: boolean
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.ColorChooser */
    add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    get_rgba(): /* color */ Gdk.RGBA
    get_use_alpha(): boolean
    set_rgba(color: Gdk.RGBA): void
    set_use_alpha(use_alpha: boolean): void
    /* Virtual methods of Gtk.ColorChooserWidget */
    vfunc_add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    vfunc_color_activated(color: Gdk.RGBA): void
    vfunc_get_rgba(): /* color */ Gdk.RGBA
    vfunc_set_rgba(color: Gdk.RGBA): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ColorChooserWidget) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ColorChooserWidget) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ColorChooserWidget, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ColorChooserWidget, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ColorChooserWidget) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ColorChooserWidget) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ColorChooserWidget, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ColorChooserWidget, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ColorChooserWidget) => void)): number
    connect_after(sigName: "map", callback: (($obj: ColorChooserWidget) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ColorChooserWidget, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ColorChooserWidget, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ColorChooserWidget, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ColorChooserWidget, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ColorChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ColorChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ColorChooserWidget) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ColorChooserWidget) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ColorChooserWidget) => void)): number
    connect_after(sigName: "show", callback: (($obj: ColorChooserWidget) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ColorChooserWidget, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ColorChooserWidget, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ColorChooserWidget) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ColorChooserWidget) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ColorChooserWidget) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ColorChooserWidget) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColorChooser */
    connect(sigName: "color-activated", callback: (($obj: ColorChooserWidget, color: Gdk.RGBA) => void)): number
    connect_after(sigName: "color-activated", callback: (($obj: ColorChooserWidget, color: Gdk.RGBA) => void)): number
    emit(sigName: "color-activated", color: Gdk.RGBA): void
    connect(sigName: "notify::show-editor", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-editor", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rgba", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rgba", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-alpha", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-alpha", callback: (($obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ColorChooserWidget_ConstructProps)
    _init (config?: ColorChooserWidget_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ColorChooserWidget
    static $gtype: GObject.Type
}
export interface ColumnView_ConstructProps extends Widget_ConstructProps {
    enable_rubberband?: boolean
    model?: SelectionModel
    reorderable?: boolean
    show_column_separators?: boolean
    show_row_separators?: boolean
    single_click_activate?: boolean
    accessible_role?: AccessibleRole
    hadjustment?: Adjustment
    hscroll_policy?: ScrollablePolicy
    vadjustment?: Adjustment
    vscroll_policy?: ScrollablePolicy
}
export class ColumnView {
    /* Properties of Gtk.ColumnView */
    readonly columns: Gio.ListModel
    enable_rubberband: boolean
    model: SelectionModel
    reorderable: boolean
    show_column_separators: boolean
    show_row_separators: boolean
    single_click_activate: boolean
    readonly sorter: Sorter
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ColumnView */
    append_column(column: ColumnViewColumn): void
    get_columns(): Gio.ListModel
    get_enable_rubberband(): boolean
    get_model(): SelectionModel | null
    get_reorderable(): boolean
    get_show_column_separators(): boolean
    get_show_row_separators(): boolean
    get_single_click_activate(): boolean
    get_sorter(): Sorter | null
    insert_column(position: number, column: ColumnViewColumn): void
    remove_column(column: ColumnViewColumn): void
    set_enable_rubberband(enable_rubberband: boolean): void
    set_model(model?: SelectionModel | null): void
    set_reorderable(reorderable: boolean): void
    set_show_column_separators(show_column_separators: boolean): void
    set_show_row_separators(show_row_separators: boolean): void
    set_single_click_activate(single_click_activate: boolean): void
    sort_by_column(column: ColumnViewColumn | null, direction: SortType): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.ColumnView */
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColumnView */
    connect(sigName: "activate", callback: (($obj: ColumnView, position: number) => void)): number
    connect_after(sigName: "activate", callback: (($obj: ColumnView, position: number) => void)): number
    emit(sigName: "activate", position: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ColumnView) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ColumnView) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ColumnView, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ColumnView, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ColumnView) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ColumnView) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ColumnView, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ColumnView, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ColumnView) => void)): number
    connect_after(sigName: "map", callback: (($obj: ColumnView) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ColumnView, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ColumnView, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ColumnView, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ColumnView, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ColumnView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ColumnView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ColumnView) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ColumnView) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ColumnView) => void)): number
    connect_after(sigName: "show", callback: (($obj: ColumnView) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ColumnView, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ColumnView, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ColumnView) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ColumnView) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ColumnView) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ColumnView) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::columns", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::columns", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-rubberband", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-rubberband", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reorderable", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reorderable", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-column-separators", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-column-separators", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-row-separators", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-row-separators", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-click-activate", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-click-activate", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sorter", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sorter", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscroll-policy", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscroll-policy", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscroll-policy", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscroll-policy", callback: (($obj: ColumnView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ColumnView_ConstructProps)
    _init (config?: ColumnView_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: SelectionModel | null): ColumnView
    static $gtype: GObject.Type
}
export interface ColumnViewColumn_ConstructProps extends GObject.Object_ConstructProps {
    expand?: boolean
    factory?: ListItemFactory
    fixed_width?: number
    header_menu?: Gio.MenuModel
    resizable?: boolean
    sorter?: Sorter
    title?: string
    visible?: boolean
}
export class ColumnViewColumn {
    /* Properties of Gtk.ColumnViewColumn */
    readonly column_view: ColumnView
    expand: boolean
    factory: ListItemFactory
    fixed_width: number
    header_menu: Gio.MenuModel
    resizable: boolean
    sorter: Sorter
    title: string
    visible: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ColumnViewColumn */
    get_column_view(): ColumnView | null
    get_expand(): boolean
    get_factory(): ListItemFactory | null
    get_fixed_width(): number
    get_header_menu(): Gio.MenuModel | null
    get_resizable(): boolean
    get_sorter(): Sorter | null
    get_title(): string | null
    get_visible(): boolean
    set_expand(expand: boolean): void
    set_factory(factory?: ListItemFactory | null): void
    set_fixed_width(fixed_width: number): void
    set_header_menu(menu?: Gio.MenuModel | null): void
    set_resizable(resizable: boolean): void
    set_sorter(sorter?: Sorter | null): void
    set_title(title?: string | null): void
    set_visible(visible: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::column-view", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column-view", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::expand", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expand", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::factory", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::factory", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fixed-width", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed-width", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::header-menu", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::header-menu", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sorter", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sorter", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ColumnViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ColumnViewColumn_ConstructProps)
    _init (config?: ColumnViewColumn_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(title?: string | null, factory?: ListItemFactory | null): ColumnViewColumn
    static $gtype: GObject.Type
}
export interface ComboBox_ConstructProps extends Widget_ConstructProps {
    active?: number
    active_id?: string
    button_sensitivity?: SensitivityType
    child?: Widget
    entry_text_column?: number
    has_entry?: boolean
    has_frame?: boolean
    id_column?: number
    model?: TreeModel
    popup_fixed_width?: boolean
    accessible_role?: AccessibleRole
    editing_canceled?: boolean
}
export class ComboBox {
    /* Properties of Gtk.ComboBox */
    active: number
    active_id: string
    button_sensitivity: SensitivityType
    child: Widget
    entry_text_column: number
    has_frame: boolean
    id_column: number
    model: TreeModel
    popup_fixed_width: boolean
    readonly popup_shown: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.CellEditable */
    editing_canceled: boolean
    /* Fields of Gtk.ComboBox */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ComboBox */
    get_active(): number
    get_active_id(): string | null
    get_active_iter(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_button_sensitivity(): SensitivityType
    get_child(): Widget | null
    get_entry_text_column(): number
    get_has_entry(): boolean
    get_id_column(): number
    get_model(): TreeModel | null
    get_popup_fixed_width(): boolean
    popdown(): void
    popup(): void
    popup_for_device(device: Gdk.Device): void
    set_active(index_: number): void
    set_active_id(active_id?: string | null): boolean
    set_active_iter(iter?: TreeIter | null): void
    set_button_sensitivity(sensitivity: SensitivityType): void
    set_child(child?: Widget | null): void
    set_entry_text_column(text_column: number): void
    set_id_column(id_column: number): void
    set_model(model?: TreeModel | null): void
    set_popup_fixed_width(fixed: boolean): void
    set_row_separator_func(func?: TreeViewRowSeparatorFunc | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of Gtk.ComboBox */
    vfunc_changed(): void
    vfunc_format_entry_text(path: string): string
    vfunc_editing_done(): void
    vfunc_remove_widget(): void
    vfunc_start_editing(event?: Gdk.Event | null): void
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ComboBox */
    connect(sigName: "changed", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "changed", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "format-entry-text", callback: (($obj: ComboBox, path: string) => string)): number
    connect_after(sigName: "format-entry-text", callback: (($obj: ComboBox, path: string) => string)): number
    emit(sigName: "format-entry-text", path: string): void
    connect(sigName: "move-active", callback: (($obj: ComboBox, scroll_type: ScrollType) => void)): number
    connect_after(sigName: "move-active", callback: (($obj: ComboBox, scroll_type: ScrollType) => void)): number
    emit(sigName: "move-active", scroll_type: ScrollType): void
    connect(sigName: "popdown", callback: (($obj: ComboBox) => boolean)): number
    connect_after(sigName: "popdown", callback: (($obj: ComboBox) => boolean)): number
    emit(sigName: "popdown"): void
    connect(sigName: "popup", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "popup", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "popup"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ComboBox, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ComboBox, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ComboBox, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ComboBox, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "map", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ComboBox, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ComboBox, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ComboBox, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ComboBox, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ComboBox, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ComboBox, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "show", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ComboBox, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ComboBox, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "editing-done", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "editing-done"): void
    connect(sigName: "remove-widget", callback: (($obj: ComboBox) => void)): number
    connect_after(sigName: "remove-widget", callback: (($obj: ComboBox) => void)): number
    emit(sigName: "remove-widget"): void
    connect(sigName: "notify::active", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::active-id", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active-id", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::button-sensitivity", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button-sensitivity", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::entry-text-column", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entry-text-column", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id-column", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id-column", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::popup-fixed-width", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::popup-fixed-width", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::popup-shown", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::popup-shown", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing-canceled", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing-canceled", callback: (($obj: ComboBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ComboBox_ConstructProps)
    _init (config?: ComboBox_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ComboBox
    static new_with_entry(): ComboBox
    static new_with_model(model: TreeModel): ComboBox
    static new_with_model_and_entry(model: TreeModel): ComboBox
    static $gtype: GObject.Type
}
export interface ComboBoxText_ConstructProps extends ComboBox_ConstructProps {
    accessible_role?: AccessibleRole
    editing_canceled?: boolean
}
export class ComboBoxText {
    /* Properties of Gtk.ComboBox */
    active: number
    active_id: string
    button_sensitivity: SensitivityType
    child: Widget
    entry_text_column: number
    has_frame: boolean
    id_column: number
    model: TreeModel
    popup_fixed_width: boolean
    readonly popup_shown: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.CellEditable */
    editing_canceled: boolean
    /* Fields of Gtk.ComboBox */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ComboBoxText */
    append(id: string | null, text: string): void
    append_text(text: string): void
    get_active_text(): string | null
    insert(position: number, id: string | null, text: string): void
    insert_text(position: number, text: string): void
    prepend(id: string | null, text: string): void
    prepend_text(text: string): void
    remove(position: number): void
    remove_all(): void
    /* Methods of Gtk.ComboBox */
    get_active(): number
    get_active_id(): string | null
    get_active_iter(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_button_sensitivity(): SensitivityType
    get_child(): Widget | null
    get_entry_text_column(): number
    get_has_entry(): boolean
    get_id_column(): number
    get_model(): TreeModel | null
    get_popup_fixed_width(): boolean
    popdown(): void
    popup(): void
    popup_for_device(device: Gdk.Device): void
    set_active(index_: number): void
    set_active_id(active_id?: string | null): boolean
    set_active_iter(iter?: TreeIter | null): void
    set_button_sensitivity(sensitivity: SensitivityType): void
    set_child(child?: Widget | null): void
    set_entry_text_column(text_column: number): void
    set_id_column(id_column: number): void
    set_model(model?: TreeModel | null): void
    set_popup_fixed_width(fixed: boolean): void
    set_row_separator_func(func?: TreeViewRowSeparatorFunc | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of Gtk.ComboBox */
    vfunc_changed(): void
    vfunc_format_entry_text(path: string): string
    vfunc_editing_done(): void
    vfunc_remove_widget(): void
    vfunc_start_editing(event?: Gdk.Event | null): void
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ComboBox */
    connect(sigName: "changed", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "changed", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "format-entry-text", callback: (($obj: ComboBoxText, path: string) => string)): number
    connect_after(sigName: "format-entry-text", callback: (($obj: ComboBoxText, path: string) => string)): number
    emit(sigName: "format-entry-text", path: string): void
    connect(sigName: "move-active", callback: (($obj: ComboBoxText, scroll_type: ScrollType) => void)): number
    connect_after(sigName: "move-active", callback: (($obj: ComboBoxText, scroll_type: ScrollType) => void)): number
    emit(sigName: "move-active", scroll_type: ScrollType): void
    connect(sigName: "popdown", callback: (($obj: ComboBoxText) => boolean)): number
    connect_after(sigName: "popdown", callback: (($obj: ComboBoxText) => boolean)): number
    emit(sigName: "popdown"): void
    connect(sigName: "popup", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "popup", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "popup"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ComboBoxText, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ComboBoxText, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ComboBoxText, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ComboBoxText, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "map", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ComboBoxText, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ComboBoxText, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ComboBoxText, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ComboBoxText, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ComboBoxText, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ComboBoxText, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "show", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ComboBoxText, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ComboBoxText, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "editing-done", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "editing-done"): void
    connect(sigName: "remove-widget", callback: (($obj: ComboBoxText) => void)): number
    connect_after(sigName: "remove-widget", callback: (($obj: ComboBoxText) => void)): number
    emit(sigName: "remove-widget"): void
    connect(sigName: "notify::active", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::active-id", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active-id", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::button-sensitivity", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button-sensitivity", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::entry-text-column", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entry-text-column", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id-column", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id-column", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::popup-fixed-width", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::popup-fixed-width", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::popup-shown", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::popup-shown", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing-canceled", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing-canceled", callback: (($obj: ComboBoxText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ComboBoxText_ConstructProps)
    _init (config?: ComboBoxText_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ComboBoxText
    static new_with_entry(): ComboBoxText
    static $gtype: GObject.Type
}
export class ConstantExpression {
    /* Methods of Gtk.ConstantExpression */
    get_value(): any
    /* Methods of Gtk.Expression */
    bind(target: GObject.Object, property: string, this_?: GObject.Object | null): ExpressionWatch
    evaluate(this_: GObject.Object | null, value: any): boolean
    get_value_type(): GObject.Type
    is_static(): boolean
    ref(): Expression
    unref(): void
    watch(this_: GObject.Object | null, notify: ExpressionNotify): ExpressionWatch
    static name: string
    /* Static methods and pseudo-constructors */
    static new_for_value(value: any): ConstantExpression
}
export interface Constraint_ConstructProps extends GObject.Object_ConstructProps {
    constant?: number
    multiplier?: number
    relation?: ConstraintRelation
    source?: ConstraintTarget
    source_attribute?: ConstraintAttribute
    strength?: number
    target?: ConstraintTarget
    target_attribute?: ConstraintAttribute
}
export class Constraint {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Constraint */
    get_constant(): number
    get_multiplier(): number
    get_relation(): ConstraintRelation
    get_source(): ConstraintTarget | null
    get_source_attribute(): ConstraintAttribute
    get_strength(): number
    get_target(): ConstraintTarget | null
    get_target_attribute(): ConstraintAttribute
    is_attached(): boolean
    is_constant(): boolean
    is_required(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Constraint, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Constraint, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Constraint_ConstructProps)
    _init (config?: Constraint_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(target: ConstraintTarget | null, target_attribute: ConstraintAttribute, relation: ConstraintRelation, source: ConstraintTarget | null, source_attribute: ConstraintAttribute, multiplier: number, constant: number, strength: number): Constraint
    static new_constant(target: ConstraintTarget | null, target_attribute: ConstraintAttribute, relation: ConstraintRelation, constant: number, strength: number): Constraint
    static $gtype: GObject.Type
}
export interface ConstraintGuide_ConstructProps extends GObject.Object_ConstructProps {
    max_height?: number
    max_width?: number
    min_height?: number
    min_width?: number
    name?: string
    nat_height?: number
    nat_width?: number
    strength?: ConstraintStrength
}
export class ConstraintGuide {
    /* Properties of Gtk.ConstraintGuide */
    max_height: number
    max_width: number
    min_height: number
    min_width: number
    name: string
    nat_height: number
    nat_width: number
    strength: ConstraintStrength
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ConstraintGuide */
    get_max_size(width?: number | null, height?: number | null): void
    get_min_size(width?: number | null, height?: number | null): void
    get_name(): string | null
    get_nat_size(width?: number | null, height?: number | null): void
    get_strength(): ConstraintStrength
    set_max_size(width: number, height: number): void
    set_min_size(width: number, height: number): void
    set_name(name?: string | null): void
    set_nat_size(width: number, height: number): void
    set_strength(strength: ConstraintStrength): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::max-height", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-height", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-height", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-height", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-width", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-width", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nat-height", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nat-height", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nat-width", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nat-width", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strength", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strength", callback: (($obj: ConstraintGuide, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ConstraintGuide_ConstructProps)
    _init (config?: ConstraintGuide_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ConstraintGuide
    static $gtype: GObject.Type
}
export interface ConstraintLayout_ConstructProps extends LayoutManager_ConstructProps {
}
export class ConstraintLayout {
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ConstraintLayout */
    add_constraint(constraint: Constraint): void
    add_constraints_from_description(lines: string[], hspacing: number, vspacing: number, views: GLib.HashTable): Constraint[]
    add_guide(guide: ConstraintGuide): void
    observe_constraints(): Gio.ListModel
    observe_guides(): Gio.ListModel
    remove_all_constraints(): void
    remove_constraint(constraint: Constraint): void
    remove_guide(guide: ConstraintGuide): void
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.ConstraintLayout */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ConstraintLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ConstraintLayout, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ConstraintLayout_ConstructProps)
    _init (config?: ConstraintLayout_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ConstraintLayout
    static $gtype: GObject.Type
}
export interface ConstraintLayoutChild_ConstructProps extends LayoutChild_ConstructProps {
}
export class ConstraintLayoutChild {
    /* Fields of Gtk.LayoutChild */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LayoutChild */
    get_child_widget(): Widget
    get_layout_manager(): LayoutManager
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ConstraintLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ConstraintLayoutChild, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ConstraintLayoutChild_ConstructProps)
    _init (config?: ConstraintLayoutChild_ConstructProps): void
    static $gtype: GObject.Type
}
export interface CssProvider_ConstructProps extends GObject.Object_ConstructProps {
}
export class CssProvider {
    /* Fields of Gtk.CssProvider */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CssProvider */
    load_from_data(data: Uint8Array): void
    load_from_file(file: Gio.File): void
    load_from_path(path: string): void
    load_from_resource(resource_path: string): void
    load_named(name: string, variant?: string | null): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CssProvider */
    connect(sigName: "parsing-error", callback: (($obj: CssProvider, section: CssSection, error: GLib.Error) => void)): number
    connect_after(sigName: "parsing-error", callback: (($obj: CssProvider, section: CssSection, error: GLib.Error) => void)): number
    emit(sigName: "parsing-error", section: CssSection, error: GLib.Error): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CssProvider, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CssProvider, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.StyleProvider */
    connect(sigName: "gtk-private-changed", callback: (($obj: CssProvider) => void)): number
    connect_after(sigName: "gtk-private-changed", callback: (($obj: CssProvider) => void)): number
    emit(sigName: "gtk-private-changed"): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CssProvider_ConstructProps)
    _init (config?: CssProvider_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CssProvider
    static $gtype: GObject.Type
}
export interface CustomFilter_ConstructProps extends Filter_ConstructProps {
}
export class CustomFilter {
    /* Fields of Gtk.Filter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CustomFilter */
    set_filter_func(match_func: CustomFilterFunc | null): void
    /* Methods of Gtk.Filter */
    changed(change: FilterChange): void
    get_strictness(): FilterMatch
    match(item: GObject.Object): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Filter */
    vfunc_get_strictness(): FilterMatch
    vfunc_match(item?: GObject.Object | null): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Filter */
    connect(sigName: "changed", callback: (($obj: CustomFilter, change: FilterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: CustomFilter, change: FilterChange) => void)): number
    emit(sigName: "changed", change: FilterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CustomFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CustomFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CustomFilter_ConstructProps)
    _init (config?: CustomFilter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(match_func: CustomFilterFunc | null): CustomFilter
    static $gtype: GObject.Type
}
export interface CustomLayout_ConstructProps extends LayoutManager_ConstructProps {
}
export class CustomLayout {
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CustomLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CustomLayout, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CustomLayout_ConstructProps)
    _init (config?: CustomLayout_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(request_mode: CustomRequestModeFunc | null, measure: CustomMeasureFunc, allocate: CustomAllocateFunc): CustomLayout
    static $gtype: GObject.Type
}
export interface CustomSorter_ConstructProps extends Sorter_ConstructProps {
}
export class CustomSorter {
    /* Fields of Gtk.Sorter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.CustomSorter */
    set_sort_func(sort_func: GLib.CompareDataFunc | null): void
    /* Methods of Gtk.Sorter */
    changed(change: SorterChange): void
    compare(item1: GObject.Object, item2: GObject.Object): Ordering
    get_order(): SorterOrder
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Sorter */
    vfunc_compare(item1?: GObject.Object | null, item2?: GObject.Object | null): Ordering
    vfunc_get_order(): SorterOrder
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Sorter */
    connect(sigName: "changed", callback: (($obj: CustomSorter, change: SorterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: CustomSorter, change: SorterChange) => void)): number
    emit(sigName: "changed", change: SorterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CustomSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CustomSorter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CustomSorter_ConstructProps)
    _init (config?: CustomSorter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(sort_func?: GLib.CompareDataFunc | null): CustomSorter
    static $gtype: GObject.Type
}
export interface Dialog_ConstructProps extends Window_ConstructProps {
    use_header_bar?: number
    accessible_role?: AccessibleRole
}
export class Dialog {
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Dialog */
    parent_instance: Window
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_content_area(): Box
    get_header_bar(): HeaderBar
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Dialog */
    vfunc_close(): void
    vfunc_response(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "close", callback: (($obj: Dialog) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: Dialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: Dialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: Dialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: Dialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: Dialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: Dialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: Dialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: Dialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: Dialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Dialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Dialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Dialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Dialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Dialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Dialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: Dialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Dialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Dialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Dialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Dialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Dialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Dialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Dialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: Dialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Dialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Dialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Dialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Dialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Dialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::application", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Dialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Dialog_ConstructProps)
    _init (config?: Dialog_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Dialog
    static $gtype: GObject.Type
}
export interface DirectoryList_ConstructProps extends GObject.Object_ConstructProps {
    attributes?: string
    file?: Gio.File
    io_priority?: number
    monitored?: boolean
}
export class DirectoryList {
    /* Properties of Gtk.DirectoryList */
    attributes: string
    readonly error: GLib.Error
    file: Gio.File
    io_priority: number
    readonly loading: boolean
    monitored: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.DirectoryList */
    get_attributes(): string | null
    get_error(): GLib.Error | null
    get_file(): Gio.File | null
    get_io_priority(): number
    get_monitored(): boolean
    is_loading(): boolean
    set_attributes(attributes?: string | null): void
    set_file(file?: Gio.File | null): void
    set_io_priority(io_priority: number): void
    set_monitored(monitored: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.DirectoryList */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: DirectoryList, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: DirectoryList, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::attributes", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::error", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::error", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::file", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::io-priority", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::io-priority", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loading", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loading", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::monitored", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::monitored", callback: (($obj: DirectoryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DirectoryList_ConstructProps)
    _init (config?: DirectoryList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(attributes?: string | null, file?: Gio.File | null): DirectoryList
    static $gtype: GObject.Type
}
export interface DragIcon_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    accessible_role?: AccessibleRole
}
export class DragIcon {
    /* Properties of Gtk.DragIcon */
    child: Widget
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.DragIcon */
    get_child(): Widget | null
    set_child(child?: Widget | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Methods of Gtk.Root */
    get_focus(): Widget | null
    set_focus(focus?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: DragIcon) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: DragIcon) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: DragIcon, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: DragIcon, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: DragIcon) => void)): number
    connect_after(sigName: "hide", callback: (($obj: DragIcon) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: DragIcon, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: DragIcon, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: DragIcon) => void)): number
    connect_after(sigName: "map", callback: (($obj: DragIcon) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: DragIcon, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: DragIcon, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: DragIcon, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: DragIcon, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: DragIcon, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: DragIcon, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: DragIcon) => void)): number
    connect_after(sigName: "realize", callback: (($obj: DragIcon) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: DragIcon) => void)): number
    connect_after(sigName: "show", callback: (($obj: DragIcon) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: DragIcon, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: DragIcon, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: DragIcon) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: DragIcon) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: DragIcon) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: DragIcon) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: DragIcon, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DragIcon_ConstructProps)
    _init (config?: DragIcon_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static create_widget_for_value(value: any): Widget | null
    static get_for_drag(drag: Gdk.Drag): Widget
    static set_from_paintable(drag: Gdk.Drag, paintable: Gdk.Paintable, hot_x: number, hot_y: number): void
    static get_for_surface(surface: Gdk.Surface): Native
    static $gtype: GObject.Type
}
export interface DragSource_ConstructProps extends GestureSingle_ConstructProps {
    actions?: Gdk.DragAction
    content?: Gdk.ContentProvider
}
export class DragSource {
    /* Properties of Gtk.DragSource */
    actions: Gdk.DragAction
    content: Gdk.ContentProvider
    /* Properties of Gtk.GestureSingle */
    button: number
    exclusive: boolean
    touch_only: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.DragSource */
    drag_cancel(): void
    get_actions(): Gdk.DragAction
    get_content(): Gdk.ContentProvider | null
    get_drag(): Gdk.Drag | null
    set_actions(actions: Gdk.DragAction): void
    set_content(content?: Gdk.ContentProvider | null): void
    set_icon(paintable: Gdk.Paintable | null, hot_x: number, hot_y: number): void
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.DragSource */
    connect(sigName: "drag-begin", callback: (($obj: DragSource, drag: Gdk.Drag) => void)): number
    connect_after(sigName: "drag-begin", callback: (($obj: DragSource, drag: Gdk.Drag) => void)): number
    emit(sigName: "drag-begin", drag: Gdk.Drag): void
    connect(sigName: "drag-cancel", callback: (($obj: DragSource, drag: Gdk.Drag, reason: Gdk.DragCancelReason) => boolean)): number
    connect_after(sigName: "drag-cancel", callback: (($obj: DragSource, drag: Gdk.Drag, reason: Gdk.DragCancelReason) => boolean)): number
    emit(sigName: "drag-cancel", drag: Gdk.Drag, reason: Gdk.DragCancelReason): void
    connect(sigName: "drag-end", callback: (($obj: DragSource, drag: Gdk.Drag, delete_data: boolean) => void)): number
    connect_after(sigName: "drag-end", callback: (($obj: DragSource, drag: Gdk.Drag, delete_data: boolean) => void)): number
    emit(sigName: "drag-end", drag: Gdk.Drag, delete_data: boolean): void
    connect(sigName: "prepare", callback: (($obj: DragSource, x: number, y: number) => Gdk.ContentProvider | null)): number
    connect_after(sigName: "prepare", callback: (($obj: DragSource, x: number, y: number) => Gdk.ContentProvider | null)): number
    emit(sigName: "prepare", x: number, y: number): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: DragSource, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: DragSource, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: DragSource, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: DragSource, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: DragSource, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: DragSource, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: DragSource, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: DragSource, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: DragSource, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: DragSource, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::actions", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::actions", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::button", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::exclusive", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::exclusive", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::touch-only", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::touch-only", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: DragSource, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DragSource_ConstructProps)
    _init (config?: DragSource_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DragSource
    static $gtype: GObject.Type
}
export interface DrawingArea_ConstructProps extends Widget_ConstructProps {
    content_height?: number
    content_width?: number
    accessible_role?: AccessibleRole
}
export class DrawingArea {
    /* Properties of Gtk.DrawingArea */
    content_height: number
    content_width: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.DrawingArea */
    widget: Widget
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.DrawingArea */
    get_content_height(): number
    get_content_width(): number
    set_content_height(height: number): void
    set_content_width(width: number): void
    set_draw_func(draw_func: DrawingAreaDrawFunc | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.DrawingArea */
    vfunc_resize(width: number, height: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.DrawingArea */
    connect(sigName: "resize", callback: (($obj: DrawingArea, width: number, height: number) => void)): number
    connect_after(sigName: "resize", callback: (($obj: DrawingArea, width: number, height: number) => void)): number
    emit(sigName: "resize", width: number, height: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: DrawingArea) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: DrawingArea) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: DrawingArea, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: DrawingArea, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: DrawingArea) => void)): number
    connect_after(sigName: "hide", callback: (($obj: DrawingArea) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: DrawingArea, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: DrawingArea, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: DrawingArea) => void)): number
    connect_after(sigName: "map", callback: (($obj: DrawingArea) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: DrawingArea, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: DrawingArea, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: DrawingArea, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: DrawingArea, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: DrawingArea, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: DrawingArea, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: DrawingArea) => void)): number
    connect_after(sigName: "realize", callback: (($obj: DrawingArea) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: DrawingArea) => void)): number
    connect_after(sigName: "show", callback: (($obj: DrawingArea) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: DrawingArea, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: DrawingArea, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: DrawingArea) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: DrawingArea) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: DrawingArea) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: DrawingArea) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::content-height", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-height", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-width", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-width", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: DrawingArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DrawingArea_ConstructProps)
    _init (config?: DrawingArea_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DrawingArea
    static $gtype: GObject.Type
}
export interface DropControllerMotion_ConstructProps extends EventController_ConstructProps {
}
export class DropControllerMotion {
    /* Properties of Gtk.DropControllerMotion */
    readonly contains_pointer: boolean
    readonly drop: Gdk.Drop
    readonly is_pointer: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.DropControllerMotion */
    get_drop(): Gdk.Drop | null
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.DropControllerMotion */
    connect(sigName: "enter", callback: (($obj: DropControllerMotion, x: number, y: number) => void)): number
    connect_after(sigName: "enter", callback: (($obj: DropControllerMotion, x: number, y: number) => void)): number
    emit(sigName: "enter", x: number, y: number): void
    connect(sigName: "leave", callback: (($obj: DropControllerMotion) => void)): number
    connect_after(sigName: "leave", callback: (($obj: DropControllerMotion) => void)): number
    emit(sigName: "leave"): void
    connect(sigName: "motion", callback: (($obj: DropControllerMotion, x: number, y: number) => void)): number
    connect_after(sigName: "motion", callback: (($obj: DropControllerMotion, x: number, y: number) => void)): number
    emit(sigName: "motion", x: number, y: number): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::contains-pointer", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::contains-pointer", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::drop", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::drop", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-pointer", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-pointer", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: DropControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DropControllerMotion_ConstructProps)
    _init (config?: DropControllerMotion_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DropControllerMotion
    static $gtype: GObject.Type
}
export interface DropDown_ConstructProps extends Widget_ConstructProps {
    enable_search?: boolean
    expression?: Expression
    factory?: ListItemFactory
    list_factory?: ListItemFactory
    model?: Gio.ListModel
    selected?: number
    accessible_role?: AccessibleRole
}
export class DropDown {
    /* Properties of Gtk.DropDown */
    enable_search: boolean
    expression: Expression
    factory: ListItemFactory
    list_factory: ListItemFactory
    model: Gio.ListModel
    selected: number
    readonly selected_item: GObject.Object
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.DropDown */
    get_enable_search(): boolean
    get_expression(): Expression | null
    get_factory(): ListItemFactory | null
    get_list_factory(): ListItemFactory | null
    get_model(): Gio.ListModel | null
    get_selected(): number
    get_selected_item(): GObject.Object | null
    set_enable_search(enable_search: boolean): void
    set_expression(expression?: Expression | null): void
    set_factory(factory?: ListItemFactory | null): void
    set_list_factory(factory?: ListItemFactory | null): void
    set_model(model?: Gio.ListModel | null): void
    set_selected(position: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: DropDown) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: DropDown) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: DropDown, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: DropDown, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: DropDown) => void)): number
    connect_after(sigName: "hide", callback: (($obj: DropDown) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: DropDown, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: DropDown, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: DropDown) => void)): number
    connect_after(sigName: "map", callback: (($obj: DropDown) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: DropDown, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: DropDown, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: DropDown, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: DropDown, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: DropDown, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: DropDown, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: DropDown) => void)): number
    connect_after(sigName: "realize", callback: (($obj: DropDown) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: DropDown) => void)): number
    connect_after(sigName: "show", callback: (($obj: DropDown) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: DropDown, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: DropDown, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: DropDown) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: DropDown) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: DropDown) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: DropDown) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::enable-search", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-search", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::expression", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expression", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::factory", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::factory", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::list-factory", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::list-factory", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected-item", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-item", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: DropDown, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DropDown_ConstructProps)
    _init (config?: DropDown_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: Gio.ListModel | null, expression?: Expression | null): DropDown
    static new_from_strings(strings: string[]): DropDown
    static $gtype: GObject.Type
}
export interface DropTarget_ConstructProps extends EventController_ConstructProps {
    actions?: Gdk.DragAction
    preload?: boolean
}
export class DropTarget {
    /* Properties of Gtk.DropTarget */
    actions: Gdk.DragAction
    readonly drop: Gdk.Drop
    readonly formats: Gdk.ContentFormats
    preload: boolean
    readonly value: any
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.DropTarget */
    get_actions(): Gdk.DragAction
    get_drop(): Gdk.Drop | null
    get_formats(): Gdk.ContentFormats | null
    get_gtypes(): GObject.Type[] | null
    get_preload(): boolean
    get_value(): any
    reject(): void
    set_actions(actions: Gdk.DragAction): void
    set_gtypes(types: GObject.Type[] | null): void
    set_preload(preload: boolean): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.DropTarget */
    connect(sigName: "accept", callback: (($obj: DropTarget, drop: Gdk.Drop) => boolean)): number
    connect_after(sigName: "accept", callback: (($obj: DropTarget, drop: Gdk.Drop) => boolean)): number
    emit(sigName: "accept", drop: Gdk.Drop): void
    connect(sigName: "drop", callback: (($obj: DropTarget, value: any, x: number, y: number) => boolean)): number
    connect_after(sigName: "drop", callback: (($obj: DropTarget, value: any, x: number, y: number) => boolean)): number
    emit(sigName: "drop", value: any, x: number, y: number): void
    connect(sigName: "enter", callback: (($obj: DropTarget, x: number, y: number) => Gdk.DragAction)): number
    connect_after(sigName: "enter", callback: (($obj: DropTarget, x: number, y: number) => Gdk.DragAction)): number
    emit(sigName: "enter", x: number, y: number): void
    connect(sigName: "leave", callback: (($obj: DropTarget) => void)): number
    connect_after(sigName: "leave", callback: (($obj: DropTarget) => void)): number
    emit(sigName: "leave"): void
    connect(sigName: "motion", callback: (($obj: DropTarget, x: number, y: number) => Gdk.DragAction)): number
    connect_after(sigName: "motion", callback: (($obj: DropTarget, x: number, y: number) => Gdk.DragAction)): number
    emit(sigName: "motion", x: number, y: number): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::actions", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::actions", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::drop", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::drop", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::formats", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::formats", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preload", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preload", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: DropTarget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DropTarget_ConstructProps)
    _init (config?: DropTarget_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(type: GObject.Type, actions: Gdk.DragAction): DropTarget
    static $gtype: GObject.Type
}
export interface DropTargetAsync_ConstructProps extends EventController_ConstructProps {
    actions?: Gdk.DragAction
    formats?: Gdk.ContentFormats
}
export class DropTargetAsync {
    /* Properties of Gtk.DropTargetAsync */
    actions: Gdk.DragAction
    formats: Gdk.ContentFormats
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.DropTargetAsync */
    get_actions(): Gdk.DragAction
    get_formats(): Gdk.ContentFormats | null
    reject_drop(drop: Gdk.Drop): void
    set_actions(actions: Gdk.DragAction): void
    set_formats(formats?: Gdk.ContentFormats | null): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.DropTargetAsync */
    connect(sigName: "accept", callback: (($obj: DropTargetAsync, drop: Gdk.Drop) => boolean)): number
    connect_after(sigName: "accept", callback: (($obj: DropTargetAsync, drop: Gdk.Drop) => boolean)): number
    emit(sigName: "accept", drop: Gdk.Drop): void
    connect(sigName: "drag-enter", callback: (($obj: DropTargetAsync, drop: Gdk.Drop, x: number, y: number) => Gdk.DragAction)): number
    connect_after(sigName: "drag-enter", callback: (($obj: DropTargetAsync, drop: Gdk.Drop, x: number, y: number) => Gdk.DragAction)): number
    emit(sigName: "drag-enter", drop: Gdk.Drop, x: number, y: number): void
    connect(sigName: "drag-leave", callback: (($obj: DropTargetAsync, drop: Gdk.Drop) => void)): number
    connect_after(sigName: "drag-leave", callback: (($obj: DropTargetAsync, drop: Gdk.Drop) => void)): number
    emit(sigName: "drag-leave", drop: Gdk.Drop): void
    connect(sigName: "drag-motion", callback: (($obj: DropTargetAsync, drop: Gdk.Drop, x: number, y: number) => Gdk.DragAction)): number
    connect_after(sigName: "drag-motion", callback: (($obj: DropTargetAsync, drop: Gdk.Drop, x: number, y: number) => Gdk.DragAction)): number
    emit(sigName: "drag-motion", drop: Gdk.Drop, x: number, y: number): void
    connect(sigName: "drop", callback: (($obj: DropTargetAsync, drop: Gdk.Drop, x: number, y: number) => boolean)): number
    connect_after(sigName: "drop", callback: (($obj: DropTargetAsync, drop: Gdk.Drop, x: number, y: number) => boolean)): number
    emit(sigName: "drop", drop: Gdk.Drop, x: number, y: number): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::actions", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::actions", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::formats", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::formats", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: DropTargetAsync, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DropTargetAsync_ConstructProps)
    _init (config?: DropTargetAsync_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(formats: Gdk.ContentFormats | null, actions: Gdk.DragAction): DropTargetAsync
    static $gtype: GObject.Type
}
export interface EditableLabel_ConstructProps extends Widget_ConstructProps {
    accessible_role?: AccessibleRole
    editable?: boolean
    enable_undo?: boolean
    max_width_chars?: number
    text?: string
    width_chars?: number
    xalign?: number
}
export class EditableLabel {
    /* Properties of Gtk.EditableLabel */
    readonly editing: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Editable */
    readonly cursor_position: number
    editable: boolean
    enable_undo: boolean
    max_width_chars: number
    readonly selection_bound: number
    text: string
    width_chars: number
    xalign: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EditableLabel */
    get_editing(): boolean
    start_editing(): void
    stop_editing(commit: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Editable */
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    finish_delegate(): void
    get_alignment(): number
    get_chars(start_pos: number, end_pos: number): string
    get_delegate(): Editable | null
    get_editable(): boolean
    get_enable_undo(): boolean
    get_max_width_chars(): number
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    get_text(): string
    get_width_chars(): number
    init_delegate(): void
    insert_text(text: string, length: number, position: number): /* position */ number
    select_region(start_pos: number, end_pos: number): void
    set_alignment(xalign: number): void
    set_editable(is_editable: boolean): void
    set_enable_undo(enable_undo: boolean): void
    set_max_width_chars(n_chars: number): void
    set_position(position: number): void
    set_text(text: string): void
    set_width_chars(n_chars: number): void
    /* Virtual methods of Gtk.EditableLabel */
    vfunc_changed(): void
    vfunc_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_get_delegate(): Editable | null
    vfunc_get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    vfunc_get_text(): string
    vfunc_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_set_selection_bounds(start_pos: number, end_pos: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: EditableLabel) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: EditableLabel) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: EditableLabel, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: EditableLabel, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: EditableLabel) => void)): number
    connect_after(sigName: "hide", callback: (($obj: EditableLabel) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: EditableLabel, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: EditableLabel, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: EditableLabel) => void)): number
    connect_after(sigName: "map", callback: (($obj: EditableLabel) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: EditableLabel, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: EditableLabel, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: EditableLabel, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: EditableLabel, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: EditableLabel, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: EditableLabel, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: EditableLabel) => void)): number
    connect_after(sigName: "realize", callback: (($obj: EditableLabel) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: EditableLabel) => void)): number
    connect_after(sigName: "show", callback: (($obj: EditableLabel) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: EditableLabel, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: EditableLabel, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: EditableLabel) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: EditableLabel) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: EditableLabel) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: EditableLabel) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: (($obj: EditableLabel) => void)): number
    connect_after(sigName: "changed", callback: (($obj: EditableLabel) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "delete-text", callback: (($obj: EditableLabel, start_pos: number, end_pos: number) => void)): number
    connect_after(sigName: "delete-text", callback: (($obj: EditableLabel, start_pos: number, end_pos: number) => void)): number
    emit(sigName: "delete-text", start_pos: number, end_pos: number): void
    connect(sigName: "insert-text", callback: (($obj: EditableLabel, text: string, length: number, position: number) => void)): number
    connect_after(sigName: "insert-text", callback: (($obj: EditableLabel, text: string, length: number, position: number) => void)): number
    emit(sigName: "insert-text", text: string, length: number, position: number): void
    connect(sigName: "notify::editing", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor-position", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-position", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-undo", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-undo", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-bound", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-bound", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: EditableLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EditableLabel_ConstructProps)
    _init (config?: EditableLabel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(str: string): EditableLabel
    static delegate_get_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static delegate_set_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static install_properties(object_class: GObject.ObjectClass, first_prop: number): number
    static $gtype: GObject.Type
}
export interface EmojiChooser_ConstructProps extends Popover_ConstructProps {
    accessible_role?: AccessibleRole
}
export class EmojiChooser {
    /* Properties of Gtk.Popover */
    autohide: boolean
    cascade_popdown: boolean
    child: Widget
    default_widget: Widget
    has_arrow: boolean
    mnemonics_visible: boolean
    pointing_to: Gdk.Rectangle
    position: PositionType
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Popover */
    get_autohide(): boolean
    get_cascade_popdown(): boolean
    get_child(): Widget | null
    get_has_arrow(): boolean
    get_mnemonics_visible(): boolean
    get_offset(): [ /* x_offset */ number | null, /* y_offset */ number | null ]
    get_pointing_to(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_position(): PositionType
    popdown(): void
    popup(): void
    present(): void
    set_autohide(autohide: boolean): void
    set_cascade_popdown(cascade_popdown: boolean): void
    set_child(child?: Widget | null): void
    set_default_widget(widget?: Widget | null): void
    set_has_arrow(has_arrow: boolean): void
    set_mnemonics_visible(mnemonics_visible: boolean): void
    set_offset(x_offset: number, y_offset: number): void
    set_pointing_to(rect: Gdk.Rectangle): void
    set_position(position: PositionType): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Popover */
    vfunc_activate_default(): void
    vfunc_closed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EmojiChooser */
    connect(sigName: "emoji-picked", callback: (($obj: EmojiChooser, text: string) => void)): number
    connect_after(sigName: "emoji-picked", callback: (($obj: EmojiChooser, text: string) => void)): number
    emit(sigName: "emoji-picked", text: string): void
    /* Signals of Gtk.Popover */
    connect(sigName: "activate-default", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "closed", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "closed", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "closed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: EmojiChooser, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: EmojiChooser, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "hide", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: EmojiChooser, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: EmojiChooser, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "map", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: EmojiChooser, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: EmojiChooser, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: EmojiChooser, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: EmojiChooser, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: EmojiChooser, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: EmojiChooser, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "realize", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "show", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: EmojiChooser, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: EmojiChooser, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: EmojiChooser) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: EmojiChooser) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autohide", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autohide", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cascade-popdown", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cascade-popdown", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-arrow", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-arrow", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pointing-to", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointing-to", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::position", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::position", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: EmojiChooser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EmojiChooser_ConstructProps)
    _init (config?: EmojiChooser_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): EmojiChooser
    static $gtype: GObject.Type
}
export interface Entry_ConstructProps extends Widget_ConstructProps {
    activates_default?: boolean
    attributes?: Pango.AttrList
    buffer?: EntryBuffer
    completion?: EntryCompletion
    enable_emoji_completion?: boolean
    extra_menu?: Gio.MenuModel
    has_frame?: boolean
    im_module?: string
    input_hints?: InputHints
    input_purpose?: InputPurpose
    invisible_char?: number
    invisible_char_set?: boolean
    max_length?: number
    overwrite_mode?: boolean
    placeholder_text?: string
    primary_icon_activatable?: boolean
    primary_icon_gicon?: Gio.Icon
    primary_icon_name?: string
    primary_icon_paintable?: Gdk.Paintable
    primary_icon_sensitive?: boolean
    primary_icon_tooltip_markup?: string
    primary_icon_tooltip_text?: string
    progress_fraction?: number
    progress_pulse_step?: number
    secondary_icon_activatable?: boolean
    secondary_icon_gicon?: Gio.Icon
    secondary_icon_name?: string
    secondary_icon_paintable?: Gdk.Paintable
    secondary_icon_sensitive?: boolean
    secondary_icon_tooltip_markup?: string
    secondary_icon_tooltip_text?: string
    show_emoji_icon?: boolean
    tabs?: Pango.TabArray
    truncate_multiline?: boolean
    visibility?: boolean
    accessible_role?: AccessibleRole
    editing_canceled?: boolean
    editable?: boolean
    enable_undo?: boolean
    max_width_chars?: number
    text?: string
    width_chars?: number
    xalign?: number
}
export class Entry {
    /* Properties of Gtk.Entry */
    activates_default: boolean
    attributes: Pango.AttrList
    buffer: EntryBuffer
    completion: EntryCompletion
    enable_emoji_completion: boolean
    extra_menu: Gio.MenuModel
    has_frame: boolean
    im_module: string
    input_hints: InputHints
    input_purpose: InputPurpose
    invisible_char: number
    invisible_char_set: boolean
    max_length: number
    overwrite_mode: boolean
    placeholder_text: string
    primary_icon_activatable: boolean
    primary_icon_gicon: Gio.Icon
    primary_icon_name: string
    primary_icon_paintable: Gdk.Paintable
    primary_icon_sensitive: boolean
    readonly primary_icon_storage_type: ImageType
    primary_icon_tooltip_markup: string
    primary_icon_tooltip_text: string
    progress_fraction: number
    progress_pulse_step: number
    readonly scroll_offset: number
    secondary_icon_activatable: boolean
    secondary_icon_gicon: Gio.Icon
    secondary_icon_name: string
    secondary_icon_paintable: Gdk.Paintable
    secondary_icon_sensitive: boolean
    readonly secondary_icon_storage_type: ImageType
    secondary_icon_tooltip_markup: string
    secondary_icon_tooltip_text: string
    show_emoji_icon: boolean
    tabs: Pango.TabArray
    readonly text_length: number
    truncate_multiline: boolean
    visibility: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.CellEditable */
    editing_canceled: boolean
    /* Properties of Gtk.Editable */
    readonly cursor_position: number
    editable: boolean
    enable_undo: boolean
    max_width_chars: number
    readonly selection_bound: number
    text: string
    width_chars: number
    xalign: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Entry */
    get_activates_default(): boolean
    get_alignment(): number
    get_attributes(): Pango.AttrList | null
    get_buffer(): EntryBuffer
    get_completion(): EntryCompletion | null
    get_current_icon_drag_source(): number
    get_extra_menu(): Gio.MenuModel | null
    get_has_frame(): boolean
    get_icon_activatable(icon_pos: EntryIconPosition): boolean
    get_icon_area(icon_pos: EntryIconPosition): /* icon_area */ Gdk.Rectangle
    get_icon_at_pos(x: number, y: number): number
    get_icon_gicon(icon_pos: EntryIconPosition): Gio.Icon | null
    get_icon_name(icon_pos: EntryIconPosition): string | null
    get_icon_paintable(icon_pos: EntryIconPosition): Gdk.Paintable | null
    get_icon_sensitive(icon_pos: EntryIconPosition): boolean
    get_icon_storage_type(icon_pos: EntryIconPosition): ImageType
    get_icon_tooltip_markup(icon_pos: EntryIconPosition): string | null
    get_icon_tooltip_text(icon_pos: EntryIconPosition): string | null
    get_input_hints(): InputHints
    get_input_purpose(): InputPurpose
    get_invisible_char(): number
    get_max_length(): number
    get_overwrite_mode(): boolean
    get_placeholder_text(): string | null
    get_progress_fraction(): number
    get_progress_pulse_step(): number
    get_tabs(): Pango.TabArray | null
    get_text_length(): number
    get_visibility(): boolean
    grab_focus_without_selecting(): boolean
    progress_pulse(): void
    reset_im_context(): void
    set_activates_default(setting: boolean): void
    set_alignment(xalign: number): void
    set_attributes(attrs: Pango.AttrList): void
    set_buffer(buffer: EntryBuffer): void
    set_completion(completion?: EntryCompletion | null): void
    set_extra_menu(model?: Gio.MenuModel | null): void
    set_has_frame(setting: boolean): void
    set_icon_activatable(icon_pos: EntryIconPosition, activatable: boolean): void
    set_icon_drag_source(icon_pos: EntryIconPosition, provider: Gdk.ContentProvider, actions: Gdk.DragAction): void
    set_icon_from_gicon(icon_pos: EntryIconPosition, icon?: Gio.Icon | null): void
    set_icon_from_icon_name(icon_pos: EntryIconPosition, icon_name?: string | null): void
    set_icon_from_paintable(icon_pos: EntryIconPosition, paintable?: Gdk.Paintable | null): void
    set_icon_sensitive(icon_pos: EntryIconPosition, sensitive: boolean): void
    set_icon_tooltip_markup(icon_pos: EntryIconPosition, tooltip?: string | null): void
    set_icon_tooltip_text(icon_pos: EntryIconPosition, tooltip?: string | null): void
    set_input_hints(hints: InputHints): void
    set_input_purpose(purpose: InputPurpose): void
    set_invisible_char(ch: number): void
    set_max_length(max: number): void
    set_overwrite_mode(overwrite: boolean): void
    set_placeholder_text(text?: string | null): void
    set_progress_fraction(fraction: number): void
    set_progress_pulse_step(fraction: number): void
    set_tabs(tabs?: Pango.TabArray | null): void
    set_visibility(visible: boolean): void
    unset_invisible_char(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.Editable */
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    finish_delegate(): void
    get_chars(start_pos: number, end_pos: number): string
    get_delegate(): Editable | null
    get_editable(): boolean
    get_enable_undo(): boolean
    get_max_width_chars(): number
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    get_text(): string
    get_width_chars(): number
    init_delegate(): void
    insert_text(text: string, length: number, position: number): /* position */ number
    select_region(start_pos: number, end_pos: number): void
    set_editable(is_editable: boolean): void
    set_enable_undo(enable_undo: boolean): void
    set_max_width_chars(n_chars: number): void
    set_position(position: number): void
    set_text(text: string): void
    set_width_chars(n_chars: number): void
    /* Virtual methods of Gtk.Entry */
    vfunc_activate(): void
    vfunc_editing_done(): void
    vfunc_remove_widget(): void
    vfunc_start_editing(event?: Gdk.Event | null): void
    vfunc_changed(): void
    vfunc_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_get_delegate(): Editable | null
    vfunc_get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    vfunc_get_text(): string
    vfunc_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_set_selection_bounds(start_pos: number, end_pos: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Entry */
    connect(sigName: "activate", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "activate", callback: (($obj: Entry) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "icon-press", callback: (($obj: Entry, icon_pos: EntryIconPosition) => void)): number
    connect_after(sigName: "icon-press", callback: (($obj: Entry, icon_pos: EntryIconPosition) => void)): number
    emit(sigName: "icon-press", icon_pos: EntryIconPosition): void
    connect(sigName: "icon-release", callback: (($obj: Entry, icon_pos: EntryIconPosition) => void)): number
    connect_after(sigName: "icon-release", callback: (($obj: Entry, icon_pos: EntryIconPosition) => void)): number
    emit(sigName: "icon-release", icon_pos: EntryIconPosition): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Entry) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Entry, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Entry, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Entry) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Entry, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Entry, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "map", callback: (($obj: Entry) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Entry, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Entry, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Entry, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Entry, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Entry, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Entry, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Entry) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "show", callback: (($obj: Entry) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Entry, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Entry, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Entry) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Entry) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "editing-done", callback: (($obj: Entry) => void)): number
    emit(sigName: "editing-done"): void
    connect(sigName: "remove-widget", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "remove-widget", callback: (($obj: Entry) => void)): number
    emit(sigName: "remove-widget"): void
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: (($obj: Entry) => void)): number
    connect_after(sigName: "changed", callback: (($obj: Entry) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "delete-text", callback: (($obj: Entry, start_pos: number, end_pos: number) => void)): number
    connect_after(sigName: "delete-text", callback: (($obj: Entry, start_pos: number, end_pos: number) => void)): number
    emit(sigName: "delete-text", start_pos: number, end_pos: number): void
    connect(sigName: "insert-text", callback: (($obj: Entry, text: string, length: number, position: number) => void)): number
    connect_after(sigName: "insert-text", callback: (($obj: Entry, text: string, length: number, position: number) => void)): number
    emit(sigName: "insert-text", text: string, length: number, position: number): void
    connect(sigName: "notify::activates-default", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activates-default", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::buffer", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::buffer", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::completion", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::completion", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-emoji-completion", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-emoji-completion", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::extra-menu", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extra-menu", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::im-module", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::im-module", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-hints", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-hints", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-purpose", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-purpose", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::invisible-char", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invisible-char", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::invisible-char-set", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invisible-char-set", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-length", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-length", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overwrite-mode", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overwrite-mode", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder-text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder-text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-icon-activatable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-icon-activatable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-icon-gicon", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-icon-gicon", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-icon-name", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-icon-name", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-icon-paintable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-icon-paintable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-icon-sensitive", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-icon-sensitive", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-icon-storage-type", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-icon-storage-type", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-icon-tooltip-markup", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-icon-tooltip-markup", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-icon-tooltip-text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-icon-tooltip-text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::progress-fraction", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::progress-fraction", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::progress-pulse-step", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::progress-pulse-step", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-offset", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-offset", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-icon-activatable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-icon-activatable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-icon-gicon", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-icon-gicon", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-icon-name", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-icon-name", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-icon-paintable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-icon-paintable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-icon-sensitive", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-icon-sensitive", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-icon-storage-type", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-icon-storage-type", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-icon-tooltip-markup", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-icon-tooltip-markup", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-icon-tooltip-text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-icon-tooltip-text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-emoji-icon", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-emoji-icon", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tabs", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tabs", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-length", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-length", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::truncate-multiline", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::truncate-multiline", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visibility", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visibility", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing-canceled", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing-canceled", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor-position", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-position", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-undo", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-undo", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-bound", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-bound", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: Entry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Entry_ConstructProps)
    _init (config?: Entry_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Entry
    static new_with_buffer(buffer: EntryBuffer): Entry
    static delegate_get_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static delegate_set_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static install_properties(object_class: GObject.ObjectClass, first_prop: number): number
    static $gtype: GObject.Type
}
export interface EntryBuffer_ConstructProps extends GObject.Object_ConstructProps {
    max_length?: number
    text?: string
}
export class EntryBuffer {
    /* Properties of Gtk.EntryBuffer */
    readonly length: number
    max_length: number
    text: string
    /* Fields of Gtk.EntryBuffer */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EntryBuffer */
    delete_text(position: number, n_chars: number): number
    emit_deleted_text(position: number, n_chars: number): void
    emit_inserted_text(position: number, chars: string, n_chars: number): void
    get_bytes(): number
    get_length(): number
    get_max_length(): number
    get_text(): string
    insert_text(position: number, chars: string, n_chars: number): number
    set_max_length(max_length: number): void
    set_text(chars: string, n_chars: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.EntryBuffer */
    vfunc_delete_text(position: number, n_chars: number): number
    vfunc_deleted_text(position: number, n_chars: number): void
    vfunc_get_length(): number
    vfunc_get_text(n_bytes: number): string
    vfunc_insert_text(position: number, chars: string, n_chars: number): number
    vfunc_inserted_text(position: number, chars: string, n_chars: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EntryBuffer */
    connect(sigName: "deleted-text", callback: (($obj: EntryBuffer, position: number, n_chars: number) => void)): number
    connect_after(sigName: "deleted-text", callback: (($obj: EntryBuffer, position: number, n_chars: number) => void)): number
    emit(sigName: "deleted-text", position: number, n_chars: number): void
    connect(sigName: "inserted-text", callback: (($obj: EntryBuffer, position: number, chars: string, n_chars: number) => void)): number
    connect_after(sigName: "inserted-text", callback: (($obj: EntryBuffer, position: number, chars: string, n_chars: number) => void)): number
    emit(sigName: "inserted-text", position: number, chars: string, n_chars: number): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EntryBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EntryBuffer, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: EntryBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: EntryBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-length", callback: (($obj: EntryBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-length", callback: (($obj: EntryBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: EntryBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: EntryBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EntryBuffer_ConstructProps)
    _init (config?: EntryBuffer_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(initial_chars: string | null, n_initial_chars: number): EntryBuffer
    static $gtype: GObject.Type
}
export interface EntryCompletion_ConstructProps extends GObject.Object_ConstructProps {
    cell_area?: CellArea
    inline_completion?: boolean
    inline_selection?: boolean
    minimum_key_length?: number
    model?: TreeModel
    popup_completion?: boolean
    popup_set_width?: boolean
    popup_single_match?: boolean
    text_column?: number
}
export class EntryCompletion {
    /* Properties of Gtk.EntryCompletion */
    inline_completion: boolean
    inline_selection: boolean
    minimum_key_length: number
    model: TreeModel
    popup_completion: boolean
    popup_set_width: boolean
    popup_single_match: boolean
    text_column: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EntryCompletion */
    complete(): void
    compute_prefix(key: string): string | null
    get_completion_prefix(): string | null
    get_entry(): Widget
    get_inline_completion(): boolean
    get_inline_selection(): boolean
    get_minimum_key_length(): number
    get_model(): TreeModel | null
    get_popup_completion(): boolean
    get_popup_set_width(): boolean
    get_popup_single_match(): boolean
    get_text_column(): number
    insert_prefix(): void
    set_inline_completion(inline_completion: boolean): void
    set_inline_selection(inline_selection: boolean): void
    set_match_func(func: EntryCompletionMatchFunc): void
    set_minimum_key_length(length: number): void
    set_model(model?: TreeModel | null): void
    set_popup_completion(popup_completion: boolean): void
    set_popup_set_width(popup_set_width: boolean): void
    set_popup_single_match(popup_single_match: boolean): void
    set_text_column(column: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of Gtk.EntryCompletion */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EntryCompletion */
    connect(sigName: "cursor-on-match", callback: (($obj: EntryCompletion, model: TreeModel, iter: TreeIter) => boolean)): number
    connect_after(sigName: "cursor-on-match", callback: (($obj: EntryCompletion, model: TreeModel, iter: TreeIter) => boolean)): number
    emit(sigName: "cursor-on-match", model: TreeModel, iter: TreeIter): void
    connect(sigName: "insert-prefix", callback: (($obj: EntryCompletion, prefix: string) => boolean)): number
    connect_after(sigName: "insert-prefix", callback: (($obj: EntryCompletion, prefix: string) => boolean)): number
    emit(sigName: "insert-prefix", prefix: string): void
    connect(sigName: "match-selected", callback: (($obj: EntryCompletion, model: TreeModel, iter: TreeIter) => boolean)): number
    connect_after(sigName: "match-selected", callback: (($obj: EntryCompletion, model: TreeModel, iter: TreeIter) => boolean)): number
    emit(sigName: "match-selected", model: TreeModel, iter: TreeIter): void
    connect(sigName: "no-matches", callback: (($obj: EntryCompletion) => void)): number
    connect_after(sigName: "no-matches", callback: (($obj: EntryCompletion) => void)): number
    emit(sigName: "no-matches"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::inline-completion", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inline-completion", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inline-selection", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inline-selection", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::minimum-key-length", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::minimum-key-length", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::popup-completion", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::popup-completion", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::popup-set-width", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::popup-set-width", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::popup-single-match", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::popup-single-match", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-column", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-column", callback: (($obj: EntryCompletion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EntryCompletion_ConstructProps)
    _init (config?: EntryCompletion_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): EntryCompletion
    static new_with_area(area: CellArea): EntryCompletion
    static $gtype: GObject.Type
}
export interface EventController_ConstructProps extends GObject.Object_ConstructProps {
    name?: string
    propagation_limit?: PropagationLimit
    propagation_phase?: PropagationPhase
}
export class EventController {
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: EventController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EventController_ConstructProps)
    _init (config?: EventController_ConstructProps): void
    static $gtype: GObject.Type
}
export interface EventControllerFocus_ConstructProps extends EventController_ConstructProps {
}
export class EventControllerFocus {
    /* Properties of Gtk.EventControllerFocus */
    readonly contains_focus: boolean
    readonly is_focus: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EventControllerFocus */
    connect(sigName: "enter", callback: (($obj: EventControllerFocus) => void)): number
    connect_after(sigName: "enter", callback: (($obj: EventControllerFocus) => void)): number
    emit(sigName: "enter"): void
    connect(sigName: "leave", callback: (($obj: EventControllerFocus) => void)): number
    connect_after(sigName: "leave", callback: (($obj: EventControllerFocus) => void)): number
    emit(sigName: "leave"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::contains-focus", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::contains-focus", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-focus", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-focus", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: EventControllerFocus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EventControllerFocus_ConstructProps)
    _init (config?: EventControllerFocus_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): EventControllerFocus
    static $gtype: GObject.Type
}
export interface EventControllerKey_ConstructProps extends EventController_ConstructProps {
}
export class EventControllerKey {
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EventControllerKey */
    forward(widget: Widget): boolean
    get_group(): number
    get_im_context(): IMContext
    set_im_context(im_context: IMContext): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EventControllerKey */
    connect(sigName: "im-update", callback: (($obj: EventControllerKey) => void)): number
    connect_after(sigName: "im-update", callback: (($obj: EventControllerKey) => void)): number
    emit(sigName: "im-update"): void
    connect(sigName: "key-pressed", callback: (($obj: EventControllerKey, keyval: number, keycode: number, state: Gdk.ModifierType) => boolean)): number
    connect_after(sigName: "key-pressed", callback: (($obj: EventControllerKey, keyval: number, keycode: number, state: Gdk.ModifierType) => boolean)): number
    emit(sigName: "key-pressed", keyval: number, keycode: number, state: Gdk.ModifierType): void
    connect(sigName: "key-released", callback: (($obj: EventControllerKey, keyval: number, keycode: number, state: Gdk.ModifierType) => void)): number
    connect_after(sigName: "key-released", callback: (($obj: EventControllerKey, keyval: number, keycode: number, state: Gdk.ModifierType) => void)): number
    emit(sigName: "key-released", keyval: number, keycode: number, state: Gdk.ModifierType): void
    connect(sigName: "modifiers", callback: (($obj: EventControllerKey, keyval: Gdk.ModifierType) => boolean)): number
    connect_after(sigName: "modifiers", callback: (($obj: EventControllerKey, keyval: Gdk.ModifierType) => boolean)): number
    emit(sigName: "modifiers", keyval: Gdk.ModifierType): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: EventControllerKey, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EventControllerKey_ConstructProps)
    _init (config?: EventControllerKey_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): EventControllerKey
    static $gtype: GObject.Type
}
export interface EventControllerLegacy_ConstructProps extends EventController_ConstructProps {
}
export class EventControllerLegacy {
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EventControllerLegacy */
    connect(sigName: "event", callback: (($obj: EventControllerLegacy, event: Gdk.Event) => boolean)): number
    connect_after(sigName: "event", callback: (($obj: EventControllerLegacy, event: Gdk.Event) => boolean)): number
    emit(sigName: "event", event: Gdk.Event): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: EventControllerLegacy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EventControllerLegacy_ConstructProps)
    _init (config?: EventControllerLegacy_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): EventControllerLegacy
    static $gtype: GObject.Type
}
export interface EventControllerMotion_ConstructProps extends EventController_ConstructProps {
}
export class EventControllerMotion {
    /* Properties of Gtk.EventControllerMotion */
    readonly contains_pointer: boolean
    readonly is_pointer: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EventControllerMotion */
    connect(sigName: "enter", callback: (($obj: EventControllerMotion, x: number, y: number) => void)): number
    connect_after(sigName: "enter", callback: (($obj: EventControllerMotion, x: number, y: number) => void)): number
    emit(sigName: "enter", x: number, y: number): void
    connect(sigName: "leave", callback: (($obj: EventControllerMotion) => void)): number
    connect_after(sigName: "leave", callback: (($obj: EventControllerMotion) => void)): number
    emit(sigName: "leave"): void
    connect(sigName: "motion", callback: (($obj: EventControllerMotion, x: number, y: number) => void)): number
    connect_after(sigName: "motion", callback: (($obj: EventControllerMotion, x: number, y: number) => void)): number
    emit(sigName: "motion", x: number, y: number): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::contains-pointer", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::contains-pointer", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-pointer", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-pointer", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: EventControllerMotion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EventControllerMotion_ConstructProps)
    _init (config?: EventControllerMotion_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): EventControllerMotion
    static $gtype: GObject.Type
}
export interface EventControllerScroll_ConstructProps extends EventController_ConstructProps {
    flags?: EventControllerScrollFlags
}
export class EventControllerScroll {
    /* Properties of Gtk.EventControllerScroll */
    flags: EventControllerScrollFlags
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.EventControllerScroll */
    get_flags(): EventControllerScrollFlags
    set_flags(flags: EventControllerScrollFlags): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EventControllerScroll */
    connect(sigName: "decelerate", callback: (($obj: EventControllerScroll, vel_x: number, vel_y: number) => void)): number
    connect_after(sigName: "decelerate", callback: (($obj: EventControllerScroll, vel_x: number, vel_y: number) => void)): number
    emit(sigName: "decelerate", vel_x: number, vel_y: number): void
    connect(sigName: "scroll", callback: (($obj: EventControllerScroll, dx: number, dy: number) => boolean)): number
    connect_after(sigName: "scroll", callback: (($obj: EventControllerScroll, dx: number, dy: number) => boolean)): number
    emit(sigName: "scroll", dx: number, dy: number): void
    connect(sigName: "scroll-begin", callback: (($obj: EventControllerScroll) => void)): number
    connect_after(sigName: "scroll-begin", callback: (($obj: EventControllerScroll) => void)): number
    emit(sigName: "scroll-begin"): void
    connect(sigName: "scroll-end", callback: (($obj: EventControllerScroll) => void)): number
    connect_after(sigName: "scroll-end", callback: (($obj: EventControllerScroll) => void)): number
    emit(sigName: "scroll-end"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::flags", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::flags", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: EventControllerScroll, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EventControllerScroll_ConstructProps)
    _init (config?: EventControllerScroll_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(flags: EventControllerScrollFlags): EventControllerScroll
    static $gtype: GObject.Type
}
export interface EveryFilter_ConstructProps extends MultiFilter_ConstructProps {
}
export class EveryFilter {
    /* Fields of Gtk.Filter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MultiFilter */
    append(filter: Filter): void
    remove(position: number): void
    /* Methods of Gtk.Filter */
    changed(change: FilterChange): void
    get_strictness(): FilterMatch
    match(item: GObject.Object): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.MultiFilter */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of Gtk.Filter */
    vfunc_get_strictness(): FilterMatch
    vfunc_match(item?: GObject.Object | null): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Filter */
    connect(sigName: "changed", callback: (($obj: EveryFilter, change: FilterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: EveryFilter, change: FilterChange) => void)): number
    emit(sigName: "changed", change: FilterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: EveryFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: EveryFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: EveryFilter, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: EveryFilter, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: EveryFilter_ConstructProps)
    _init (config?: EveryFilter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): EveryFilter
    static $gtype: GObject.Type
}
export interface Expander_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    expanded?: boolean
    label?: string
    label_widget?: Widget
    resize_toplevel?: boolean
    use_markup?: boolean
    use_underline?: boolean
    accessible_role?: AccessibleRole
}
export class Expander {
    /* Properties of Gtk.Expander */
    child: Widget
    expanded: boolean
    label: string
    label_widget: Widget
    resize_toplevel: boolean
    use_markup: boolean
    use_underline: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Expander */
    get_child(): Widget | null
    get_expanded(): boolean
    get_label(): string | null
    get_label_widget(): Widget | null
    get_resize_toplevel(): boolean
    get_use_markup(): boolean
    get_use_underline(): boolean
    set_child(child?: Widget | null): void
    set_expanded(expanded: boolean): void
    set_label(label?: string | null): void
    set_label_widget(label_widget?: Widget | null): void
    set_resize_toplevel(resize_toplevel: boolean): void
    set_use_markup(use_markup: boolean): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Expander */
    connect(sigName: "activate", callback: (($obj: Expander) => void)): number
    connect_after(sigName: "activate", callback: (($obj: Expander) => void)): number
    emit(sigName: "activate"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Expander) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Expander) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Expander, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Expander, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Expander) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Expander) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Expander, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Expander, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Expander) => void)): number
    connect_after(sigName: "map", callback: (($obj: Expander) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Expander, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Expander, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Expander, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Expander, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Expander, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Expander, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Expander) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Expander) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Expander) => void)): number
    connect_after(sigName: "show", callback: (($obj: Expander) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Expander, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Expander, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Expander) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Expander) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Expander) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Expander) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::expanded", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expanded", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label-widget", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label-widget", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resize-toplevel", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resize-toplevel", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-markup", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-markup", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Expander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Expander_ConstructProps)
    _init (config?: Expander_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(label?: string | null): Expander
    static new_with_mnemonic(label?: string | null): Expander
    static $gtype: GObject.Type
}
export class Expression {
    /* Methods of Gtk.Expression */
    bind(target: GObject.Object, property: string, this_?: GObject.Object | null): ExpressionWatch
    evaluate(this_: GObject.Object | null, value: any): boolean
    get_value_type(): GObject.Type
    is_static(): boolean
    ref(): Expression
    unref(): void
    watch(this_: GObject.Object | null, notify: ExpressionNotify): ExpressionWatch
    static name: string
}
export interface FileChooserDialog_ConstructProps extends Dialog_ConstructProps {
    accessible_role?: AccessibleRole
    action?: FileChooserAction
    create_folders?: boolean
    filter?: FileFilter
    select_multiple?: boolean
}
export class FileChooserDialog {
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.FileChooser */
    action: FileChooserAction
    create_folders: boolean
    filter: FileFilter
    readonly filters: Gio.ListModel
    select_multiple: boolean
    readonly shortcut_folders: Gio.ListModel
    /* Fields of Gtk.Dialog */
    parent_instance: Window
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_content_area(): Box
    get_header_bar(): HeaderBar
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options?: string[] | null, option_labels?: string[] | null): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: Gio.File): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): Gio.File
    get_current_name(): string
    get_file(): Gio.File
    get_files(): Gio.ListModel
    get_filter(): FileFilter | null
    get_filters(): Gio.ListModel
    get_select_multiple(): boolean
    get_shortcut_folders(): Gio.ListModel
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: Gio.File): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(file: Gio.File): boolean
    set_current_name(name: string): void
    set_file(file: Gio.File): boolean
    set_filter(filter: FileFilter): void
    set_select_multiple(select_multiple: boolean): void
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Dialog */
    vfunc_close(): void
    vfunc_response(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "close", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: FileChooserDialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: FileChooserDialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: FileChooserDialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: FileChooserDialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: FileChooserDialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: FileChooserDialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: FileChooserDialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: FileChooserDialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: FileChooserDialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: FileChooserDialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: FileChooserDialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: FileChooserDialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: FileChooserDialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: FileChooserDialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: FileChooserDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: FileChooserDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: FileChooserDialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: FileChooserDialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: FileChooserDialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: FileChooserDialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::application", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::create-folders", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::create-folders", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filter", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filters", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filters", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::select-multiple", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::select-multiple", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shortcut-folders", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shortcut-folders", callback: (($obj: FileChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FileChooserDialog_ConstructProps)
    _init (config?: FileChooserDialog_ConstructProps): void
    static $gtype: GObject.Type
}
export interface FileChooserNative_ConstructProps extends NativeDialog_ConstructProps {
    accept_label?: string
    cancel_label?: string
    action?: FileChooserAction
    create_folders?: boolean
    filter?: FileFilter
    select_multiple?: boolean
}
export class FileChooserNative {
    /* Properties of Gtk.FileChooserNative */
    accept_label: string
    cancel_label: string
    /* Properties of Gtk.NativeDialog */
    modal: boolean
    title: string
    transient_for: Window
    visible: boolean
    /* Properties of Gtk.FileChooser */
    action: FileChooserAction
    create_folders: boolean
    filter: FileFilter
    readonly filters: Gio.ListModel
    select_multiple: boolean
    readonly shortcut_folders: Gio.ListModel
    /* Fields of Gtk.NativeDialog */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.FileChooserNative */
    get_accept_label(): string | null
    get_cancel_label(): string | null
    set_accept_label(accept_label?: string | null): void
    set_cancel_label(cancel_label?: string | null): void
    /* Methods of Gtk.NativeDialog */
    destroy(): void
    get_modal(): boolean
    get_title(): string | null
    get_transient_for(): Window | null
    get_visible(): boolean
    hide(): void
    set_modal(modal: boolean): void
    set_title(title: string): void
    set_transient_for(parent?: Window | null): void
    show(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options?: string[] | null, option_labels?: string[] | null): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: Gio.File): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): Gio.File
    get_current_name(): string
    get_file(): Gio.File
    get_files(): Gio.ListModel
    get_filter(): FileFilter | null
    get_filters(): Gio.ListModel
    get_select_multiple(): boolean
    get_shortcut_folders(): Gio.ListModel
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: Gio.File): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(file: Gio.File): boolean
    set_current_name(name: string): void
    set_file(file: Gio.File): boolean
    set_filter(filter: FileFilter): void
    set_select_multiple(select_multiple: boolean): void
    /* Virtual methods of Gtk.NativeDialog */
    vfunc_hide(): void
    vfunc_response(response_id: number): void
    vfunc_show(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.NativeDialog */
    connect(sigName: "response", callback: (($obj: FileChooserNative, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: FileChooserNative, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accept-label", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accept-label", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancel-label", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-label", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::create-folders", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::create-folders", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filter", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filters", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filters", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::select-multiple", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::select-multiple", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shortcut-folders", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shortcut-folders", callback: (($obj: FileChooserNative, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FileChooserNative_ConstructProps)
    _init (config?: FileChooserNative_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(title: string | null, parent: Window | null, action: FileChooserAction, accept_label?: string | null, cancel_label?: string | null): FileChooserNative
    static $gtype: GObject.Type
}
export interface FileChooserWidget_ConstructProps extends Widget_ConstructProps {
    search_mode?: boolean
    accessible_role?: AccessibleRole
    action?: FileChooserAction
    create_folders?: boolean
    filter?: FileFilter
    select_multiple?: boolean
}
export class FileChooserWidget {
    /* Properties of Gtk.FileChooserWidget */
    search_mode: boolean
    readonly subtitle: string
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.FileChooser */
    action: FileChooserAction
    create_folders: boolean
    filter: FileFilter
    readonly filters: Gio.ListModel
    select_multiple: boolean
    readonly shortcut_folders: Gio.ListModel
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options?: string[] | null, option_labels?: string[] | null): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: Gio.File): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): Gio.File
    get_current_name(): string
    get_file(): Gio.File
    get_files(): Gio.ListModel
    get_filter(): FileFilter | null
    get_filters(): Gio.ListModel
    get_select_multiple(): boolean
    get_shortcut_folders(): Gio.ListModel
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: Gio.File): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(file: Gio.File): boolean
    set_current_name(name: string): void
    set_file(file: Gio.File): boolean
    set_filter(filter: FileFilter): void
    set_select_multiple(select_multiple: boolean): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FileChooserWidget */
    connect(sigName: "desktop-folder", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "desktop-folder", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "desktop-folder"): void
    connect(sigName: "down-folder", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "down-folder", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "down-folder"): void
    connect(sigName: "home-folder", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "home-folder", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "home-folder"): void
    connect(sigName: "location-popup", callback: (($obj: FileChooserWidget, path: string) => void)): number
    connect_after(sigName: "location-popup", callback: (($obj: FileChooserWidget, path: string) => void)): number
    emit(sigName: "location-popup", path: string): void
    connect(sigName: "location-popup-on-paste", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "location-popup-on-paste", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "location-popup-on-paste"): void
    connect(sigName: "location-toggle-popup", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "location-toggle-popup", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "location-toggle-popup"): void
    connect(sigName: "places-shortcut", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "places-shortcut", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "places-shortcut"): void
    connect(sigName: "quick-bookmark", callback: (($obj: FileChooserWidget, bookmark_index: number) => void)): number
    connect_after(sigName: "quick-bookmark", callback: (($obj: FileChooserWidget, bookmark_index: number) => void)): number
    emit(sigName: "quick-bookmark", bookmark_index: number): void
    connect(sigName: "recent-shortcut", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "recent-shortcut", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "recent-shortcut"): void
    connect(sigName: "search-shortcut", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "search-shortcut", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "search-shortcut"): void
    connect(sigName: "show-hidden", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "show-hidden", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "show-hidden"): void
    connect(sigName: "up-folder", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "up-folder", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "up-folder"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: FileChooserWidget, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: FileChooserWidget, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "hide", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: FileChooserWidget, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: FileChooserWidget, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "map", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: FileChooserWidget, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: FileChooserWidget, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: FileChooserWidget, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: FileChooserWidget, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: FileChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: FileChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "realize", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "show", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: FileChooserWidget, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: FileChooserWidget, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: FileChooserWidget) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: FileChooserWidget) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::search-mode", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search-mode", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::subtitle", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::subtitle", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::create-folders", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::create-folders", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filter", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filters", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filters", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::select-multiple", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::select-multiple", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shortcut-folders", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shortcut-folders", callback: (($obj: FileChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FileChooserWidget_ConstructProps)
    _init (config?: FileChooserWidget_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(action: FileChooserAction): FileChooserWidget
    static $gtype: GObject.Type
}
export interface FileFilter_ConstructProps extends Filter_ConstructProps {
    name?: string
}
export class FileFilter {
    /* Properties of Gtk.FileFilter */
    name: string
    /* Fields of Gtk.Filter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.FileFilter */
    add_mime_type(mime_type: string): void
    add_pattern(pattern: string): void
    add_pixbuf_formats(): void
    get_attributes(): string[]
    get_name(): string | null
    set_name(name?: string | null): void
    to_gvariant(): GLib.Variant
    /* Methods of Gtk.Filter */
    changed(change: FilterChange): void
    get_strictness(): FilterMatch
    match(item: GObject.Object): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.FileFilter */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of Gtk.Filter */
    vfunc_get_strictness(): FilterMatch
    vfunc_match(item?: GObject.Object | null): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Filter */
    connect(sigName: "changed", callback: (($obj: FileFilter, change: FilterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: FileFilter, change: FilterChange) => void)): number
    emit(sigName: "changed", change: FilterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FileFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FileFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: FileFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: FileFilter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FileFilter_ConstructProps)
    _init (config?: FileFilter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): FileFilter
    static new_from_gvariant(variant: GLib.Variant): FileFilter
    static $gtype: GObject.Type
}
export interface Filter_ConstructProps extends GObject.Object_ConstructProps {
}
export class Filter {
    /* Fields of Gtk.Filter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Filter */
    changed(change: FilterChange): void
    get_strictness(): FilterMatch
    match(item: GObject.Object): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Filter */
    vfunc_get_strictness(): FilterMatch
    vfunc_match(item?: GObject.Object | null): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Filter */
    connect(sigName: "changed", callback: (($obj: Filter, change: FilterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: Filter, change: FilterChange) => void)): number
    emit(sigName: "changed", change: FilterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Filter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Filter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Filter_ConstructProps)
    _init (config?: Filter_ConstructProps): void
    static $gtype: GObject.Type
}
export interface FilterListModel_ConstructProps extends GObject.Object_ConstructProps {
    filter?: Filter
    incremental?: boolean
    model?: Gio.ListModel
}
export class FilterListModel {
    /* Properties of Gtk.FilterListModel */
    filter: Filter
    incremental: boolean
    model: Gio.ListModel
    readonly pending: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.FilterListModel */
    get_filter(): Filter | null
    get_incremental(): boolean
    get_model(): Gio.ListModel | null
    get_pending(): number
    set_filter(filter?: Filter | null): void
    set_incremental(incremental: boolean): void
    set_model(model?: Gio.ListModel | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.FilterListModel */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: FilterListModel, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: FilterListModel, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::filter", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::incremental", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::incremental", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pending", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pending", callback: (($obj: FilterListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FilterListModel_ConstructProps)
    _init (config?: FilterListModel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: Gio.ListModel | null, filter?: Filter | null): FilterListModel
    static $gtype: GObject.Type
}
export interface Fixed_ConstructProps extends Widget_ConstructProps {
    accessible_role?: AccessibleRole
}
export class Fixed {
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Fixed */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Fixed */
    get_child_position(widget: Widget): [ /* x */ number, /* y */ number ]
    get_child_transform(widget: Widget): Gsk.Transform | null
    move(widget: Widget, x: number, y: number): void
    put(widget: Widget, x: number, y: number): void
    remove(widget: Widget): void
    set_child_transform(widget: Widget, transform?: Gsk.Transform | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Fixed) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Fixed) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Fixed, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Fixed, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Fixed) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Fixed) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Fixed, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Fixed, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Fixed) => void)): number
    connect_after(sigName: "map", callback: (($obj: Fixed) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Fixed, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Fixed, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Fixed, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Fixed, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Fixed, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Fixed, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Fixed) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Fixed) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Fixed) => void)): number
    connect_after(sigName: "show", callback: (($obj: Fixed) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Fixed, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Fixed, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Fixed) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Fixed) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Fixed) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Fixed) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::can-focus", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Fixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Fixed_ConstructProps)
    _init (config?: Fixed_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Fixed
    static $gtype: GObject.Type
}
export interface FixedLayout_ConstructProps extends LayoutManager_ConstructProps {
}
export class FixedLayout {
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FixedLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FixedLayout, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FixedLayout_ConstructProps)
    _init (config?: FixedLayout_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): FixedLayout
    static $gtype: GObject.Type
}
export interface FixedLayoutChild_ConstructProps extends LayoutChild_ConstructProps {
    transform?: Gsk.Transform
}
export class FixedLayoutChild {
    /* Properties of Gtk.FixedLayoutChild */
    transform: Gsk.Transform
    /* Fields of Gtk.LayoutChild */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.FixedLayoutChild */
    get_transform(): Gsk.Transform | null
    set_transform(transform: Gsk.Transform): void
    /* Methods of Gtk.LayoutChild */
    get_child_widget(): Widget
    get_layout_manager(): LayoutManager
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FixedLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FixedLayoutChild, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::transform", callback: (($obj: FixedLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transform", callback: (($obj: FixedLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FixedLayoutChild_ConstructProps)
    _init (config?: FixedLayoutChild_ConstructProps): void
    static $gtype: GObject.Type
}
export interface FlattenListModel_ConstructProps extends GObject.Object_ConstructProps {
    model?: Gio.ListModel
}
export class FlattenListModel {
    /* Properties of Gtk.FlattenListModel */
    model: Gio.ListModel
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.FlattenListModel */
    get_model(): Gio.ListModel | null
    get_model_for_item(position: number): Gio.ListModel
    set_model(model?: Gio.ListModel | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.FlattenListModel */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FlattenListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FlattenListModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: FlattenListModel, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: FlattenListModel, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::model", callback: (($obj: FlattenListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: FlattenListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FlattenListModel_ConstructProps)
    _init (config?: FlattenListModel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: Gio.ListModel | null): FlattenListModel
    static $gtype: GObject.Type
}
export interface FlowBox_ConstructProps extends Widget_ConstructProps {
    accept_unpaired_release?: boolean
    activate_on_single_click?: boolean
    column_spacing?: number
    homogeneous?: boolean
    max_children_per_line?: number
    min_children_per_line?: number
    row_spacing?: number
    selection_mode?: SelectionMode
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class FlowBox {
    /* Properties of Gtk.FlowBox */
    accept_unpaired_release: boolean
    activate_on_single_click: boolean
    column_spacing: number
    homogeneous: boolean
    max_children_per_line: number
    min_children_per_line: number
    row_spacing: number
    selection_mode: SelectionMode
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.FlowBox */
    bind_model(model: Gio.ListModel | null, create_widget_func: FlowBoxCreateWidgetFunc): void
    get_activate_on_single_click(): boolean
    get_child_at_index(idx: number): FlowBoxChild | null
    get_child_at_pos(x: number, y: number): FlowBoxChild | null
    get_column_spacing(): number
    get_homogeneous(): boolean
    get_max_children_per_line(): number
    get_min_children_per_line(): number
    get_row_spacing(): number
    get_selected_children(): FlowBoxChild[]
    get_selection_mode(): SelectionMode
    insert(widget: Widget, position: number): void
    invalidate_filter(): void
    invalidate_sort(): void
    remove(widget: Widget): void
    select_all(): void
    select_child(child: FlowBoxChild): void
    selected_foreach(func: FlowBoxForeachFunc): void
    set_activate_on_single_click(single: boolean): void
    set_column_spacing(spacing: number): void
    set_filter_func(filter_func: FlowBoxFilterFunc | null): void
    set_hadjustment(adjustment: Adjustment): void
    set_homogeneous(homogeneous: boolean): void
    set_max_children_per_line(n_children: number): void
    set_min_children_per_line(n_children: number): void
    set_row_spacing(spacing: number): void
    set_selection_mode(mode: SelectionMode): void
    set_sort_func(sort_func: FlowBoxSortFunc | null): void
    set_vadjustment(adjustment: Adjustment): void
    unselect_all(): void
    unselect_child(child: FlowBoxChild): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FlowBox */
    connect(sigName: "activate-cursor-child", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "activate-cursor-child", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "activate-cursor-child"): void
    connect(sigName: "child-activated", callback: (($obj: FlowBox, child: FlowBoxChild) => void)): number
    connect_after(sigName: "child-activated", callback: (($obj: FlowBox, child: FlowBoxChild) => void)): number
    emit(sigName: "child-activated", child: FlowBoxChild): void
    connect(sigName: "move-cursor", callback: (($obj: FlowBox, step: MovementStep, count: number, extend: boolean, modify: boolean) => boolean)): number
    connect_after(sigName: "move-cursor", callback: (($obj: FlowBox, step: MovementStep, count: number, extend: boolean, modify: boolean) => boolean)): number
    emit(sigName: "move-cursor", step: MovementStep, count: number, extend: boolean, modify: boolean): void
    connect(sigName: "select-all", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "select-all", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "select-all"): void
    connect(sigName: "selected-children-changed", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "selected-children-changed", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "selected-children-changed"): void
    connect(sigName: "toggle-cursor-child", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "toggle-cursor-child", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "toggle-cursor-child"): void
    connect(sigName: "unselect-all", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "unselect-all", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "unselect-all"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: FlowBox, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: FlowBox, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "hide", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: FlowBox, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: FlowBox, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "map", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: FlowBox, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: FlowBox, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: FlowBox, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: FlowBox, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: FlowBox, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: FlowBox, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "realize", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "show", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: FlowBox, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: FlowBox, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: FlowBox) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: FlowBox) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accept-unpaired-release", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accept-unpaired-release", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::activate-on-single-click", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activate-on-single-click", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::column-spacing", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column-spacing", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::homogeneous", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::homogeneous", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-children-per-line", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-children-per-line", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-children-per-line", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-children-per-line", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-spacing", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-spacing", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-mode", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-mode", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: FlowBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FlowBox_ConstructProps)
    _init (config?: FlowBox_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): FlowBox
    static $gtype: GObject.Type
}
export interface FlowBoxChild_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    accessible_role?: AccessibleRole
}
export class FlowBoxChild {
    /* Properties of Gtk.FlowBoxChild */
    child: Widget
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.FlowBoxChild */
    changed(): void
    get_child(): Widget | null
    get_index(): number
    is_selected(): boolean
    set_child(child?: Widget | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.FlowBoxChild */
    vfunc_activate(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FlowBoxChild */
    connect(sigName: "activate", callback: (($obj: FlowBoxChild) => void)): number
    connect_after(sigName: "activate", callback: (($obj: FlowBoxChild) => void)): number
    emit(sigName: "activate"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: FlowBoxChild) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: FlowBoxChild) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: FlowBoxChild, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: FlowBoxChild, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: FlowBoxChild) => void)): number
    connect_after(sigName: "hide", callback: (($obj: FlowBoxChild) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: FlowBoxChild, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: FlowBoxChild, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: FlowBoxChild) => void)): number
    connect_after(sigName: "map", callback: (($obj: FlowBoxChild) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: FlowBoxChild, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: FlowBoxChild, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: FlowBoxChild, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: FlowBoxChild, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: FlowBoxChild, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: FlowBoxChild, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: FlowBoxChild) => void)): number
    connect_after(sigName: "realize", callback: (($obj: FlowBoxChild) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: FlowBoxChild) => void)): number
    connect_after(sigName: "show", callback: (($obj: FlowBoxChild) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: FlowBoxChild, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: FlowBoxChild, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: FlowBoxChild) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: FlowBoxChild) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: FlowBoxChild) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: FlowBoxChild) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: FlowBoxChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FlowBoxChild_ConstructProps)
    _init (config?: FlowBoxChild_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): FlowBoxChild
    static $gtype: GObject.Type
}
export interface FontButton_ConstructProps extends Widget_ConstructProps {
    modal?: boolean
    title?: string
    use_font?: boolean
    use_size?: boolean
    accessible_role?: AccessibleRole
    font?: string
    font_desc?: Pango.FontDescription
    language?: string
    level?: FontChooserLevel
    preview_text?: string
    show_preview_entry?: boolean
}
export class FontButton {
    /* Properties of Gtk.FontButton */
    modal: boolean
    title: string
    use_font: boolean
    use_size: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.FontChooser */
    font: string
    font_desc: Pango.FontDescription
    readonly font_features: string
    language: string
    level: FontChooserLevel
    preview_text: string
    show_preview_entry: boolean
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.FontButton */
    get_modal(): boolean
    get_title(): string
    get_use_font(): boolean
    get_use_size(): boolean
    set_modal(modal: boolean): void
    set_title(title: string): void
    set_use_font(use_font: boolean): void
    set_use_size(use_size: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.FontChooser */
    get_font(): string | null
    get_font_desc(): Pango.FontDescription | null
    get_font_face(): Pango.FontFace | null
    get_font_family(): Pango.FontFamily | null
    get_font_features(): string
    get_font_size(): number
    get_language(): string
    get_level(): FontChooserLevel
    get_preview_text(): string
    get_show_preview_entry(): boolean
    set_filter_func(filter: FontFilterFunc | null): void
    set_font(fontname: string): void
    set_font_desc(font_desc: Pango.FontDescription): void
    set_language(language: string): void
    set_level(level: FontChooserLevel): void
    set_preview_text(text: string): void
    set_show_preview_entry(show_preview_entry: boolean): void
    /* Virtual methods of Gtk.FontButton */
    vfunc_font_activated(fontname: string): void
    vfunc_get_font_face(): Pango.FontFace | null
    vfunc_get_font_family(): Pango.FontFamily | null
    vfunc_get_font_map(): Pango.FontMap | null
    vfunc_get_font_size(): number
    vfunc_set_filter_func(filter: FontFilterFunc | null): void
    vfunc_set_font_map(fontmap?: Pango.FontMap | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FontButton */
    connect(sigName: "font-set", callback: (($obj: FontButton) => void)): number
    connect_after(sigName: "font-set", callback: (($obj: FontButton) => void)): number
    emit(sigName: "font-set"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: FontButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: FontButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: FontButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: FontButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: FontButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: FontButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: FontButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: FontButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: FontButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: FontButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: FontButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: FontButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: FontButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: FontButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: FontButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: FontButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: FontButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: FontButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: FontButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: FontButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: FontButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: FontButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: FontButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: FontButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: FontButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: FontButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FontChooser */
    connect(sigName: "font-activated", callback: (($obj: FontButton, fontname: string) => void)): number
    connect_after(sigName: "font-activated", callback: (($obj: FontButton, fontname: string) => void)): number
    emit(sigName: "font-activated", fontname: string): void
    connect(sigName: "notify::modal", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-font", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-font", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-size", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-size", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-desc", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-desc", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-features", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-features", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::level", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::level", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preview-text", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preview-text", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-preview-entry", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-preview-entry", callback: (($obj: FontButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FontButton_ConstructProps)
    _init (config?: FontButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): FontButton
    static new_with_font(fontname: string): FontButton
    static $gtype: GObject.Type
}
export interface FontChooserDialog_ConstructProps extends Dialog_ConstructProps {
    accessible_role?: AccessibleRole
    font?: string
    font_desc?: Pango.FontDescription
    language?: string
    level?: FontChooserLevel
    preview_text?: string
    show_preview_entry?: boolean
}
export class FontChooserDialog {
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.FontChooser */
    font: string
    font_desc: Pango.FontDescription
    readonly font_features: string
    language: string
    level: FontChooserLevel
    preview_text: string
    show_preview_entry: boolean
    /* Fields of Gtk.Dialog */
    parent_instance: Window
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_content_area(): Box
    get_header_bar(): HeaderBar
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.FontChooser */
    get_font(): string | null
    get_font_desc(): Pango.FontDescription | null
    get_font_face(): Pango.FontFace | null
    get_font_family(): Pango.FontFamily | null
    get_font_features(): string
    get_font_size(): number
    get_language(): string
    get_level(): FontChooserLevel
    get_preview_text(): string
    get_show_preview_entry(): boolean
    set_filter_func(filter: FontFilterFunc | null): void
    set_font(fontname: string): void
    set_font_desc(font_desc: Pango.FontDescription): void
    set_language(language: string): void
    set_level(level: FontChooserLevel): void
    set_preview_text(text: string): void
    set_show_preview_entry(show_preview_entry: boolean): void
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.FontChooserDialog */
    vfunc_font_activated(fontname: string): void
    vfunc_get_font_face(): Pango.FontFace | null
    vfunc_get_font_family(): Pango.FontFamily | null
    vfunc_get_font_map(): Pango.FontMap | null
    vfunc_get_font_size(): number
    vfunc_set_filter_func(filter: FontFilterFunc | null): void
    vfunc_set_font_map(fontmap?: Pango.FontMap | null): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close(): void
    vfunc_response(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "close", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: FontChooserDialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: FontChooserDialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: FontChooserDialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: FontChooserDialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: FontChooserDialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: FontChooserDialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: FontChooserDialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: FontChooserDialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: FontChooserDialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: FontChooserDialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: FontChooserDialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: FontChooserDialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: FontChooserDialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: FontChooserDialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: FontChooserDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: FontChooserDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: FontChooserDialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: FontChooserDialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: FontChooserDialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: FontChooserDialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FontChooser */
    connect(sigName: "font-activated", callback: (($obj: FontChooserDialog, fontname: string) => void)): number
    connect_after(sigName: "font-activated", callback: (($obj: FontChooserDialog, fontname: string) => void)): number
    emit(sigName: "font-activated", fontname: string): void
    connect(sigName: "notify::application", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-desc", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-desc", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-features", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-features", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::level", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::level", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preview-text", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preview-text", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-preview-entry", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-preview-entry", callback: (($obj: FontChooserDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FontChooserDialog_ConstructProps)
    _init (config?: FontChooserDialog_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(title?: string | null, parent?: Window | null): FontChooserDialog
    static new(): FontChooserDialog
    static $gtype: GObject.Type
}
export interface FontChooserWidget_ConstructProps extends Widget_ConstructProps {
    accessible_role?: AccessibleRole
    font?: string
    font_desc?: Pango.FontDescription
    language?: string
    level?: FontChooserLevel
    preview_text?: string
    show_preview_entry?: boolean
}
export class FontChooserWidget {
    /* Properties of Gtk.FontChooserWidget */
    readonly tweak_action: Gio.Action
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.FontChooser */
    font: string
    font_desc: Pango.FontDescription
    readonly font_features: string
    language: string
    level: FontChooserLevel
    preview_text: string
    show_preview_entry: boolean
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.FontChooser */
    get_font(): string | null
    get_font_desc(): Pango.FontDescription | null
    get_font_face(): Pango.FontFace | null
    get_font_family(): Pango.FontFamily | null
    get_font_features(): string
    get_font_size(): number
    get_language(): string
    get_level(): FontChooserLevel
    get_preview_text(): string
    get_show_preview_entry(): boolean
    set_filter_func(filter: FontFilterFunc | null): void
    set_font(fontname: string): void
    set_font_desc(font_desc: Pango.FontDescription): void
    set_language(language: string): void
    set_level(level: FontChooserLevel): void
    set_preview_text(text: string): void
    set_show_preview_entry(show_preview_entry: boolean): void
    /* Virtual methods of Gtk.FontChooserWidget */
    vfunc_font_activated(fontname: string): void
    vfunc_get_font_face(): Pango.FontFace | null
    vfunc_get_font_family(): Pango.FontFamily | null
    vfunc_get_font_map(): Pango.FontMap | null
    vfunc_get_font_size(): number
    vfunc_set_filter_func(filter: FontFilterFunc | null): void
    vfunc_set_font_map(fontmap?: Pango.FontMap | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: FontChooserWidget) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: FontChooserWidget) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: FontChooserWidget, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: FontChooserWidget, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: FontChooserWidget) => void)): number
    connect_after(sigName: "hide", callback: (($obj: FontChooserWidget) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: FontChooserWidget, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: FontChooserWidget, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: FontChooserWidget) => void)): number
    connect_after(sigName: "map", callback: (($obj: FontChooserWidget) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: FontChooserWidget, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: FontChooserWidget, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: FontChooserWidget, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: FontChooserWidget, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: FontChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: FontChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: FontChooserWidget) => void)): number
    connect_after(sigName: "realize", callback: (($obj: FontChooserWidget) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: FontChooserWidget) => void)): number
    connect_after(sigName: "show", callback: (($obj: FontChooserWidget) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: FontChooserWidget, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: FontChooserWidget, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: FontChooserWidget) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: FontChooserWidget) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: FontChooserWidget) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: FontChooserWidget) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FontChooser */
    connect(sigName: "font-activated", callback: (($obj: FontChooserWidget, fontname: string) => void)): number
    connect_after(sigName: "font-activated", callback: (($obj: FontChooserWidget, fontname: string) => void)): number
    emit(sigName: "font-activated", fontname: string): void
    connect(sigName: "notify::tweak-action", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tweak-action", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-desc", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-desc", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-features", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-features", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::level", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::level", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preview-text", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preview-text", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-preview-entry", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-preview-entry", callback: (($obj: FontChooserWidget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: FontChooserWidget_ConstructProps)
    _init (config?: FontChooserWidget_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): FontChooserWidget
    static $gtype: GObject.Type
}
export interface Frame_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    label?: string
    label_widget?: Widget
    label_xalign?: number
    accessible_role?: AccessibleRole
}
export class Frame {
    /* Properties of Gtk.Frame */
    child: Widget
    label: string
    label_widget: Widget
    label_xalign: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Frame */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Frame */
    get_child(): Widget | null
    get_label(): string | null
    get_label_align(): number
    get_label_widget(): Widget | null
    set_child(child?: Widget | null): void
    set_label(label?: string | null): void
    set_label_align(xalign: number): void
    set_label_widget(label_widget?: Widget | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Frame */
    vfunc_compute_child_allocation(allocation: Allocation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Frame) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Frame) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Frame, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Frame, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Frame) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Frame) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Frame, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Frame, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Frame) => void)): number
    connect_after(sigName: "map", callback: (($obj: Frame) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Frame, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Frame, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Frame, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Frame, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Frame, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Frame, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Frame) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Frame) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Frame) => void)): number
    connect_after(sigName: "show", callback: (($obj: Frame) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Frame, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Frame, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Frame) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Frame) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Frame) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Frame) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label-widget", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label-widget", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label-xalign", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label-xalign", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Frame_ConstructProps)
    _init (config?: Frame_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(label?: string | null): Frame
    static $gtype: GObject.Type
}
export interface GLArea_ConstructProps extends Widget_ConstructProps {
    auto_render?: boolean
    has_depth_buffer?: boolean
    has_stencil_buffer?: boolean
    use_es?: boolean
    accessible_role?: AccessibleRole
}
export class GLArea {
    /* Properties of Gtk.GLArea */
    auto_render: boolean
    readonly context: Gdk.GLContext
    has_depth_buffer: boolean
    has_stencil_buffer: boolean
    use_es: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GLArea */
    attach_buffers(): void
    get_auto_render(): boolean
    get_context(): Gdk.GLContext
    get_error(): GLib.Error | null
    get_has_depth_buffer(): boolean
    get_has_stencil_buffer(): boolean
    get_required_version(): [ /* major */ number, /* minor */ number ]
    get_use_es(): boolean
    make_current(): void
    queue_render(): void
    set_auto_render(auto_render: boolean): void
    set_error(error?: GLib.Error | null): void
    set_has_depth_buffer(has_depth_buffer: boolean): void
    set_has_stencil_buffer(has_stencil_buffer: boolean): void
    set_required_version(major: number, minor: number): void
    set_use_es(use_es: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.GLArea */
    vfunc_render(context: Gdk.GLContext): boolean
    vfunc_resize(width: number, height: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GLArea */
    connect(sigName: "create-context", callback: (($obj: GLArea) => Gdk.GLContext)): number
    connect_after(sigName: "create-context", callback: (($obj: GLArea) => Gdk.GLContext)): number
    emit(sigName: "create-context"): void
    connect(sigName: "render", callback: (($obj: GLArea, context: Gdk.GLContext) => boolean)): number
    connect_after(sigName: "render", callback: (($obj: GLArea, context: Gdk.GLContext) => boolean)): number
    emit(sigName: "render", context: Gdk.GLContext): void
    connect(sigName: "resize", callback: (($obj: GLArea, width: number, height: number) => void)): number
    connect_after(sigName: "resize", callback: (($obj: GLArea, width: number, height: number) => void)): number
    emit(sigName: "resize", width: number, height: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: GLArea) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: GLArea) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: GLArea, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: GLArea, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: GLArea) => void)): number
    connect_after(sigName: "hide", callback: (($obj: GLArea) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: GLArea, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: GLArea, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: GLArea) => void)): number
    connect_after(sigName: "map", callback: (($obj: GLArea) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: GLArea, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: GLArea, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: GLArea, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: GLArea, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: GLArea, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: GLArea, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: GLArea) => void)): number
    connect_after(sigName: "realize", callback: (($obj: GLArea) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: GLArea) => void)): number
    connect_after(sigName: "show", callback: (($obj: GLArea) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: GLArea, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: GLArea, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: GLArea) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: GLArea) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: GLArea) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: GLArea) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::auto-render", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::auto-render", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::context", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::context", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-depth-buffer", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-depth-buffer", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-stencil-buffer", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-stencil-buffer", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-es", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-es", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: GLArea, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GLArea_ConstructProps)
    _init (config?: GLArea_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GLArea
    static $gtype: GObject.Type
}
export interface Gesture_ConstructProps extends EventController_ConstructProps {
    n_points?: number
}
export class Gesture {
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: Gesture, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: Gesture, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: Gesture, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: Gesture, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: Gesture, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: Gesture, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: Gesture, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: Gesture, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: Gesture, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: Gesture, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: Gesture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Gesture_ConstructProps)
    _init (config?: Gesture_ConstructProps): void
    static $gtype: GObject.Type
}
export interface GestureClick_ConstructProps extends GestureSingle_ConstructProps {
}
export class GestureClick {
    /* Properties of Gtk.GestureSingle */
    button: number
    exclusive: boolean
    touch_only: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureClick */
    connect(sigName: "pressed", callback: (($obj: GestureClick, n_press: number, x: number, y: number) => void)): number
    connect_after(sigName: "pressed", callback: (($obj: GestureClick, n_press: number, x: number, y: number) => void)): number
    emit(sigName: "pressed", n_press: number, x: number, y: number): void
    connect(sigName: "released", callback: (($obj: GestureClick, n_press: number, x: number, y: number) => void)): number
    connect_after(sigName: "released", callback: (($obj: GestureClick, n_press: number, x: number, y: number) => void)): number
    emit(sigName: "released", n_press: number, x: number, y: number): void
    connect(sigName: "stopped", callback: (($obj: GestureClick) => void)): number
    connect_after(sigName: "stopped", callback: (($obj: GestureClick) => void)): number
    emit(sigName: "stopped"): void
    connect(sigName: "unpaired-release", callback: (($obj: GestureClick, x: number, y: number, button: number, sequence: Gdk.EventSequence) => void)): number
    connect_after(sigName: "unpaired-release", callback: (($obj: GestureClick, x: number, y: number, button: number, sequence: Gdk.EventSequence) => void)): number
    emit(sigName: "unpaired-release", x: number, y: number, button: number, sequence: Gdk.EventSequence): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GestureClick, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GestureClick, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GestureClick, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GestureClick, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GestureClick, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GestureClick, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GestureClick, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GestureClick, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GestureClick, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GestureClick, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::button", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::exclusive", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::exclusive", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::touch-only", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::touch-only", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GestureClick, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GestureClick_ConstructProps)
    _init (config?: GestureClick_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GestureClick
    static $gtype: GObject.Type
}
export interface GestureDrag_ConstructProps extends GestureSingle_ConstructProps {
}
export class GestureDrag {
    /* Properties of Gtk.GestureSingle */
    button: number
    exclusive: boolean
    touch_only: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GestureDrag */
    get_offset(): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_start_point(): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureDrag */
    connect(sigName: "drag-begin", callback: (($obj: GestureDrag, start_x: number, start_y: number) => void)): number
    connect_after(sigName: "drag-begin", callback: (($obj: GestureDrag, start_x: number, start_y: number) => void)): number
    emit(sigName: "drag-begin", start_x: number, start_y: number): void
    connect(sigName: "drag-end", callback: (($obj: GestureDrag, offset_x: number, offset_y: number) => void)): number
    connect_after(sigName: "drag-end", callback: (($obj: GestureDrag, offset_x: number, offset_y: number) => void)): number
    emit(sigName: "drag-end", offset_x: number, offset_y: number): void
    connect(sigName: "drag-update", callback: (($obj: GestureDrag, offset_x: number, offset_y: number) => void)): number
    connect_after(sigName: "drag-update", callback: (($obj: GestureDrag, offset_x: number, offset_y: number) => void)): number
    emit(sigName: "drag-update", offset_x: number, offset_y: number): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GestureDrag, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GestureDrag, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GestureDrag, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GestureDrag, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GestureDrag, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GestureDrag, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GestureDrag, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GestureDrag, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GestureDrag, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GestureDrag, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::button", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::exclusive", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::exclusive", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::touch-only", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::touch-only", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GestureDrag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GestureDrag_ConstructProps)
    _init (config?: GestureDrag_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GestureDrag
    static $gtype: GObject.Type
}
export interface GestureLongPress_ConstructProps extends GestureSingle_ConstructProps {
    delay_factor?: number
}
export class GestureLongPress {
    /* Properties of Gtk.GestureLongPress */
    delay_factor: number
    /* Properties of Gtk.GestureSingle */
    button: number
    exclusive: boolean
    touch_only: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GestureLongPress */
    get_delay_factor(): number
    set_delay_factor(delay_factor: number): void
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureLongPress */
    connect(sigName: "cancelled", callback: (($obj: GestureLongPress) => void)): number
    connect_after(sigName: "cancelled", callback: (($obj: GestureLongPress) => void)): number
    emit(sigName: "cancelled"): void
    connect(sigName: "pressed", callback: (($obj: GestureLongPress, x: number, y: number) => void)): number
    connect_after(sigName: "pressed", callback: (($obj: GestureLongPress, x: number, y: number) => void)): number
    emit(sigName: "pressed", x: number, y: number): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GestureLongPress, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GestureLongPress, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GestureLongPress, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GestureLongPress, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GestureLongPress, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GestureLongPress, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GestureLongPress, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GestureLongPress, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GestureLongPress, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GestureLongPress, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::delay-factor", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::delay-factor", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::button", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::exclusive", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::exclusive", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::touch-only", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::touch-only", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GestureLongPress, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GestureLongPress_ConstructProps)
    _init (config?: GestureLongPress_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GestureLongPress
    static $gtype: GObject.Type
}
export interface GesturePan_ConstructProps extends GestureDrag_ConstructProps {
    orientation?: Orientation
}
export class GesturePan {
    /* Properties of Gtk.GesturePan */
    orientation: Orientation
    /* Properties of Gtk.GestureSingle */
    button: number
    exclusive: boolean
    touch_only: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GesturePan */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Methods of Gtk.GestureDrag */
    get_offset(): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_start_point(): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GesturePan */
    connect(sigName: "pan", callback: (($obj: GesturePan, direction: PanDirection, offset: number) => void)): number
    connect_after(sigName: "pan", callback: (($obj: GesturePan, direction: PanDirection, offset: number) => void)): number
    emit(sigName: "pan", direction: PanDirection, offset: number): void
    /* Signals of Gtk.GestureDrag */
    connect(sigName: "drag-begin", callback: (($obj: GesturePan, start_x: number, start_y: number) => void)): number
    connect_after(sigName: "drag-begin", callback: (($obj: GesturePan, start_x: number, start_y: number) => void)): number
    emit(sigName: "drag-begin", start_x: number, start_y: number): void
    connect(sigName: "drag-end", callback: (($obj: GesturePan, offset_x: number, offset_y: number) => void)): number
    connect_after(sigName: "drag-end", callback: (($obj: GesturePan, offset_x: number, offset_y: number) => void)): number
    emit(sigName: "drag-end", offset_x: number, offset_y: number): void
    connect(sigName: "drag-update", callback: (($obj: GesturePan, offset_x: number, offset_y: number) => void)): number
    connect_after(sigName: "drag-update", callback: (($obj: GesturePan, offset_x: number, offset_y: number) => void)): number
    emit(sigName: "drag-update", offset_x: number, offset_y: number): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GesturePan, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GesturePan, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GesturePan, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GesturePan, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GesturePan, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GesturePan, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GesturePan, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GesturePan, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GesturePan, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GesturePan, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::button", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::exclusive", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::exclusive", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::touch-only", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::touch-only", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GesturePan, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GesturePan_ConstructProps)
    _init (config?: GesturePan_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(orientation: Orientation): GesturePan
    static new(): GesturePan
    static $gtype: GObject.Type
}
export interface GestureRotate_ConstructProps extends Gesture_ConstructProps {
}
export class GestureRotate {
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GestureRotate */
    get_angle_delta(): number
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureRotate */
    connect(sigName: "angle-changed", callback: (($obj: GestureRotate, angle: number, angle_delta: number) => void)): number
    connect_after(sigName: "angle-changed", callback: (($obj: GestureRotate, angle: number, angle_delta: number) => void)): number
    emit(sigName: "angle-changed", angle: number, angle_delta: number): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GestureRotate, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GestureRotate, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GestureRotate, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GestureRotate, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GestureRotate, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GestureRotate, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GestureRotate, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GestureRotate, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GestureRotate, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GestureRotate, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GestureRotate, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GestureRotate_ConstructProps)
    _init (config?: GestureRotate_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GestureRotate
    static $gtype: GObject.Type
}
export interface GestureSingle_ConstructProps extends Gesture_ConstructProps {
    button?: number
    exclusive?: boolean
    touch_only?: boolean
}
export class GestureSingle {
    /* Properties of Gtk.GestureSingle */
    button: number
    exclusive: boolean
    touch_only: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GestureSingle, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GestureSingle, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GestureSingle, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GestureSingle, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GestureSingle, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GestureSingle, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GestureSingle, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GestureSingle, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GestureSingle, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GestureSingle, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::button", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::exclusive", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::exclusive", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::touch-only", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::touch-only", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GestureSingle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GestureSingle_ConstructProps)
    _init (config?: GestureSingle_ConstructProps): void
    static $gtype: GObject.Type
}
export interface GestureStylus_ConstructProps extends GestureSingle_ConstructProps {
}
export class GestureStylus {
    /* Properties of Gtk.GestureSingle */
    button: number
    exclusive: boolean
    touch_only: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GestureStylus */
    get_axes(axes: Gdk.AxisUse[]): [ /* returnType */ boolean, /* values */ number[] ]
    get_axis(axis: Gdk.AxisUse): [ /* returnType */ boolean, /* value */ number ]
    get_backlog(): [ /* returnType */ boolean, /* backlog */ Gdk.TimeCoord[] ]
    get_device_tool(): Gdk.DeviceTool | null
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureStylus */
    connect(sigName: "down", callback: (($obj: GestureStylus, x: number, y: number) => void)): number
    connect_after(sigName: "down", callback: (($obj: GestureStylus, x: number, y: number) => void)): number
    emit(sigName: "down", x: number, y: number): void
    connect(sigName: "motion", callback: (($obj: GestureStylus, x: number, y: number) => void)): number
    connect_after(sigName: "motion", callback: (($obj: GestureStylus, x: number, y: number) => void)): number
    emit(sigName: "motion", x: number, y: number): void
    connect(sigName: "proximity", callback: (($obj: GestureStylus, x: number, y: number) => void)): number
    connect_after(sigName: "proximity", callback: (($obj: GestureStylus, x: number, y: number) => void)): number
    emit(sigName: "proximity", x: number, y: number): void
    connect(sigName: "up", callback: (($obj: GestureStylus, x: number, y: number) => void)): number
    connect_after(sigName: "up", callback: (($obj: GestureStylus, x: number, y: number) => void)): number
    emit(sigName: "up", x: number, y: number): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GestureStylus, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GestureStylus, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GestureStylus, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GestureStylus, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GestureStylus, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GestureStylus, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GestureStylus, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GestureStylus, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GestureStylus, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GestureStylus, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::button", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::exclusive", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::exclusive", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::touch-only", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::touch-only", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GestureStylus, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GestureStylus_ConstructProps)
    _init (config?: GestureStylus_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GestureStylus
    static $gtype: GObject.Type
}
export interface GestureSwipe_ConstructProps extends GestureSingle_ConstructProps {
}
export class GestureSwipe {
    /* Properties of Gtk.GestureSingle */
    button: number
    exclusive: boolean
    touch_only: boolean
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GestureSwipe */
    get_velocity(): [ /* returnType */ boolean, /* velocity_x */ number, /* velocity_y */ number ]
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureSwipe */
    connect(sigName: "swipe", callback: (($obj: GestureSwipe, velocity_x: number, velocity_y: number) => void)): number
    connect_after(sigName: "swipe", callback: (($obj: GestureSwipe, velocity_x: number, velocity_y: number) => void)): number
    emit(sigName: "swipe", velocity_x: number, velocity_y: number): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GestureSwipe, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GestureSwipe, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GestureSwipe, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GestureSwipe, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GestureSwipe, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GestureSwipe, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GestureSwipe, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GestureSwipe, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GestureSwipe, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GestureSwipe, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::button", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::exclusive", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::exclusive", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::touch-only", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::touch-only", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GestureSwipe, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GestureSwipe_ConstructProps)
    _init (config?: GestureSwipe_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GestureSwipe
    static $gtype: GObject.Type
}
export interface GestureZoom_ConstructProps extends Gesture_ConstructProps {
}
export class GestureZoom {
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GestureZoom */
    get_scale_delta(): number
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence?: Gdk.EventSequence | null): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    ungroup(): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureZoom */
    connect(sigName: "scale-changed", callback: (($obj: GestureZoom, scale: number) => void)): number
    connect_after(sigName: "scale-changed", callback: (($obj: GestureZoom, scale: number) => void)): number
    emit(sigName: "scale-changed", scale: number): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: (($obj: GestureZoom, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "begin", callback: (($obj: GestureZoom, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "begin", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "cancel", callback: (($obj: GestureZoom, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "cancel", callback: (($obj: GestureZoom, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "cancel", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "end", callback: (($obj: GestureZoom, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "end", callback: (($obj: GestureZoom, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "end", sequence?: Gdk.EventSequence | null): void
    connect(sigName: "sequence-state-changed", callback: (($obj: GestureZoom, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    connect_after(sigName: "sequence-state-changed", callback: (($obj: GestureZoom, sequence: Gdk.EventSequence | null, state: EventSequenceState) => void)): number
    emit(sigName: "sequence-state-changed", sequence: Gdk.EventSequence | null, state: EventSequenceState): void
    connect(sigName: "update", callback: (($obj: GestureZoom, sequence?: Gdk.EventSequence | null) => void)): number
    connect_after(sigName: "update", callback: (($obj: GestureZoom, sequence?: Gdk.EventSequence | null) => void)): number
    emit(sigName: "update", sequence?: Gdk.EventSequence | null): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: GestureZoom, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GestureZoom_ConstructProps)
    _init (config?: GestureZoom_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GestureZoom
    static $gtype: GObject.Type
}
export interface Grid_ConstructProps extends Widget_ConstructProps {
    baseline_row?: number
    column_homogeneous?: boolean
    column_spacing?: number
    row_homogeneous?: boolean
    row_spacing?: number
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class Grid {
    /* Properties of Gtk.Grid */
    baseline_row: number
    column_homogeneous: boolean
    column_spacing: number
    row_homogeneous: boolean
    row_spacing: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Grid */
    attach(child: Widget, column: number, row: number, width: number, height: number): void
    attach_next_to(child: Widget, sibling: Widget | null, side: PositionType, width: number, height: number): void
    get_baseline_row(): number
    get_child_at(column: number, row: number): Widget | null
    get_column_homogeneous(): boolean
    get_column_spacing(): number
    get_row_baseline_position(row: number): BaselinePosition
    get_row_homogeneous(): boolean
    get_row_spacing(): number
    insert_column(position: number): void
    insert_next_to(sibling: Widget, side: PositionType): void
    insert_row(position: number): void
    query_child(child: Widget): [ /* column */ number | null, /* row */ number | null, /* width */ number | null, /* height */ number | null ]
    remove(child: Widget): void
    remove_column(position: number): void
    remove_row(position: number): void
    set_baseline_row(row: number): void
    set_column_homogeneous(homogeneous: boolean): void
    set_column_spacing(spacing: number): void
    set_row_baseline_position(row: number, pos: BaselinePosition): void
    set_row_homogeneous(homogeneous: boolean): void
    set_row_spacing(spacing: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Grid) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Grid) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Grid, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Grid, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Grid) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Grid) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Grid, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Grid, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Grid) => void)): number
    connect_after(sigName: "map", callback: (($obj: Grid) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Grid, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Grid, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Grid, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Grid, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Grid, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Grid, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Grid) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Grid) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Grid) => void)): number
    connect_after(sigName: "show", callback: (($obj: Grid) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Grid, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Grid, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Grid) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Grid) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Grid) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Grid) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::baseline-row", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::baseline-row", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::column-homogeneous", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column-homogeneous", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::column-spacing", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column-spacing", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-homogeneous", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-homogeneous", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-spacing", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-spacing", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: Grid, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Grid_ConstructProps)
    _init (config?: Grid_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Grid
    static $gtype: GObject.Type
}
export interface GridLayout_ConstructProps extends LayoutManager_ConstructProps {
    baseline_row?: number
    column_homogeneous?: boolean
    column_spacing?: number
    row_homogeneous?: boolean
    row_spacing?: number
}
export class GridLayout {
    /* Properties of Gtk.GridLayout */
    baseline_row: number
    column_homogeneous: boolean
    column_spacing: number
    row_homogeneous: boolean
    row_spacing: number
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GridLayout */
    get_baseline_row(): number
    get_column_homogeneous(): boolean
    get_column_spacing(): number
    get_row_baseline_position(row: number): BaselinePosition
    get_row_homogeneous(): boolean
    get_row_spacing(): number
    set_baseline_row(row: number): void
    set_column_homogeneous(homogeneous: boolean): void
    set_column_spacing(spacing: number): void
    set_row_baseline_position(row: number, pos: BaselinePosition): void
    set_row_homogeneous(homogeneous: boolean): void
    set_row_spacing(spacing: number): void
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::baseline-row", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::baseline-row", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::column-homogeneous", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column-homogeneous", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::column-spacing", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column-spacing", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-homogeneous", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-homogeneous", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-spacing", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-spacing", callback: (($obj: GridLayout, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GridLayout_ConstructProps)
    _init (config?: GridLayout_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GridLayout
    static $gtype: GObject.Type
}
export interface GridLayoutChild_ConstructProps extends LayoutChild_ConstructProps {
    column?: number
    column_span?: number
    row?: number
    row_span?: number
}
export class GridLayoutChild {
    /* Properties of Gtk.GridLayoutChild */
    column: number
    column_span: number
    row: number
    row_span: number
    /* Fields of Gtk.LayoutChild */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GridLayoutChild */
    get_column(): number
    get_column_span(): number
    get_row(): number
    get_row_span(): number
    set_column(column: number): void
    set_column_span(span: number): void
    set_row(row: number): void
    set_row_span(span: number): void
    /* Methods of Gtk.LayoutChild */
    get_child_widget(): Widget
    get_layout_manager(): LayoutManager
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::column", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::column-span", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column-span", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-span", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-span", callback: (($obj: GridLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GridLayoutChild_ConstructProps)
    _init (config?: GridLayoutChild_ConstructProps): void
    static $gtype: GObject.Type
}
export interface GridView_ConstructProps extends ListBase_ConstructProps {
    enable_rubberband?: boolean
    factory?: ListItemFactory
    max_columns?: number
    min_columns?: number
    model?: SelectionModel
    single_click_activate?: boolean
    accessible_role?: AccessibleRole
    orientation?: Orientation
    hadjustment?: Adjustment
    hscroll_policy?: ScrollablePolicy
    vadjustment?: Adjustment
    vscroll_policy?: ScrollablePolicy
}
export class GridView {
    /* Properties of Gtk.GridView */
    enable_rubberband: boolean
    factory: ListItemFactory
    max_columns: number
    min_columns: number
    model: SelectionModel
    single_click_activate: boolean
    /* Properties of Gtk.ListBase */
    orientation: Orientation
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.GridView */
    get_enable_rubberband(): boolean
    get_factory(): ListItemFactory | null
    get_max_columns(): number
    get_min_columns(): number
    get_model(): SelectionModel | null
    get_single_click_activate(): boolean
    set_enable_rubberband(enable_rubberband: boolean): void
    set_factory(factory?: ListItemFactory | null): void
    set_max_columns(max_columns: number): void
    set_min_columns(min_columns: number): void
    set_model(model?: SelectionModel | null): void
    set_single_click_activate(single_click_activate: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.ListBase */
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GridView */
    connect(sigName: "activate", callback: (($obj: GridView, position: number) => void)): number
    connect_after(sigName: "activate", callback: (($obj: GridView, position: number) => void)): number
    emit(sigName: "activate", position: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: GridView) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: GridView) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: GridView, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: GridView, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: GridView) => void)): number
    connect_after(sigName: "hide", callback: (($obj: GridView) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: GridView, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: GridView, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: GridView) => void)): number
    connect_after(sigName: "map", callback: (($obj: GridView) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: GridView, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: GridView, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: GridView, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: GridView, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: GridView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: GridView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: GridView) => void)): number
    connect_after(sigName: "realize", callback: (($obj: GridView) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: GridView) => void)): number
    connect_after(sigName: "show", callback: (($obj: GridView) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: GridView, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: GridView, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: GridView) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: GridView) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: GridView) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: GridView) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::enable-rubberband", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-rubberband", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::factory", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::factory", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-columns", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-columns", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-columns", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-columns", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-click-activate", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-click-activate", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscroll-policy", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscroll-policy", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscroll-policy", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscroll-policy", callback: (($obj: GridView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GridView_ConstructProps)
    _init (config?: GridView_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: SelectionModel | null, factory?: ListItemFactory | null): GridView
    static $gtype: GObject.Type
}
export interface HeaderBar_ConstructProps extends Widget_ConstructProps {
    decoration_layout?: string
    show_title_buttons?: boolean
    title_widget?: Widget
    accessible_role?: AccessibleRole
}
export class HeaderBar {
    /* Properties of Gtk.HeaderBar */
    decoration_layout: string
    show_title_buttons: boolean
    title_widget: Widget
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.HeaderBar */
    get_decoration_layout(): string | null
    get_show_title_buttons(): boolean
    get_title_widget(): Widget | null
    pack_end(child: Widget): void
    pack_start(child: Widget): void
    remove(child: Widget): void
    set_decoration_layout(layout?: string | null): void
    set_show_title_buttons(setting: boolean): void
    set_title_widget(title_widget?: Widget | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: HeaderBar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: HeaderBar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: HeaderBar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: HeaderBar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: HeaderBar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: HeaderBar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: HeaderBar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: HeaderBar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: HeaderBar) => void)): number
    connect_after(sigName: "map", callback: (($obj: HeaderBar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: HeaderBar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: HeaderBar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: HeaderBar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: HeaderBar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: HeaderBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: HeaderBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: HeaderBar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: HeaderBar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: HeaderBar) => void)): number
    connect_after(sigName: "show", callback: (($obj: HeaderBar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: HeaderBar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: HeaderBar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: HeaderBar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: HeaderBar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: HeaderBar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: HeaderBar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::decoration-layout", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decoration-layout", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-title-buttons", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-title-buttons", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title-widget", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title-widget", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: HeaderBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: HeaderBar_ConstructProps)
    _init (config?: HeaderBar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): HeaderBar
    static $gtype: GObject.Type
}
export interface IMContext_ConstructProps extends GObject.Object_ConstructProps {
    input_hints?: InputHints
    input_purpose?: InputPurpose
}
export class IMContext {
    /* Properties of Gtk.IMContext */
    input_hints: InputHints
    input_purpose: InputPurpose
    /* Fields of Gtk.IMContext */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.IMContext */
    delete_surrounding(offset: number, n_chars: number): boolean
    filter_key(press: boolean, surface: Gdk.Surface, device: Gdk.Device, time: number, keycode: number, state: Gdk.ModifierType, group: number): boolean
    filter_keypress(event: Gdk.Event): boolean
    focus_in(): void
    focus_out(): void
    get_preedit_string(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    get_surrounding(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    get_surrounding_with_selection(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number, /* anchor_index */ number ]
    reset(): void
    set_client_widget(widget?: Widget | null): void
    set_cursor_location(area: Gdk.Rectangle): void
    set_surrounding(text: string, len: number, cursor_index: number): void
    set_surrounding_with_selection(text: string, len: number, cursor_index: number, anchor_index: number): void
    set_use_preedit(use_preedit: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.IMContext */
    vfunc_commit(str: string): void
    vfunc_delete_surrounding(offset: number, n_chars: number): boolean
    vfunc_filter_keypress(event: Gdk.Event): boolean
    vfunc_focus_in(): void
    vfunc_focus_out(): void
    vfunc_get_preedit_string(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    vfunc_get_surrounding(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    vfunc_get_surrounding_with_selection(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number, /* anchor_index */ number ]
    vfunc_preedit_changed(): void
    vfunc_preedit_end(): void
    vfunc_preedit_start(): void
    vfunc_reset(): void
    vfunc_retrieve_surrounding(): boolean
    vfunc_set_client_widget(widget?: Widget | null): void
    vfunc_set_cursor_location(area: Gdk.Rectangle): void
    vfunc_set_surrounding(text: string, len: number, cursor_index: number): void
    vfunc_set_surrounding_with_selection(text: string, len: number, cursor_index: number, anchor_index: number): void
    vfunc_set_use_preedit(use_preedit: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.IMContext */
    connect(sigName: "commit", callback: (($obj: IMContext, str: string) => void)): number
    connect_after(sigName: "commit", callback: (($obj: IMContext, str: string) => void)): number
    emit(sigName: "commit", str: string): void
    connect(sigName: "delete-surrounding", callback: (($obj: IMContext, offset: number, n_chars: number) => boolean)): number
    connect_after(sigName: "delete-surrounding", callback: (($obj: IMContext, offset: number, n_chars: number) => boolean)): number
    emit(sigName: "delete-surrounding", offset: number, n_chars: number): void
    connect(sigName: "preedit-changed", callback: (($obj: IMContext) => void)): number
    connect_after(sigName: "preedit-changed", callback: (($obj: IMContext) => void)): number
    emit(sigName: "preedit-changed"): void
    connect(sigName: "preedit-end", callback: (($obj: IMContext) => void)): number
    connect_after(sigName: "preedit-end", callback: (($obj: IMContext) => void)): number
    emit(sigName: "preedit-end"): void
    connect(sigName: "preedit-start", callback: (($obj: IMContext) => void)): number
    connect_after(sigName: "preedit-start", callback: (($obj: IMContext) => void)): number
    emit(sigName: "preedit-start"): void
    connect(sigName: "retrieve-surrounding", callback: (($obj: IMContext) => boolean)): number
    connect_after(sigName: "retrieve-surrounding", callback: (($obj: IMContext) => boolean)): number
    emit(sigName: "retrieve-surrounding"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IMContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IMContext, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::input-hints", callback: (($obj: IMContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-hints", callback: (($obj: IMContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-purpose", callback: (($obj: IMContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-purpose", callback: (($obj: IMContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IMContext_ConstructProps)
    _init (config?: IMContext_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IMContextSimple_ConstructProps extends IMContext_ConstructProps {
}
export class IMContextSimple {
    /* Properties of Gtk.IMContext */
    input_hints: InputHints
    input_purpose: InputPurpose
    /* Fields of Gtk.IMContextSimple */
    object: IMContext
    /* Fields of Gtk.IMContext */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.IMContextSimple */
    add_compose_file(compose_file: string): void
    /* Methods of Gtk.IMContext */
    delete_surrounding(offset: number, n_chars: number): boolean
    filter_key(press: boolean, surface: Gdk.Surface, device: Gdk.Device, time: number, keycode: number, state: Gdk.ModifierType, group: number): boolean
    filter_keypress(event: Gdk.Event): boolean
    focus_in(): void
    focus_out(): void
    get_preedit_string(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    get_surrounding(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    get_surrounding_with_selection(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number, /* anchor_index */ number ]
    reset(): void
    set_client_widget(widget?: Widget | null): void
    set_cursor_location(area: Gdk.Rectangle): void
    set_surrounding(text: string, len: number, cursor_index: number): void
    set_surrounding_with_selection(text: string, len: number, cursor_index: number, anchor_index: number): void
    set_use_preedit(use_preedit: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.IMContext */
    vfunc_commit(str: string): void
    vfunc_delete_surrounding(offset: number, n_chars: number): boolean
    vfunc_filter_keypress(event: Gdk.Event): boolean
    vfunc_focus_in(): void
    vfunc_focus_out(): void
    vfunc_get_preedit_string(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    vfunc_get_surrounding(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    vfunc_get_surrounding_with_selection(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number, /* anchor_index */ number ]
    vfunc_preedit_changed(): void
    vfunc_preedit_end(): void
    vfunc_preedit_start(): void
    vfunc_reset(): void
    vfunc_retrieve_surrounding(): boolean
    vfunc_set_client_widget(widget?: Widget | null): void
    vfunc_set_cursor_location(area: Gdk.Rectangle): void
    vfunc_set_surrounding(text: string, len: number, cursor_index: number): void
    vfunc_set_surrounding_with_selection(text: string, len: number, cursor_index: number, anchor_index: number): void
    vfunc_set_use_preedit(use_preedit: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.IMContext */
    connect(sigName: "commit", callback: (($obj: IMContextSimple, str: string) => void)): number
    connect_after(sigName: "commit", callback: (($obj: IMContextSimple, str: string) => void)): number
    emit(sigName: "commit", str: string): void
    connect(sigName: "delete-surrounding", callback: (($obj: IMContextSimple, offset: number, n_chars: number) => boolean)): number
    connect_after(sigName: "delete-surrounding", callback: (($obj: IMContextSimple, offset: number, n_chars: number) => boolean)): number
    emit(sigName: "delete-surrounding", offset: number, n_chars: number): void
    connect(sigName: "preedit-changed", callback: (($obj: IMContextSimple) => void)): number
    connect_after(sigName: "preedit-changed", callback: (($obj: IMContextSimple) => void)): number
    emit(sigName: "preedit-changed"): void
    connect(sigName: "preedit-end", callback: (($obj: IMContextSimple) => void)): number
    connect_after(sigName: "preedit-end", callback: (($obj: IMContextSimple) => void)): number
    emit(sigName: "preedit-end"): void
    connect(sigName: "preedit-start", callback: (($obj: IMContextSimple) => void)): number
    connect_after(sigName: "preedit-start", callback: (($obj: IMContextSimple) => void)): number
    emit(sigName: "preedit-start"): void
    connect(sigName: "retrieve-surrounding", callback: (($obj: IMContextSimple) => boolean)): number
    connect_after(sigName: "retrieve-surrounding", callback: (($obj: IMContextSimple) => boolean)): number
    emit(sigName: "retrieve-surrounding"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IMContextSimple, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IMContextSimple, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::input-hints", callback: (($obj: IMContextSimple, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-hints", callback: (($obj: IMContextSimple, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-purpose", callback: (($obj: IMContextSimple, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-purpose", callback: (($obj: IMContextSimple, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IMContextSimple_ConstructProps)
    _init (config?: IMContextSimple_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): IMContextSimple
    static $gtype: GObject.Type
}
export interface IMMulticontext_ConstructProps extends IMContext_ConstructProps {
}
export class IMMulticontext {
    /* Properties of Gtk.IMContext */
    input_hints: InputHints
    input_purpose: InputPurpose
    /* Fields of Gtk.IMMulticontext */
    object: IMContext
    /* Fields of Gtk.IMContext */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.IMMulticontext */
    get_context_id(): string
    set_context_id(context_id: string): void
    /* Methods of Gtk.IMContext */
    delete_surrounding(offset: number, n_chars: number): boolean
    filter_key(press: boolean, surface: Gdk.Surface, device: Gdk.Device, time: number, keycode: number, state: Gdk.ModifierType, group: number): boolean
    filter_keypress(event: Gdk.Event): boolean
    focus_in(): void
    focus_out(): void
    get_preedit_string(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    get_surrounding(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    get_surrounding_with_selection(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number, /* anchor_index */ number ]
    reset(): void
    set_client_widget(widget?: Widget | null): void
    set_cursor_location(area: Gdk.Rectangle): void
    set_surrounding(text: string, len: number, cursor_index: number): void
    set_surrounding_with_selection(text: string, len: number, cursor_index: number, anchor_index: number): void
    set_use_preedit(use_preedit: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.IMContext */
    vfunc_commit(str: string): void
    vfunc_delete_surrounding(offset: number, n_chars: number): boolean
    vfunc_filter_keypress(event: Gdk.Event): boolean
    vfunc_focus_in(): void
    vfunc_focus_out(): void
    vfunc_get_preedit_string(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    vfunc_get_surrounding(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    vfunc_get_surrounding_with_selection(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number, /* anchor_index */ number ]
    vfunc_preedit_changed(): void
    vfunc_preedit_end(): void
    vfunc_preedit_start(): void
    vfunc_reset(): void
    vfunc_retrieve_surrounding(): boolean
    vfunc_set_client_widget(widget?: Widget | null): void
    vfunc_set_cursor_location(area: Gdk.Rectangle): void
    vfunc_set_surrounding(text: string, len: number, cursor_index: number): void
    vfunc_set_surrounding_with_selection(text: string, len: number, cursor_index: number, anchor_index: number): void
    vfunc_set_use_preedit(use_preedit: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.IMContext */
    connect(sigName: "commit", callback: (($obj: IMMulticontext, str: string) => void)): number
    connect_after(sigName: "commit", callback: (($obj: IMMulticontext, str: string) => void)): number
    emit(sigName: "commit", str: string): void
    connect(sigName: "delete-surrounding", callback: (($obj: IMMulticontext, offset: number, n_chars: number) => boolean)): number
    connect_after(sigName: "delete-surrounding", callback: (($obj: IMMulticontext, offset: number, n_chars: number) => boolean)): number
    emit(sigName: "delete-surrounding", offset: number, n_chars: number): void
    connect(sigName: "preedit-changed", callback: (($obj: IMMulticontext) => void)): number
    connect_after(sigName: "preedit-changed", callback: (($obj: IMMulticontext) => void)): number
    emit(sigName: "preedit-changed"): void
    connect(sigName: "preedit-end", callback: (($obj: IMMulticontext) => void)): number
    connect_after(sigName: "preedit-end", callback: (($obj: IMMulticontext) => void)): number
    emit(sigName: "preedit-end"): void
    connect(sigName: "preedit-start", callback: (($obj: IMMulticontext) => void)): number
    connect_after(sigName: "preedit-start", callback: (($obj: IMMulticontext) => void)): number
    emit(sigName: "preedit-start"): void
    connect(sigName: "retrieve-surrounding", callback: (($obj: IMMulticontext) => boolean)): number
    connect_after(sigName: "retrieve-surrounding", callback: (($obj: IMMulticontext) => boolean)): number
    emit(sigName: "retrieve-surrounding"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IMMulticontext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IMMulticontext, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::input-hints", callback: (($obj: IMMulticontext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-hints", callback: (($obj: IMMulticontext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-purpose", callback: (($obj: IMMulticontext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-purpose", callback: (($obj: IMMulticontext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IMMulticontext_ConstructProps)
    _init (config?: IMMulticontext_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): IMMulticontext
    static $gtype: GObject.Type
}
export interface IconPaintable_ConstructProps extends GObject.Object_ConstructProps {
    file?: Gio.File
    icon_name?: string
    is_symbolic?: boolean
}
export class IconPaintable {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.IconPaintable */
    get_file(): Gio.File | null
    get_icon_name(): string | null
    is_symbolic(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gdk.Paintable */
    compute_concrete_size(specified_width: number, specified_height: number, default_width: number, default_height: number): [ /* concrete_width */ number, /* concrete_height */ number ]
    get_current_image(): Gdk.Paintable
    get_flags(): Gdk.PaintableFlags
    get_intrinsic_aspect_ratio(): number
    get_intrinsic_height(): number
    get_intrinsic_width(): number
    invalidate_contents(): void
    invalidate_size(): void
    snapshot(snapshot: Gdk.Snapshot, width: number, height: number): void
    /* Virtual methods of Gtk.IconPaintable */
    vfunc_get_current_image(): Gdk.Paintable
    vfunc_get_flags(): Gdk.PaintableFlags
    vfunc_get_intrinsic_aspect_ratio(): number
    vfunc_get_intrinsic_height(): number
    vfunc_get_intrinsic_width(): number
    vfunc_snapshot(snapshot: Gdk.Snapshot, width: number, height: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IconPaintable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IconPaintable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gdk.Paintable */
    connect(sigName: "invalidate-contents", callback: (($obj: IconPaintable) => void)): number
    connect_after(sigName: "invalidate-contents", callback: (($obj: IconPaintable) => void)): number
    emit(sigName: "invalidate-contents"): void
    connect(sigName: "invalidate-size", callback: (($obj: IconPaintable) => void)): number
    connect_after(sigName: "invalidate-size", callback: (($obj: IconPaintable) => void)): number
    emit(sigName: "invalidate-size"): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IconPaintable_ConstructProps)
    _init (config?: IconPaintable_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new_for_file(file: Gio.File, size: number, scale: number): IconPaintable
    static new_empty(intrinsic_width: number, intrinsic_height: number): Gdk.Paintable
    static $gtype: GObject.Type
}
export interface IconTheme_ConstructProps extends GObject.Object_ConstructProps {
    display?: Gdk.Display
    resource_path?: string[]
    search_path?: string[]
    theme_name?: string
}
export class IconTheme {
    /* Properties of Gtk.IconTheme */
    display: Gdk.Display
    readonly icon_names: string[]
    resource_path: string[]
    search_path: string[]
    theme_name: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.IconTheme */
    add_resource_path(path: string): void
    add_search_path(path: string): void
    get_display(): Gdk.Display | null
    get_icon_names(): string[]
    get_icon_sizes(icon_name: string): number[]
    get_resource_path(): string[] | null
    get_search_path(): string[] | null
    get_theme_name(): string
    has_gicon(gicon: Gio.Icon): boolean
    has_icon(icon_name: string): boolean
    lookup_by_gicon(icon: Gio.Icon, size: number, scale: number, direction: TextDirection, flags: IconLookupFlags): IconPaintable
    lookup_icon(icon_name: string, fallbacks: string[] | null, size: number, scale: number, direction: TextDirection, flags: IconLookupFlags): IconPaintable
    set_resource_path(path: string): void
    set_search_path(path?: string[] | null): void
    set_theme_name(theme_name?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.IconTheme */
    connect(sigName: "changed", callback: (($obj: IconTheme) => void)): number
    connect_after(sigName: "changed", callback: (($obj: IconTheme) => void)): number
    emit(sigName: "changed"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::display", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-names", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-names", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resource-path", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resource-path", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::search-path", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search-path", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::theme-name", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::theme-name", callback: (($obj: IconTheme, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IconTheme_ConstructProps)
    _init (config?: IconTheme_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): IconTheme
    static get_for_display(display: Gdk.Display): IconTheme
    static $gtype: GObject.Type
}
export interface IconView_ConstructProps extends Widget_ConstructProps {
    activate_on_single_click?: boolean
    cell_area?: CellArea
    column_spacing?: number
    columns?: number
    item_orientation?: Orientation
    item_padding?: number
    item_width?: number
    margin?: number
    markup_column?: number
    model?: TreeModel
    pixbuf_column?: number
    reorderable?: boolean
    row_spacing?: number
    selection_mode?: SelectionMode
    spacing?: number
    text_column?: number
    tooltip_column?: number
    accessible_role?: AccessibleRole
    hadjustment?: Adjustment
    hscroll_policy?: ScrollablePolicy
    vadjustment?: Adjustment
    vscroll_policy?: ScrollablePolicy
}
export class IconView {
    /* Properties of Gtk.IconView */
    activate_on_single_click: boolean
    column_spacing: number
    columns: number
    item_orientation: Orientation
    item_padding: number
    item_width: number
    margin: number
    markup_column: number
    model: TreeModel
    pixbuf_column: number
    reorderable: boolean
    row_spacing: number
    selection_mode: SelectionMode
    spacing: number
    text_column: number
    tooltip_column: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.IconView */
    create_drag_icon(path: TreePath): Gdk.Paintable
    enable_model_drag_dest(formats: Gdk.ContentFormats, actions: Gdk.DragAction): void
    enable_model_drag_source(start_button_mask: Gdk.ModifierType, formats: Gdk.ContentFormats, actions: Gdk.DragAction): void
    get_activate_on_single_click(): boolean
    get_cell_rect(path: TreePath, cell?: CellRenderer | null): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_column_spacing(): number
    get_columns(): number
    get_cursor(): [ /* returnType */ boolean, /* path */ TreePath | null, /* cell */ CellRenderer | null ]
    get_dest_item_at_pos(drag_x: number, drag_y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* pos */ IconViewDropPosition | null ]
    get_drag_dest_item(): [ /* path */ TreePath | null, /* pos */ IconViewDropPosition | null ]
    get_item_at_pos(x: number, y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* cell */ CellRenderer | null ]
    get_item_column(path: TreePath): number
    get_item_orientation(): Orientation
    get_item_padding(): number
    get_item_row(path: TreePath): number
    get_item_width(): number
    get_margin(): number
    get_markup_column(): number
    get_model(): TreeModel | null
    get_path_at_pos(x: number, y: number): TreePath | null
    get_pixbuf_column(): number
    get_reorderable(): boolean
    get_row_spacing(): number
    get_selected_items(): TreePath[]
    get_selection_mode(): SelectionMode
    get_spacing(): number
    get_text_column(): number
    get_tooltip_column(): number
    get_tooltip_context(x: number, y: number, keyboard_tip: boolean): [ /* returnType */ boolean, /* model */ TreeModel | null, /* path */ TreePath | null, /* iter */ TreeIter | null ]
    get_visible_range(): [ /* returnType */ boolean, /* start_path */ TreePath | null, /* end_path */ TreePath | null ]
    item_activated(path: TreePath): void
    path_is_selected(path: TreePath): boolean
    scroll_to_path(path: TreePath, use_align: boolean, row_align: number, col_align: number): void
    select_all(): void
    select_path(path: TreePath): void
    selected_foreach(func: IconViewForeachFunc): void
    set_activate_on_single_click(single: boolean): void
    set_column_spacing(column_spacing: number): void
    set_columns(columns: number): void
    set_cursor(path: TreePath, cell: CellRenderer | null, start_editing: boolean): void
    set_drag_dest_item(path: TreePath | null, pos: IconViewDropPosition): void
    set_item_orientation(orientation: Orientation): void
    set_item_padding(item_padding: number): void
    set_item_width(item_width: number): void
    set_margin(margin: number): void
    set_markup_column(column: number): void
    set_model(model?: TreeModel | null): void
    set_pixbuf_column(column: number): void
    set_reorderable(reorderable: boolean): void
    set_row_spacing(row_spacing: number): void
    set_selection_mode(mode: SelectionMode): void
    set_spacing(spacing: number): void
    set_text_column(column: number): void
    set_tooltip_cell(tooltip: Tooltip, path: TreePath, cell?: CellRenderer | null): void
    set_tooltip_column(column: number): void
    set_tooltip_item(tooltip: Tooltip, path: TreePath): void
    unselect_all(): void
    unselect_path(path: TreePath): void
    unset_model_drag_dest(): void
    unset_model_drag_source(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.IconView */
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.IconView */
    connect(sigName: "activate-cursor-item", callback: (($obj: IconView) => boolean)): number
    connect_after(sigName: "activate-cursor-item", callback: (($obj: IconView) => boolean)): number
    emit(sigName: "activate-cursor-item"): void
    connect(sigName: "item-activated", callback: (($obj: IconView, path: TreePath) => void)): number
    connect_after(sigName: "item-activated", callback: (($obj: IconView, path: TreePath) => void)): number
    emit(sigName: "item-activated", path: TreePath): void
    connect(sigName: "move-cursor", callback: (($obj: IconView, step: MovementStep, count: number, extend: boolean, modify: boolean) => boolean)): number
    connect_after(sigName: "move-cursor", callback: (($obj: IconView, step: MovementStep, count: number, extend: boolean, modify: boolean) => boolean)): number
    emit(sigName: "move-cursor", step: MovementStep, count: number, extend: boolean, modify: boolean): void
    connect(sigName: "select-all", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "select-all", callback: (($obj: IconView) => void)): number
    emit(sigName: "select-all"): void
    connect(sigName: "select-cursor-item", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "select-cursor-item", callback: (($obj: IconView) => void)): number
    emit(sigName: "select-cursor-item"): void
    connect(sigName: "selection-changed", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "selection-changed", callback: (($obj: IconView) => void)): number
    emit(sigName: "selection-changed"): void
    connect(sigName: "toggle-cursor-item", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "toggle-cursor-item", callback: (($obj: IconView) => void)): number
    emit(sigName: "toggle-cursor-item"): void
    connect(sigName: "unselect-all", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "unselect-all", callback: (($obj: IconView) => void)): number
    emit(sigName: "unselect-all"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: IconView) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: IconView, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: IconView, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "hide", callback: (($obj: IconView) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: IconView, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: IconView, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "map", callback: (($obj: IconView) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: IconView, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: IconView, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: IconView, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: IconView, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: IconView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: IconView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "realize", callback: (($obj: IconView) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "show", callback: (($obj: IconView) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: IconView, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: IconView, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: IconView) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: IconView) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: IconView) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::activate-on-single-click", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activate-on-single-click", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::column-spacing", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::column-spacing", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::columns", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::columns", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::item-orientation", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::item-orientation", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::item-padding", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::item-padding", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::item-width", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::item-width", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::markup-column", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::markup-column", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixbuf-column", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixbuf-column", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reorderable", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reorderable", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-spacing", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-spacing", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-mode", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-mode", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spacing", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spacing", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-column", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-column", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-column", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-column", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscroll-policy", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscroll-policy", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscroll-policy", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscroll-policy", callback: (($obj: IconView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IconView_ConstructProps)
    _init (config?: IconView_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): IconView
    static new_with_area(area: CellArea): IconView
    static new_with_model(model: TreeModel): IconView
    static $gtype: GObject.Type
}
export interface Image_ConstructProps extends Widget_ConstructProps {
    file?: string
    gicon?: Gio.Icon
    icon_name?: string
    icon_size?: IconSize
    paintable?: Gdk.Paintable
    pixel_size?: number
    resource?: string
    use_fallback?: boolean
    accessible_role?: AccessibleRole
}
export class Image {
    /* Properties of Gtk.Image */
    file: string
    gicon: Gio.Icon
    icon_name: string
    icon_size: IconSize
    paintable: Gdk.Paintable
    pixel_size: number
    resource: string
    readonly storage_type: ImageType
    use_fallback: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Image */
    clear(): void
    get_gicon(): Gio.Icon | null
    get_icon_name(): string | null
    get_icon_size(): IconSize
    get_paintable(): Gdk.Paintable | null
    get_pixel_size(): number
    get_storage_type(): ImageType
    set_from_file(filename?: string | null): void
    set_from_gicon(icon: Gio.Icon): void
    set_from_icon_name(icon_name?: string | null): void
    set_from_paintable(paintable?: Gdk.Paintable | null): void
    set_from_pixbuf(pixbuf?: GdkPixbuf.Pixbuf | null): void
    set_from_resource(resource_path?: string | null): void
    set_icon_size(icon_size: IconSize): void
    set_pixel_size(pixel_size: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Image) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Image) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Image, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Image, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Image) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Image) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Image, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Image, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Image) => void)): number
    connect_after(sigName: "map", callback: (($obj: Image) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Image, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Image, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Image, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Image, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Image, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Image, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Image) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Image) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Image) => void)): number
    connect_after(sigName: "show", callback: (($obj: Image) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Image, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Image, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Image) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Image) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Image) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Image) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::file", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gicon", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gicon", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-size", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-size", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paintable", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paintable", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixel-size", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixel-size", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resource", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resource", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::storage-type", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::storage-type", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-fallback", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-fallback", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Image, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Image_ConstructProps)
    _init (config?: Image_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Image
    static new_from_file(filename: string): Image
    static new_from_gicon(icon: Gio.Icon): Image
    static new_from_icon_name(icon_name?: string | null): Image
    static new_from_paintable(paintable?: Gdk.Paintable | null): Image
    static new_from_pixbuf(pixbuf?: GdkPixbuf.Pixbuf | null): Image
    static new_from_resource(resource_path: string): Image
    static $gtype: GObject.Type
}
export interface InfoBar_ConstructProps extends Widget_ConstructProps {
    message_type?: MessageType
    revealed?: boolean
    show_close_button?: boolean
    accessible_role?: AccessibleRole
}
export class InfoBar {
    /* Properties of Gtk.InfoBar */
    message_type: MessageType
    revealed: boolean
    show_close_button: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.InfoBar */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Button
    add_child(widget: Widget): void
    get_message_type(): MessageType
    get_revealed(): boolean
    get_show_close_button(): boolean
    remove_action_widget(widget: Widget): void
    remove_child(widget: Widget): void
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_message_type(message_type: MessageType): void
    set_response_sensitive(response_id: number, setting: boolean): void
    set_revealed(revealed: boolean): void
    set_show_close_button(setting: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.InfoBar */
    connect(sigName: "close", callback: (($obj: InfoBar) => void)): number
    connect_after(sigName: "close", callback: (($obj: InfoBar) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: InfoBar, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: InfoBar, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: InfoBar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: InfoBar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: InfoBar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: InfoBar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: InfoBar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: InfoBar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: InfoBar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: InfoBar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: InfoBar) => void)): number
    connect_after(sigName: "map", callback: (($obj: InfoBar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: InfoBar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: InfoBar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: InfoBar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: InfoBar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: InfoBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: InfoBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: InfoBar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: InfoBar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: InfoBar) => void)): number
    connect_after(sigName: "show", callback: (($obj: InfoBar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: InfoBar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: InfoBar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: InfoBar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: InfoBar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: InfoBar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: InfoBar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::message-type", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::message-type", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::revealed", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::revealed", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-close-button", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-close-button", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: InfoBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: InfoBar_ConstructProps)
    _init (config?: InfoBar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): InfoBar
    static $gtype: GObject.Type
}
export interface KeyvalTrigger_ConstructProps extends ShortcutTrigger_ConstructProps {
    keyval?: number
    modifiers?: Gdk.ModifierType
}
export class KeyvalTrigger {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.KeyvalTrigger */
    get_keyval(): number
    get_modifiers(): Gdk.ModifierType
    /* Methods of Gtk.ShortcutTrigger */
    compare(trigger2: ShortcutTrigger): number
    equal(trigger2: ShortcutTrigger): boolean
    hash(): number
    print(string: GLib.String): void
    print_label(display: Gdk.Display, string: GLib.String): boolean
    to_label(display: Gdk.Display): string
    to_string(): string
    trigger(event: Gdk.Event, enable_mnemonics: boolean): Gdk.KeyMatch
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: KeyvalTrigger, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: KeyvalTrigger, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: KeyvalTrigger_ConstructProps)
    _init (config?: KeyvalTrigger_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(keyval: number, modifiers: Gdk.ModifierType): KeyvalTrigger
    static $gtype: GObject.Type
}
export interface Label_ConstructProps extends Widget_ConstructProps {
    attributes?: Pango.AttrList
    ellipsize?: Pango.EllipsizeMode
    extra_menu?: Gio.MenuModel
    justify?: Justification
    label?: string
    lines?: number
    max_width_chars?: number
    mnemonic_widget?: Widget
    selectable?: boolean
    single_line_mode?: boolean
    use_markup?: boolean
    use_underline?: boolean
    width_chars?: number
    wrap?: boolean
    wrap_mode?: Pango.WrapMode
    xalign?: number
    yalign?: number
    accessible_role?: AccessibleRole
}
export class Label {
    /* Properties of Gtk.Label */
    attributes: Pango.AttrList
    ellipsize: Pango.EllipsizeMode
    extra_menu: Gio.MenuModel
    justify: Justification
    label: string
    lines: number
    max_width_chars: number
    readonly mnemonic_keyval: number
    mnemonic_widget: Widget
    selectable: boolean
    single_line_mode: boolean
    use_markup: boolean
    use_underline: boolean
    width_chars: number
    wrap: boolean
    wrap_mode: Pango.WrapMode
    xalign: number
    yalign: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Label */
    get_attributes(): Pango.AttrList | null
    get_current_uri(): string | null
    get_ellipsize(): Pango.EllipsizeMode
    get_extra_menu(): Gio.MenuModel | null
    get_justify(): Justification
    get_label(): string
    get_layout(): Pango.Layout
    get_layout_offsets(): [ /* x */ number | null, /* y */ number | null ]
    get_lines(): number
    get_max_width_chars(): number
    get_mnemonic_keyval(): number
    get_mnemonic_widget(): Widget | null
    get_selectable(): boolean
    get_selection_bounds(): [ /* returnType */ boolean, /* start */ number, /* end */ number ]
    get_single_line_mode(): boolean
    get_text(): string
    get_use_markup(): boolean
    get_use_underline(): boolean
    get_width_chars(): number
    get_wrap(): boolean
    get_wrap_mode(): Pango.WrapMode
    get_xalign(): number
    get_yalign(): number
    select_region(start_offset: number, end_offset: number): void
    set_attributes(attrs?: Pango.AttrList | null): void
    set_ellipsize(mode: Pango.EllipsizeMode): void
    set_extra_menu(model?: Gio.MenuModel | null): void
    set_justify(jtype: Justification): void
    set_label(str: string): void
    set_lines(lines: number): void
    set_markup(str: string): void
    set_markup_with_mnemonic(str: string): void
    set_max_width_chars(n_chars: number): void
    set_mnemonic_widget(widget?: Widget | null): void
    set_selectable(setting: boolean): void
    set_single_line_mode(single_line_mode: boolean): void
    set_text(str: string): void
    set_text_with_mnemonic(str: string): void
    set_use_markup(setting: boolean): void
    set_use_underline(setting: boolean): void
    set_width_chars(n_chars: number): void
    set_wrap(wrap: boolean): void
    set_wrap_mode(wrap_mode: Pango.WrapMode): void
    set_xalign(xalign: number): void
    set_yalign(yalign: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Label */
    connect(sigName: "activate-current-link", callback: (($obj: Label) => void)): number
    connect_after(sigName: "activate-current-link", callback: (($obj: Label) => void)): number
    emit(sigName: "activate-current-link"): void
    connect(sigName: "activate-link", callback: (($obj: Label, uri: string) => boolean)): number
    connect_after(sigName: "activate-link", callback: (($obj: Label, uri: string) => boolean)): number
    emit(sigName: "activate-link", uri: string): void
    connect(sigName: "copy-clipboard", callback: (($obj: Label) => void)): number
    connect_after(sigName: "copy-clipboard", callback: (($obj: Label) => void)): number
    emit(sigName: "copy-clipboard"): void
    connect(sigName: "move-cursor", callback: (($obj: Label, step: MovementStep, count: number, extend_selection: boolean) => void)): number
    connect_after(sigName: "move-cursor", callback: (($obj: Label, step: MovementStep, count: number, extend_selection: boolean) => void)): number
    emit(sigName: "move-cursor", step: MovementStep, count: number, extend_selection: boolean): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Label) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Label) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Label, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Label, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Label) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Label) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Label, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Label, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Label) => void)): number
    connect_after(sigName: "map", callback: (($obj: Label) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Label, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Label, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Label, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Label, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Label, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Label, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Label) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Label) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Label) => void)): number
    connect_after(sigName: "show", callback: (($obj: Label) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Label, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Label, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Label) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Label) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Label) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Label) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attributes", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ellipsize", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::extra-menu", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extra-menu", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::justify", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::justify", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lines", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lines", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonic-keyval", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonic-keyval", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonic-widget", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonic-widget", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selectable", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selectable", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-line-mode", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-line-mode", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-markup", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-markup", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-mode", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-mode", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::yalign", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::yalign", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Label, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Label_ConstructProps)
    _init (config?: Label_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(str?: string | null): Label
    static new_with_mnemonic(str?: string | null): Label
    static $gtype: GObject.Type
}
export interface LayoutChild_ConstructProps extends GObject.Object_ConstructProps {
    child_widget?: Widget
    layout_manager?: LayoutManager
}
export class LayoutChild {
    /* Fields of Gtk.LayoutChild */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LayoutChild */
    get_child_widget(): Widget
    get_layout_manager(): LayoutManager
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: LayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: LayoutChild, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: LayoutChild_ConstructProps)
    _init (config?: LayoutChild_ConstructProps): void
    static $gtype: GObject.Type
}
export interface LayoutManager_ConstructProps extends GObject.Object_ConstructProps {
}
export class LayoutManager {
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: LayoutManager, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: LayoutManager, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: LayoutManager_ConstructProps)
    _init (config?: LayoutManager_ConstructProps): void
    static $gtype: GObject.Type
}
export interface LevelBar_ConstructProps extends Widget_ConstructProps {
    inverted?: boolean
    max_value?: number
    min_value?: number
    mode?: LevelBarMode
    value?: number
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class LevelBar {
    /* Properties of Gtk.LevelBar */
    inverted: boolean
    max_value: number
    min_value: number
    mode: LevelBarMode
    value: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LevelBar */
    add_offset_value(name: string, value: number): void
    get_inverted(): boolean
    get_max_value(): number
    get_min_value(): number
    get_mode(): LevelBarMode
    get_offset_value(name?: string | null): [ /* returnType */ boolean, /* value */ number ]
    get_value(): number
    remove_offset_value(name?: string | null): void
    set_inverted(inverted: boolean): void
    set_max_value(value: number): void
    set_min_value(value: number): void
    set_mode(mode: LevelBarMode): void
    set_value(value: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.LevelBar */
    connect(sigName: "offset-changed", callback: (($obj: LevelBar, name: string) => void)): number
    connect_after(sigName: "offset-changed", callback: (($obj: LevelBar, name: string) => void)): number
    emit(sigName: "offset-changed", name: string): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: LevelBar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: LevelBar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: LevelBar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: LevelBar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: LevelBar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: LevelBar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: LevelBar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: LevelBar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: LevelBar) => void)): number
    connect_after(sigName: "map", callback: (($obj: LevelBar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: LevelBar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: LevelBar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: LevelBar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: LevelBar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: LevelBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: LevelBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: LevelBar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: LevelBar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: LevelBar) => void)): number
    connect_after(sigName: "show", callback: (($obj: LevelBar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: LevelBar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: LevelBar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: LevelBar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: LevelBar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: LevelBar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: LevelBar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::inverted", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inverted", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-value", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-value", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-value", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-value", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: LevelBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: LevelBar_ConstructProps)
    _init (config?: LevelBar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): LevelBar
    static new_for_interval(min_value: number, max_value: number): LevelBar
    static $gtype: GObject.Type
}
export interface LinkButton_ConstructProps extends Button_ConstructProps {
    uri?: string
    visited?: boolean
    accessible_role?: AccessibleRole
    action_name?: string
    action_target?: GLib.Variant
}
export class LinkButton {
    /* Properties of Gtk.LinkButton */
    uri: string
    visited: boolean
    /* Properties of Gtk.Button */
    child: Widget
    has_frame: boolean
    icon_name: string
    label: string
    use_underline: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Actionable */
    action_name: string
    action_target: GLib.Variant
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LinkButton */
    get_uri(): string
    get_visited(): boolean
    set_uri(uri: string): void
    set_visited(visited: boolean): void
    /* Methods of Gtk.Button */
    get_child(): Widget | null
    get_has_frame(): boolean
    get_icon_name(): string | null
    get_label(): string | null
    get_use_underline(): boolean
    set_child(child?: Widget | null): void
    set_has_frame(has_frame: boolean): void
    set_icon_name(icon_name: string): void
    set_label(label: string): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant | null
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value?: GLib.Variant | null): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Button */
    vfunc_activate(): void
    vfunc_clicked(): void
    vfunc_get_action_name(): string | null
    vfunc_get_action_target_value(): GLib.Variant | null
    vfunc_set_action_name(action_name?: string | null): void
    vfunc_set_action_target_value(target_value?: GLib.Variant | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.LinkButton */
    connect(sigName: "activate-link", callback: (($obj: LinkButton) => boolean)): number
    connect_after(sigName: "activate-link", callback: (($obj: LinkButton) => boolean)): number
    emit(sigName: "activate-link"): void
    /* Signals of Gtk.Button */
    connect(sigName: "activate", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "activate", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "clicked", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "clicked", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "clicked"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: LinkButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: LinkButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: LinkButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: LinkButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: LinkButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: LinkButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: LinkButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: LinkButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: LinkButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: LinkButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: LinkButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: LinkButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: LinkButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: LinkButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::uri", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visited", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visited", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-name", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-target", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-target", callback: (($obj: LinkButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: LinkButton_ConstructProps)
    _init (config?: LinkButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(uri: string): LinkButton
    static new(): LinkButton
    static new_with_label(uri: string, label?: string | null): LinkButton
    static new_with_label(label: string): LinkButton
    static $gtype: GObject.Type
}
export interface ListBase_ConstructProps extends Widget_ConstructProps {
    orientation?: Orientation
    accessible_role?: AccessibleRole
    hadjustment?: Adjustment
    hscroll_policy?: ScrollablePolicy
    vadjustment?: Adjustment
    vscroll_policy?: ScrollablePolicy
}
export class ListBase {
    /* Properties of Gtk.ListBase */
    orientation: Orientation
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.ListBase */
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ListBase) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ListBase) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ListBase, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ListBase, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ListBase) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ListBase) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ListBase, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ListBase, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ListBase) => void)): number
    connect_after(sigName: "map", callback: (($obj: ListBase) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ListBase, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ListBase, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ListBase, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ListBase, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ListBase, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ListBase, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ListBase) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ListBase) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ListBase) => void)): number
    connect_after(sigName: "show", callback: (($obj: ListBase) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ListBase, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ListBase, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ListBase) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ListBase) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ListBase) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ListBase) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscroll-policy", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscroll-policy", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscroll-policy", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscroll-policy", callback: (($obj: ListBase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ListBase_ConstructProps)
    _init (config?: ListBase_ConstructProps): void
    static $gtype: GObject.Type
}
export interface ListBox_ConstructProps extends Widget_ConstructProps {
    accept_unpaired_release?: boolean
    activate_on_single_click?: boolean
    selection_mode?: SelectionMode
    show_separators?: boolean
    accessible_role?: AccessibleRole
}
export class ListBox {
    /* Properties of Gtk.ListBox */
    accept_unpaired_release: boolean
    activate_on_single_click: boolean
    selection_mode: SelectionMode
    show_separators: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ListBox */
    append(child: Widget): void
    bind_model(model: Gio.ListModel | null, create_widget_func: ListBoxCreateWidgetFunc | null): void
    drag_highlight_row(row: ListBoxRow): void
    drag_unhighlight_row(): void
    get_activate_on_single_click(): boolean
    get_adjustment(): Adjustment
    get_row_at_index(index_: number): ListBoxRow | null
    get_row_at_y(y: number): ListBoxRow | null
    get_selected_row(): ListBoxRow | null
    get_selected_rows(): ListBoxRow[]
    get_selection_mode(): SelectionMode
    get_show_separators(): boolean
    insert(child: Widget, position: number): void
    invalidate_filter(): void
    invalidate_headers(): void
    invalidate_sort(): void
    prepend(child: Widget): void
    remove(child: Widget): void
    select_all(): void
    select_row(row?: ListBoxRow | null): void
    selected_foreach(func: ListBoxForeachFunc): void
    set_activate_on_single_click(single: boolean): void
    set_adjustment(adjustment?: Adjustment | null): void
    set_filter_func(filter_func: ListBoxFilterFunc | null): void
    set_header_func(update_header: ListBoxUpdateHeaderFunc | null): void
    set_placeholder(placeholder?: Widget | null): void
    set_selection_mode(mode: SelectionMode): void
    set_show_separators(show_separators: boolean): void
    set_sort_func(sort_func: ListBoxSortFunc | null): void
    unselect_all(): void
    unselect_row(row: ListBoxRow): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ListBox */
    connect(sigName: "activate-cursor-row", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "activate-cursor-row", callback: (($obj: ListBox) => void)): number
    emit(sigName: "activate-cursor-row"): void
    connect(sigName: "move-cursor", callback: (($obj: ListBox, object: MovementStep, p0: number, p1: boolean, p2: boolean) => void)): number
    connect_after(sigName: "move-cursor", callback: (($obj: ListBox, object: MovementStep, p0: number, p1: boolean, p2: boolean) => void)): number
    emit(sigName: "move-cursor", object: MovementStep, p0: number, p1: boolean, p2: boolean): void
    connect(sigName: "row-activated", callback: (($obj: ListBox, row: ListBoxRow) => void)): number
    connect_after(sigName: "row-activated", callback: (($obj: ListBox, row: ListBoxRow) => void)): number
    emit(sigName: "row-activated", row: ListBoxRow): void
    connect(sigName: "row-selected", callback: (($obj: ListBox, row?: ListBoxRow | null) => void)): number
    connect_after(sigName: "row-selected", callback: (($obj: ListBox, row?: ListBoxRow | null) => void)): number
    emit(sigName: "row-selected", row?: ListBoxRow | null): void
    connect(sigName: "select-all", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "select-all", callback: (($obj: ListBox) => void)): number
    emit(sigName: "select-all"): void
    connect(sigName: "selected-rows-changed", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "selected-rows-changed", callback: (($obj: ListBox) => void)): number
    emit(sigName: "selected-rows-changed"): void
    connect(sigName: "toggle-cursor-row", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "toggle-cursor-row", callback: (($obj: ListBox) => void)): number
    emit(sigName: "toggle-cursor-row"): void
    connect(sigName: "unselect-all", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "unselect-all", callback: (($obj: ListBox) => void)): number
    emit(sigName: "unselect-all"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ListBox) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ListBox, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ListBox, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ListBox) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ListBox, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ListBox, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "map", callback: (($obj: ListBox) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ListBox, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ListBox, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ListBox, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ListBox, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ListBox, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ListBox, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ListBox) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "show", callback: (($obj: ListBox) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ListBox, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ListBox, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ListBox) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ListBox) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ListBox) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accept-unpaired-release", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accept-unpaired-release", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::activate-on-single-click", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activate-on-single-click", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-mode", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-mode", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-separators", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-separators", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ListBox, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ListBox_ConstructProps)
    _init (config?: ListBox_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ListBox
    static $gtype: GObject.Type
}
export interface ListBoxRow_ConstructProps extends Widget_ConstructProps {
    activatable?: boolean
    child?: Widget
    selectable?: boolean
    accessible_role?: AccessibleRole
    action_name?: string
    action_target?: GLib.Variant
}
export class ListBoxRow {
    /* Properties of Gtk.ListBoxRow */
    activatable: boolean
    child: Widget
    selectable: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Actionable */
    action_name: string
    action_target: GLib.Variant
    /* Fields of Gtk.ListBoxRow */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ListBoxRow */
    changed(): void
    get_activatable(): boolean
    get_child(): Widget | null
    get_header(): Widget | null
    get_index(): number
    get_selectable(): boolean
    is_selected(): boolean
    set_activatable(activatable: boolean): void
    set_child(child?: Widget | null): void
    set_header(header?: Widget | null): void
    set_selectable(selectable: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant | null
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value?: GLib.Variant | null): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.ListBoxRow */
    vfunc_activate(): void
    vfunc_get_action_name(): string | null
    vfunc_get_action_target_value(): GLib.Variant | null
    vfunc_set_action_name(action_name?: string | null): void
    vfunc_set_action_target_value(target_value?: GLib.Variant | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ListBoxRow */
    connect(sigName: "activate", callback: (($obj: ListBoxRow) => void)): number
    connect_after(sigName: "activate", callback: (($obj: ListBoxRow) => void)): number
    emit(sigName: "activate"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ListBoxRow) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ListBoxRow) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ListBoxRow, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ListBoxRow, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ListBoxRow) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ListBoxRow) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ListBoxRow, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ListBoxRow, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ListBoxRow) => void)): number
    connect_after(sigName: "map", callback: (($obj: ListBoxRow) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ListBoxRow, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ListBoxRow, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ListBoxRow, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ListBoxRow, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ListBoxRow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ListBoxRow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ListBoxRow) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ListBoxRow) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ListBoxRow) => void)): number
    connect_after(sigName: "show", callback: (($obj: ListBoxRow) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ListBoxRow, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ListBoxRow, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ListBoxRow) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ListBoxRow) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ListBoxRow) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ListBoxRow) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::activatable", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activatable", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selectable", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selectable", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-name", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-target", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-target", callback: (($obj: ListBoxRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ListBoxRow_ConstructProps)
    _init (config?: ListBoxRow_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ListBoxRow
    static $gtype: GObject.Type
}
export interface ListItem_ConstructProps extends GObject.Object_ConstructProps {
    activatable?: boolean
    child?: Widget
    selectable?: boolean
}
export class ListItem {
    /* Properties of Gtk.ListItem */
    activatable: boolean
    child: Widget
    readonly item: GObject.Object
    readonly position: number
    selectable: boolean
    readonly selected: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ListItem */
    get_activatable(): boolean
    get_child(): Widget | null
    get_item(): GObject.Object | null
    get_position(): number
    get_selectable(): boolean
    get_selected(): boolean
    set_activatable(activatable: boolean): void
    set_child(child?: Widget | null): void
    set_selectable(selectable: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::activatable", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activatable", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::item", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::item", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::position", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::position", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selectable", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selectable", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected", callback: (($obj: ListItem, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ListItem_ConstructProps)
    _init (config?: ListItem_ConstructProps): void
    static $gtype: GObject.Type
}
export interface ListItemFactory_ConstructProps extends GObject.Object_ConstructProps {
}
export class ListItemFactory {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ListItemFactory, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ListItemFactory, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ListItemFactory_ConstructProps)
    _init (config?: ListItemFactory_ConstructProps): void
    static $gtype: GObject.Type
}
export interface ListStore_ConstructProps extends GObject.Object_ConstructProps {
}
export class ListStore {
    /* Fields of Gtk.ListStore */
    parent: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ListStore */
    append(): /* iter */ TreeIter
    clear(): void
    insert(position: number): /* iter */ TreeIter
    insert_after(sibling?: TreeIter | null): /* iter */ TreeIter
    insert_before(sibling?: TreeIter | null): /* iter */ TreeIter
    insert_with_values(position: number, columns: number[], values: any): /* iter */ TreeIter | null
    iter_is_valid(iter: TreeIter): boolean
    move_after(iter: TreeIter, position?: TreeIter | null): void
    move_before(iter: TreeIter, position?: TreeIter | null): void
    prepend(): /* iter */ TreeIter
    remove(iter: TreeIter): boolean
    reorder(new_order: number[]): void
    set_column_types(types: GObject.Type[]): void
    set_value(iter: TreeIter, column: number, value: any): void
    set(iter: TreeIter, columns: number[], values: any): void
    swap(a: TreeIter, b: TreeIter): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.TreeDragDest */
    drag_data_received(dest: TreePath, value: any): boolean
    row_drop_possible(dest_path: TreePath, value: any): boolean
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath): Gdk.ContentProvider | null
    row_draggable(path: TreePath): boolean
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): GObject.Type
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string | null
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    unref_node(iter: TreeIter): void
    /* Methods of Gtk.TreeSortable */
    get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    has_default_sort_func(): boolean
    set_default_sort_func(sort_func: TreeIterCompareFunc): void
    set_sort_column_id(sort_column_id: number, order: SortType): void
    set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc): void
    sort_column_changed(): void
    /* Virtual methods of Gtk.ListStore */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    vfunc_drag_data_received(dest: TreePath, value: any): boolean
    vfunc_row_drop_possible(dest_path: TreePath, value: any): boolean
    vfunc_drag_data_delete(path: TreePath): boolean
    vfunc_drag_data_get(path: TreePath): Gdk.ContentProvider | null
    vfunc_row_draggable(path: TreePath): boolean
    vfunc_get_column_type(index_: number): GObject.Type
    vfunc_get_flags(): TreeModelFlags
    vfunc_get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_get_n_columns(): number
    vfunc_get_path(iter: TreeIter): TreePath
    vfunc_get_value(iter: TreeIter, column: number): /* value */ any
    vfunc_iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_has_child(iter: TreeIter): boolean
    vfunc_iter_n_children(iter?: TreeIter | null): number
    vfunc_iter_next(iter: TreeIter): boolean
    vfunc_iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_previous(iter: TreeIter): boolean
    vfunc_ref_node(iter: TreeIter): void
    vfunc_row_changed(path: TreePath, iter: TreeIter): void
    vfunc_row_deleted(path: TreePath): void
    vfunc_row_has_child_toggled(path: TreePath, iter: TreeIter): void
    vfunc_row_inserted(path: TreePath, iter: TreeIter): void
    vfunc_unref_node(iter: TreeIter): void
    vfunc_get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    vfunc_has_default_sort_func(): boolean
    vfunc_set_default_sort_func(sort_func: TreeIterCompareFunc): void
    vfunc_set_sort_column_id(sort_column_id: number, order: SortType): void
    vfunc_set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc): void
    vfunc_sort_column_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ListStore, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ListStore, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: (($obj: ListStore, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-changed", callback: (($obj: ListStore, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-changed", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-deleted", callback: (($obj: ListStore, path: TreePath) => void)): number
    connect_after(sigName: "row-deleted", callback: (($obj: ListStore, path: TreePath) => void)): number
    emit(sigName: "row-deleted", path: TreePath): void
    connect(sigName: "row-has-child-toggled", callback: (($obj: ListStore, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-has-child-toggled", callback: (($obj: ListStore, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-has-child-toggled", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-inserted", callback: (($obj: ListStore, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-inserted", callback: (($obj: ListStore, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-inserted", path: TreePath, iter: TreeIter): void
    connect(sigName: "rows-reordered", callback: (($obj: ListStore, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    connect_after(sigName: "rows-reordered", callback: (($obj: ListStore, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    emit(sigName: "rows-reordered", path: TreePath, iter: TreeIter, new_order?: object | null): void
    /* Signals of Gtk.TreeSortable */
    connect(sigName: "sort-column-changed", callback: (($obj: ListStore) => void)): number
    connect_after(sigName: "sort-column-changed", callback: (($obj: ListStore) => void)): number
    emit(sigName: "sort-column-changed"): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ListStore_ConstructProps)
    _init (config?: ListStore_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(types: GObject.Type[]): ListStore
    static $gtype: GObject.Type
}
export interface ListView_ConstructProps extends ListBase_ConstructProps {
    enable_rubberband?: boolean
    factory?: ListItemFactory
    model?: SelectionModel
    show_separators?: boolean
    single_click_activate?: boolean
    accessible_role?: AccessibleRole
    orientation?: Orientation
    hadjustment?: Adjustment
    hscroll_policy?: ScrollablePolicy
    vadjustment?: Adjustment
    vscroll_policy?: ScrollablePolicy
}
export class ListView {
    /* Properties of Gtk.ListView */
    enable_rubberband: boolean
    factory: ListItemFactory
    model: SelectionModel
    show_separators: boolean
    single_click_activate: boolean
    /* Properties of Gtk.ListBase */
    orientation: Orientation
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ListView */
    get_enable_rubberband(): boolean
    get_factory(): ListItemFactory | null
    get_model(): SelectionModel | null
    get_show_separators(): boolean
    get_single_click_activate(): boolean
    set_enable_rubberband(enable_rubberband: boolean): void
    set_factory(factory?: ListItemFactory | null): void
    set_model(model?: SelectionModel | null): void
    set_show_separators(show_separators: boolean): void
    set_single_click_activate(single_click_activate: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.ListBase */
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ListView */
    connect(sigName: "activate", callback: (($obj: ListView, position: number) => void)): number
    connect_after(sigName: "activate", callback: (($obj: ListView, position: number) => void)): number
    emit(sigName: "activate", position: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ListView) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ListView) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ListView, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ListView, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ListView) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ListView) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ListView, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ListView, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ListView) => void)): number
    connect_after(sigName: "map", callback: (($obj: ListView) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ListView, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ListView, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ListView, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ListView, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ListView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ListView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ListView) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ListView) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ListView) => void)): number
    connect_after(sigName: "show", callback: (($obj: ListView) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ListView, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ListView, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ListView) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ListView) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ListView) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ListView) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::enable-rubberband", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-rubberband", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::factory", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::factory", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-separators", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-separators", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-click-activate", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-click-activate", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscroll-policy", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscroll-policy", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscroll-policy", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscroll-policy", callback: (($obj: ListView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ListView_ConstructProps)
    _init (config?: ListView_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: SelectionModel | null, factory?: ListItemFactory | null): ListView
    static $gtype: GObject.Type
}
export interface LockButton_ConstructProps extends Button_ConstructProps {
    permission?: Gio.Permission
    text_lock?: string
    text_unlock?: string
    tooltip_lock?: string
    tooltip_not_authorized?: string
    tooltip_unlock?: string
    accessible_role?: AccessibleRole
    action_name?: string
    action_target?: GLib.Variant
}
export class LockButton {
    /* Properties of Gtk.LockButton */
    permission: Gio.Permission
    text_lock: string
    text_unlock: string
    tooltip_lock: string
    tooltip_not_authorized: string
    tooltip_unlock: string
    /* Properties of Gtk.Button */
    child: Widget
    has_frame: boolean
    icon_name: string
    label: string
    use_underline: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Actionable */
    action_name: string
    action_target: GLib.Variant
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LockButton */
    get_permission(): Gio.Permission
    set_permission(permission?: Gio.Permission | null): void
    /* Methods of Gtk.Button */
    get_child(): Widget | null
    get_has_frame(): boolean
    get_icon_name(): string | null
    get_label(): string | null
    get_use_underline(): boolean
    set_child(child?: Widget | null): void
    set_has_frame(has_frame: boolean): void
    set_icon_name(icon_name: string): void
    set_label(label: string): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant | null
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value?: GLib.Variant | null): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Button */
    vfunc_activate(): void
    vfunc_clicked(): void
    vfunc_get_action_name(): string | null
    vfunc_get_action_target_value(): GLib.Variant | null
    vfunc_set_action_name(action_name?: string | null): void
    vfunc_set_action_target_value(target_value?: GLib.Variant | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Button */
    connect(sigName: "activate", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "activate", callback: (($obj: LockButton) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "clicked", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "clicked", callback: (($obj: LockButton) => void)): number
    emit(sigName: "clicked"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: LockButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: LockButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: LockButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: LockButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: LockButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: LockButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: LockButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: LockButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: LockButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: LockButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: LockButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: LockButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: LockButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: LockButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: LockButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: LockButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: LockButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: LockButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: LockButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: LockButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::permission", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::permission", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-lock", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-lock", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-unlock", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-unlock", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-lock", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-lock", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-not-authorized", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-not-authorized", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-unlock", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-unlock", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-name", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-target", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-target", callback: (($obj: LockButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: LockButton_ConstructProps)
    _init (config?: LockButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(permission?: Gio.Permission | null): LockButton
    static new(): LockButton
    static $gtype: GObject.Type
}
export interface MapListModel_ConstructProps extends GObject.Object_ConstructProps {
    model?: Gio.ListModel
}
export class MapListModel {
    /* Properties of Gtk.MapListModel */
    readonly has_map: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MapListModel */
    get_model(): Gio.ListModel | null
    set_map_func(map_func: MapListModelMapFunc | null): void
    set_model(model?: Gio.ListModel | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.MapListModel */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MapListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MapListModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: MapListModel, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: MapListModel, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::has-map", callback: (($obj: MapListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-map", callback: (($obj: MapListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MapListModel_ConstructProps)
    _init (config?: MapListModel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model: Gio.ListModel | null, map_func: MapListModelMapFunc | null): MapListModel
    static $gtype: GObject.Type
}
export interface MediaControls_ConstructProps extends Widget_ConstructProps {
    media_stream?: MediaStream
    accessible_role?: AccessibleRole
}
export class MediaControls {
    /* Properties of Gtk.MediaControls */
    media_stream: MediaStream
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MediaControls */
    get_media_stream(): MediaStream | null
    set_media_stream(stream?: MediaStream | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: MediaControls) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: MediaControls) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: MediaControls, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: MediaControls, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: MediaControls) => void)): number
    connect_after(sigName: "hide", callback: (($obj: MediaControls) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: MediaControls, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: MediaControls, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: MediaControls) => void)): number
    connect_after(sigName: "map", callback: (($obj: MediaControls) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: MediaControls, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: MediaControls, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: MediaControls, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: MediaControls, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: MediaControls, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: MediaControls, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: MediaControls) => void)): number
    connect_after(sigName: "realize", callback: (($obj: MediaControls) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: MediaControls) => void)): number
    connect_after(sigName: "show", callback: (($obj: MediaControls) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: MediaControls, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: MediaControls, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: MediaControls) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: MediaControls) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: MediaControls) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: MediaControls) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::media-stream", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-stream", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: MediaControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MediaControls_ConstructProps)
    _init (config?: MediaControls_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(stream?: MediaStream | null): MediaControls
    static $gtype: GObject.Type
}
export interface MediaFile_ConstructProps extends MediaStream_ConstructProps {
    file?: Gio.File
    input_stream?: Gio.InputStream
}
export class MediaFile {
    /* Properties of Gtk.MediaFile */
    file: Gio.File
    input_stream: Gio.InputStream
    /* Properties of Gtk.MediaStream */
    readonly duration: number
    readonly ended: boolean
    readonly error: GLib.Error
    readonly has_audio: boolean
    readonly has_video: boolean
    loop: boolean
    muted: boolean
    playing: boolean
    prepared: boolean
    readonly seekable: boolean
    readonly seeking: boolean
    readonly timestamp: number
    volume: number
    /* Fields of Gtk.MediaFile */
    parent_instance: MediaStream
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MediaFile */
    clear(): void
    get_file(): Gio.File | null
    get_input_stream(): Gio.InputStream | null
    set_file(file?: Gio.File | null): void
    set_filename(filename?: string | null): void
    set_input_stream(stream?: Gio.InputStream | null): void
    set_resource(resource_path?: string | null): void
    /* Methods of Gtk.MediaStream */
    gerror(error: GLib.Error): void
    get_duration(): number
    get_ended(): boolean
    get_error(): GLib.Error | null
    get_loop(): boolean
    get_muted(): boolean
    get_playing(): boolean
    get_timestamp(): number
    get_volume(): number
    is_prepared(): boolean
    is_seekable(): boolean
    is_seeking(): boolean
    pause(): void
    play(): void
    realize(surface: Gdk.Surface): void
    seek(timestamp: number): void
    seek_failed(): void
    seek_success(): void
    set_loop(loop: boolean): void
    set_muted(muted: boolean): void
    set_playing(playing: boolean): void
    set_volume(volume: number): void
    unprepared(): void
    unrealize(surface: Gdk.Surface): void
    update(timestamp: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gdk.Paintable */
    compute_concrete_size(specified_width: number, specified_height: number, default_width: number, default_height: number): [ /* concrete_width */ number, /* concrete_height */ number ]
    get_current_image(): Gdk.Paintable
    get_flags(): Gdk.PaintableFlags
    get_intrinsic_aspect_ratio(): number
    get_intrinsic_height(): number
    get_intrinsic_width(): number
    invalidate_contents(): void
    invalidate_size(): void
    snapshot(snapshot: Gdk.Snapshot, width: number, height: number): void
    /* Virtual methods of Gtk.MediaFile */
    vfunc_close(): void
    vfunc_open(): void
    /* Virtual methods of Gtk.MediaStream */
    vfunc_pause(): void
    vfunc_play(): boolean
    vfunc_realize(surface: Gdk.Surface): void
    vfunc_seek(timestamp: number): void
    vfunc_unrealize(surface: Gdk.Surface): void
    vfunc_update_audio(muted: boolean, volume: number): void
    vfunc_get_current_image(): Gdk.Paintable
    vfunc_get_flags(): Gdk.PaintableFlags
    vfunc_get_intrinsic_aspect_ratio(): number
    vfunc_get_intrinsic_height(): number
    vfunc_get_intrinsic_width(): number
    vfunc_snapshot(snapshot: Gdk.Snapshot, width: number, height: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gdk.Paintable */
    connect(sigName: "invalidate-contents", callback: (($obj: MediaFile) => void)): number
    connect_after(sigName: "invalidate-contents", callback: (($obj: MediaFile) => void)): number
    emit(sigName: "invalidate-contents"): void
    connect(sigName: "invalidate-size", callback: (($obj: MediaFile) => void)): number
    connect_after(sigName: "invalidate-size", callback: (($obj: MediaFile) => void)): number
    emit(sigName: "invalidate-size"): void
    connect(sigName: "notify::file", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-stream", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-stream", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::duration", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::duration", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ended", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ended", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::error", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::error", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-audio", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-audio", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-video", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-video", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loop", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loop", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::muted", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::muted", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::playing", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::playing", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prepared", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prepared", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seekable", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seekable", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seeking", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seeking", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::timestamp", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::timestamp", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::volume", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::volume", callback: (($obj: MediaFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MediaFile_ConstructProps)
    _init (config?: MediaFile_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): MediaFile
    static new_for_file(file: Gio.File): MediaFile
    static new_for_filename(filename: string): MediaFile
    static new_for_input_stream(stream: Gio.InputStream): MediaFile
    static new_for_resource(resource_path: string): MediaFile
    static $gtype: GObject.Type
}
export interface MediaStream_ConstructProps extends GObject.Object_ConstructProps {
    loop?: boolean
    muted?: boolean
    playing?: boolean
    prepared?: boolean
    volume?: number
}
export class MediaStream {
    /* Properties of Gtk.MediaStream */
    readonly duration: number
    readonly ended: boolean
    readonly error: GLib.Error
    readonly has_audio: boolean
    readonly has_video: boolean
    loop: boolean
    muted: boolean
    playing: boolean
    prepared: boolean
    readonly seekable: boolean
    readonly seeking: boolean
    readonly timestamp: number
    volume: number
    /* Fields of Gtk.MediaStream */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MediaStream */
    gerror(error: GLib.Error): void
    get_duration(): number
    get_ended(): boolean
    get_error(): GLib.Error | null
    get_loop(): boolean
    get_muted(): boolean
    get_playing(): boolean
    get_timestamp(): number
    get_volume(): number
    is_prepared(): boolean
    is_seekable(): boolean
    is_seeking(): boolean
    pause(): void
    play(): void
    realize(surface: Gdk.Surface): void
    seek(timestamp: number): void
    seek_failed(): void
    seek_success(): void
    set_loop(loop: boolean): void
    set_muted(muted: boolean): void
    set_playing(playing: boolean): void
    set_volume(volume: number): void
    unprepared(): void
    unrealize(surface: Gdk.Surface): void
    update(timestamp: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gdk.Paintable */
    compute_concrete_size(specified_width: number, specified_height: number, default_width: number, default_height: number): [ /* concrete_width */ number, /* concrete_height */ number ]
    get_current_image(): Gdk.Paintable
    get_flags(): Gdk.PaintableFlags
    get_intrinsic_aspect_ratio(): number
    get_intrinsic_height(): number
    get_intrinsic_width(): number
    invalidate_contents(): void
    invalidate_size(): void
    snapshot(snapshot: Gdk.Snapshot, width: number, height: number): void
    /* Virtual methods of Gtk.MediaStream */
    vfunc_pause(): void
    vfunc_play(): boolean
    vfunc_realize(surface: Gdk.Surface): void
    vfunc_seek(timestamp: number): void
    vfunc_unrealize(surface: Gdk.Surface): void
    vfunc_update_audio(muted: boolean, volume: number): void
    vfunc_get_current_image(): Gdk.Paintable
    vfunc_get_flags(): Gdk.PaintableFlags
    vfunc_get_intrinsic_aspect_ratio(): number
    vfunc_get_intrinsic_height(): number
    vfunc_get_intrinsic_width(): number
    vfunc_snapshot(snapshot: Gdk.Snapshot, width: number, height: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gdk.Paintable */
    connect(sigName: "invalidate-contents", callback: (($obj: MediaStream) => void)): number
    connect_after(sigName: "invalidate-contents", callback: (($obj: MediaStream) => void)): number
    emit(sigName: "invalidate-contents"): void
    connect(sigName: "invalidate-size", callback: (($obj: MediaStream) => void)): number
    connect_after(sigName: "invalidate-size", callback: (($obj: MediaStream) => void)): number
    emit(sigName: "invalidate-size"): void
    connect(sigName: "notify::duration", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::duration", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ended", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ended", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::error", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::error", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-audio", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-audio", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-video", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-video", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loop", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loop", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::muted", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::muted", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::playing", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::playing", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prepared", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prepared", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seekable", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seekable", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seeking", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seeking", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::timestamp", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::timestamp", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::volume", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::volume", callback: (($obj: MediaStream, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MediaStream_ConstructProps)
    _init (config?: MediaStream_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new_empty(intrinsic_width: number, intrinsic_height: number): Gdk.Paintable
    static $gtype: GObject.Type
}
export interface MenuButton_ConstructProps extends Widget_ConstructProps {
    direction?: ArrowType
    has_frame?: boolean
    icon_name?: string
    label?: string
    menu_model?: Gio.MenuModel
    popover?: Popover
    use_underline?: boolean
    accessible_role?: AccessibleRole
}
export class MenuButton {
    /* Properties of Gtk.MenuButton */
    direction: ArrowType
    has_frame: boolean
    icon_name: string
    label: string
    menu_model: Gio.MenuModel
    popover: Popover
    use_underline: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MenuButton */
    get_direction(): ArrowType
    get_has_frame(): boolean
    get_icon_name(): string
    get_label(): string
    get_menu_model(): Gio.MenuModel | null
    get_popover(): Popover | null
    get_use_underline(): boolean
    popdown(): void
    popup(): void
    set_create_popup_func(func?: MenuButtonCreatePopupFunc | null): void
    set_direction(direction: ArrowType): void
    set_has_frame(has_frame: boolean): void
    set_icon_name(icon_name: string): void
    set_label(label: string): void
    set_menu_model(menu_model?: Gio.MenuModel | null): void
    set_popover(popover?: Widget | null): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: MenuButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: MenuButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: MenuButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: MenuButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: MenuButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: MenuButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: MenuButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: MenuButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: MenuButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: MenuButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: MenuButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: MenuButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: MenuButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: MenuButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: MenuButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: MenuButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: MenuButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: MenuButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: MenuButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: MenuButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: MenuButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: MenuButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: MenuButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: MenuButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: MenuButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: MenuButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::direction", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::direction", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::menu-model", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::menu-model", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::popover", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::popover", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: MenuButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MenuButton_ConstructProps)
    _init (config?: MenuButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): MenuButton
    static $gtype: GObject.Type
}
export interface MessageDialog_ConstructProps extends Dialog_ConstructProps {
    buttons?: ButtonsType
    message_type?: MessageType
    secondary_text?: string
    secondary_use_markup?: boolean
    text?: string
    use_markup?: boolean
    accessible_role?: AccessibleRole
}
export class MessageDialog {
    /* Properties of Gtk.MessageDialog */
    readonly message_area: Widget
    message_type: MessageType
    secondary_text: string
    secondary_use_markup: boolean
    text: string
    use_markup: boolean
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.MessageDialog */
    parent_instance: Dialog
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MessageDialog */
    get_message_area(): Widget
    set_markup(str: string): void
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_content_area(): Box
    get_header_bar(): HeaderBar
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Dialog */
    vfunc_close(): void
    vfunc_response(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "close", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: MessageDialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: MessageDialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: MessageDialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: MessageDialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: MessageDialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: MessageDialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: MessageDialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: MessageDialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: MessageDialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: MessageDialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: MessageDialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: MessageDialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: MessageDialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: MessageDialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: MessageDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: MessageDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: MessageDialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: MessageDialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: MessageDialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: MessageDialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::message-area", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::message-area", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::message-type", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::message-type", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-text", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-text", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-use-markup", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-use-markup", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-markup", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-markup", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: MessageDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MessageDialog_ConstructProps)
    _init (config?: MessageDialog_ConstructProps): void
    static $gtype: GObject.Type
}
export interface MnemonicAction_ConstructProps extends ShortcutAction_ConstructProps {
}
export class MnemonicAction {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutAction */
    activate(flags: ShortcutActionFlags, widget: Widget, args?: GLib.Variant | null): boolean
    print(string: GLib.String): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MnemonicAction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MnemonicAction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MnemonicAction_ConstructProps)
    _init (config?: MnemonicAction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get(): MnemonicAction
    static $gtype: GObject.Type
}
export interface MnemonicTrigger_ConstructProps extends ShortcutTrigger_ConstructProps {
    keyval?: number
}
export class MnemonicTrigger {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MnemonicTrigger */
    get_keyval(): number
    /* Methods of Gtk.ShortcutTrigger */
    compare(trigger2: ShortcutTrigger): number
    equal(trigger2: ShortcutTrigger): boolean
    hash(): number
    print(string: GLib.String): void
    print_label(display: Gdk.Display, string: GLib.String): boolean
    to_label(display: Gdk.Display): string
    to_string(): string
    trigger(event: Gdk.Event, enable_mnemonics: boolean): Gdk.KeyMatch
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MnemonicTrigger, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MnemonicTrigger, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MnemonicTrigger_ConstructProps)
    _init (config?: MnemonicTrigger_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(keyval: number): MnemonicTrigger
    static $gtype: GObject.Type
}
export interface MountOperation_ConstructProps extends Gio.MountOperation_ConstructProps {
    display?: Gdk.Display
    parent?: Window
}
export class MountOperation {
    /* Properties of Gtk.MountOperation */
    display: Gdk.Display
    readonly is_showing: boolean
    parent: Window
    /* Properties of Gio.MountOperation */
    anonymous: boolean
    choice: number
    domain: string
    is_tcrypt_hidden_volume: boolean
    is_tcrypt_system_volume: boolean
    password: string
    password_save: Gio.PasswordSave
    pim: number
    username: string
    /* Fields of Gtk.MountOperation */
    parent_instance: Gio.MountOperation
    priv: MountOperationPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MountOperation */
    get_display(): Gdk.Display
    get_parent(): Window
    set_display(display: Gdk.Display): void
    set_parent(parent?: Window | null): void
    /* Methods of Gio.MountOperation */
    get_anonymous(): boolean
    get_choice(): number
    get_domain(): string | null
    get_is_tcrypt_hidden_volume(): boolean
    get_is_tcrypt_system_volume(): boolean
    get_password(): string | null
    get_password_save(): Gio.PasswordSave
    get_pim(): number
    get_username(): string | null
    reply(result: Gio.MountOperationResult): void
    set_anonymous(anonymous: boolean): void
    set_choice(choice: number): void
    set_domain(domain?: string | null): void
    set_is_tcrypt_hidden_volume(hidden_volume: boolean): void
    set_is_tcrypt_system_volume(system_volume: boolean): void
    set_password(password?: string | null): void
    set_password_save(save: Gio.PasswordSave): void
    set_pim(pim: number): void
    set_username(username?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gio.MountOperation */
    vfunc_aborted(): void
    vfunc_ask_password(message: string, default_user: string, default_domain: string, flags: Gio.AskPasswordFlags): void
    vfunc_ask_question(message: string, choices: string[]): void
    vfunc_reply(result: Gio.MountOperationResult): void
    vfunc_show_processes(message: string, processes: GLib.Pid[], choices: string[]): void
    vfunc_show_unmount_progress(message: string, time_left: number, bytes_left: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gio.MountOperation */
    connect(sigName: "aborted", callback: (($obj: MountOperation) => void)): number
    connect_after(sigName: "aborted", callback: (($obj: MountOperation) => void)): number
    emit(sigName: "aborted"): void
    connect(sigName: "ask-password", callback: (($obj: MountOperation, message: string, default_user: string, default_domain: string, flags: Gio.AskPasswordFlags) => void)): number
    connect_after(sigName: "ask-password", callback: (($obj: MountOperation, message: string, default_user: string, default_domain: string, flags: Gio.AskPasswordFlags) => void)): number
    emit(sigName: "ask-password", message: string, default_user: string, default_domain: string, flags: Gio.AskPasswordFlags): void
    connect(sigName: "ask-question", callback: (($obj: MountOperation, message: string, choices: string[]) => void)): number
    connect_after(sigName: "ask-question", callback: (($obj: MountOperation, message: string, choices: string[]) => void)): number
    emit(sigName: "ask-question", message: string, choices: string[]): void
    connect(sigName: "reply", callback: (($obj: MountOperation, result: Gio.MountOperationResult) => void)): number
    connect_after(sigName: "reply", callback: (($obj: MountOperation, result: Gio.MountOperationResult) => void)): number
    emit(sigName: "reply", result: Gio.MountOperationResult): void
    connect(sigName: "show-processes", callback: (($obj: MountOperation, message: string, processes: GLib.Pid[], choices: string[]) => void)): number
    connect_after(sigName: "show-processes", callback: (($obj: MountOperation, message: string, processes: GLib.Pid[], choices: string[]) => void)): number
    emit(sigName: "show-processes", message: string, processes: GLib.Pid[], choices: string[]): void
    connect(sigName: "show-unmount-progress", callback: (($obj: MountOperation, message: string, time_left: number, bytes_left: number) => void)): number
    connect_after(sigName: "show-unmount-progress", callback: (($obj: MountOperation, message: string, time_left: number, bytes_left: number) => void)): number
    emit(sigName: "show-unmount-progress", message: string, time_left: number, bytes_left: number): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::display", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-showing", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-showing", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::anonymous", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anonymous", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::choice", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::choice", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::domain", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::domain", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-tcrypt-hidden-volume", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-tcrypt-hidden-volume", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-tcrypt-system-volume", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-tcrypt-system-volume", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::password", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::password", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::password-save", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::password-save", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pim", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pim", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::username", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::username", callback: (($obj: MountOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MountOperation_ConstructProps)
    _init (config?: MountOperation_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(parent?: Window | null): MountOperation
    static new(): MountOperation
    static $gtype: GObject.Type
}
export interface MultiFilter_ConstructProps extends Filter_ConstructProps {
}
export class MultiFilter {
    /* Fields of Gtk.Filter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MultiFilter */
    append(filter: Filter): void
    remove(position: number): void
    /* Methods of Gtk.Filter */
    changed(change: FilterChange): void
    get_strictness(): FilterMatch
    match(item: GObject.Object): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.MultiFilter */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of Gtk.Filter */
    vfunc_get_strictness(): FilterMatch
    vfunc_match(item?: GObject.Object | null): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Filter */
    connect(sigName: "changed", callback: (($obj: MultiFilter, change: FilterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: MultiFilter, change: FilterChange) => void)): number
    emit(sigName: "changed", change: FilterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MultiFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MultiFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: MultiFilter, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: MultiFilter, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MultiFilter_ConstructProps)
    _init (config?: MultiFilter_ConstructProps): void
    static $gtype: GObject.Type
}
export interface MultiSelection_ConstructProps extends GObject.Object_ConstructProps {
    model?: Gio.ListModel
}
export class MultiSelection {
    /* Properties of Gtk.MultiSelection */
    model: Gio.ListModel
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MultiSelection */
    get_model(): Gio.ListModel
    set_model(model?: Gio.ListModel | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.SelectionModel */
    get_selection(): Bitset
    get_selection_in_range(position: number, n_items: number): Bitset
    is_selected(position: number): boolean
    select_all(): boolean
    select_item(position: number, unselect_rest: boolean): boolean
    select_range(position: number, n_items: number, unselect_rest: boolean): boolean
    selection_changed(position: number, n_items: number): void
    set_selection(selected: Bitset, mask: Bitset): boolean
    unselect_all(): boolean
    unselect_item(position: number): boolean
    unselect_range(position: number, n_items: number): boolean
    /* Virtual methods of Gtk.MultiSelection */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_get_selection_in_range(position: number, n_items: number): Bitset
    vfunc_is_selected(position: number): boolean
    vfunc_select_all(): boolean
    vfunc_select_item(position: number, unselect_rest: boolean): boolean
    vfunc_select_range(position: number, n_items: number, unselect_rest: boolean): boolean
    vfunc_set_selection(selected: Bitset, mask: Bitset): boolean
    vfunc_unselect_all(): boolean
    vfunc_unselect_item(position: number): boolean
    vfunc_unselect_range(position: number, n_items: number): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MultiSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MultiSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: MultiSelection, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: MultiSelection, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    /* Signals of Gtk.SelectionModel */
    connect(sigName: "selection-changed", callback: (($obj: MultiSelection, position: number, n_items: number) => void)): number
    connect_after(sigName: "selection-changed", callback: (($obj: MultiSelection, position: number, n_items: number) => void)): number
    emit(sigName: "selection-changed", position: number, n_items: number): void
    connect(sigName: "notify::model", callback: (($obj: MultiSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: MultiSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MultiSelection_ConstructProps)
    _init (config?: MultiSelection_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: Gio.ListModel | null): MultiSelection
    static $gtype: GObject.Type
}
export interface MultiSorter_ConstructProps extends Sorter_ConstructProps {
}
export class MultiSorter {
    /* Fields of Gtk.Sorter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.MultiSorter */
    append(sorter: Sorter): void
    remove(position: number): void
    /* Methods of Gtk.Sorter */
    changed(change: SorterChange): void
    compare(item1: GObject.Object, item2: GObject.Object): Ordering
    get_order(): SorterOrder
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.MultiSorter */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of Gtk.Sorter */
    vfunc_compare(item1?: GObject.Object | null, item2?: GObject.Object | null): Ordering
    vfunc_get_order(): SorterOrder
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Sorter */
    connect(sigName: "changed", callback: (($obj: MultiSorter, change: SorterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: MultiSorter, change: SorterChange) => void)): number
    emit(sigName: "changed", change: SorterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MultiSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MultiSorter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: MultiSorter, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: MultiSorter, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MultiSorter_ConstructProps)
    _init (config?: MultiSorter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): MultiSorter
    static $gtype: GObject.Type
}
export interface NamedAction_ConstructProps extends ShortcutAction_ConstructProps {
    action_name?: string
}
export class NamedAction {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.NamedAction */
    get_action_name(): string
    /* Methods of Gtk.ShortcutAction */
    activate(flags: ShortcutActionFlags, widget: Widget, args?: GLib.Variant | null): boolean
    print(string: GLib.String): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: NamedAction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: NamedAction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: NamedAction_ConstructProps)
    _init (config?: NamedAction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(name: string): NamedAction
    static $gtype: GObject.Type
}
export interface NativeDialog_ConstructProps extends GObject.Object_ConstructProps {
    modal?: boolean
    title?: string
    transient_for?: Window
    visible?: boolean
}
export class NativeDialog {
    /* Properties of Gtk.NativeDialog */
    modal: boolean
    title: string
    transient_for: Window
    visible: boolean
    /* Fields of Gtk.NativeDialog */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.NativeDialog */
    destroy(): void
    get_modal(): boolean
    get_title(): string | null
    get_transient_for(): Window | null
    get_visible(): boolean
    hide(): void
    set_modal(modal: boolean): void
    set_title(title: string): void
    set_transient_for(parent?: Window | null): void
    show(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.NativeDialog */
    vfunc_hide(): void
    vfunc_response(response_id: number): void
    vfunc_show(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.NativeDialog */
    connect(sigName: "response", callback: (($obj: NativeDialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: NativeDialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::modal", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: NativeDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: NativeDialog_ConstructProps)
    _init (config?: NativeDialog_ConstructProps): void
    static $gtype: GObject.Type
}
export interface NeverTrigger_ConstructProps extends ShortcutTrigger_ConstructProps {
}
export class NeverTrigger {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutTrigger */
    compare(trigger2: ShortcutTrigger): number
    equal(trigger2: ShortcutTrigger): boolean
    hash(): number
    print(string: GLib.String): void
    print_label(display: Gdk.Display, string: GLib.String): boolean
    to_label(display: Gdk.Display): string
    to_string(): string
    trigger(event: Gdk.Event, enable_mnemonics: boolean): Gdk.KeyMatch
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: NeverTrigger, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: NeverTrigger, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: NeverTrigger_ConstructProps)
    _init (config?: NeverTrigger_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get(): NeverTrigger
    static $gtype: GObject.Type
}
export interface NoSelection_ConstructProps extends GObject.Object_ConstructProps {
    model?: Gio.ListModel
}
export class NoSelection {
    /* Properties of Gtk.NoSelection */
    model: Gio.ListModel
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.NoSelection */
    get_model(): Gio.ListModel
    set_model(model?: Gio.ListModel | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.SelectionModel */
    get_selection(): Bitset
    get_selection_in_range(position: number, n_items: number): Bitset
    is_selected(position: number): boolean
    select_all(): boolean
    select_item(position: number, unselect_rest: boolean): boolean
    select_range(position: number, n_items: number, unselect_rest: boolean): boolean
    selection_changed(position: number, n_items: number): void
    set_selection(selected: Bitset, mask: Bitset): boolean
    unselect_all(): boolean
    unselect_item(position: number): boolean
    unselect_range(position: number, n_items: number): boolean
    /* Virtual methods of Gtk.NoSelection */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_get_selection_in_range(position: number, n_items: number): Bitset
    vfunc_is_selected(position: number): boolean
    vfunc_select_all(): boolean
    vfunc_select_item(position: number, unselect_rest: boolean): boolean
    vfunc_select_range(position: number, n_items: number, unselect_rest: boolean): boolean
    vfunc_set_selection(selected: Bitset, mask: Bitset): boolean
    vfunc_unselect_all(): boolean
    vfunc_unselect_item(position: number): boolean
    vfunc_unselect_range(position: number, n_items: number): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: NoSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: NoSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: NoSelection, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: NoSelection, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    /* Signals of Gtk.SelectionModel */
    connect(sigName: "selection-changed", callback: (($obj: NoSelection, position: number, n_items: number) => void)): number
    connect_after(sigName: "selection-changed", callback: (($obj: NoSelection, position: number, n_items: number) => void)): number
    emit(sigName: "selection-changed", position: number, n_items: number): void
    connect(sigName: "notify::model", callback: (($obj: NoSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: NoSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: NoSelection_ConstructProps)
    _init (config?: NoSelection_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: Gio.ListModel | null): NoSelection
    static $gtype: GObject.Type
}
export interface Notebook_ConstructProps extends Widget_ConstructProps {
    enable_popup?: boolean
    group_name?: string
    page?: number
    scrollable?: boolean
    show_border?: boolean
    show_tabs?: boolean
    tab_pos?: PositionType
    accessible_role?: AccessibleRole
}
export class Notebook {
    /* Properties of Gtk.Notebook */
    enable_popup: boolean
    group_name: string
    page: number
    readonly pages: Gio.ListModel
    scrollable: boolean
    show_border: boolean
    show_tabs: boolean
    tab_pos: PositionType
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Notebook */
    append_page(child: Widget, tab_label?: Widget | null): number
    append_page_menu(child: Widget, tab_label?: Widget | null, menu_label?: Widget | null): number
    detach_tab(child: Widget): void
    get_action_widget(pack_type: PackType): Widget | null
    get_current_page(): number
    get_group_name(): string | null
    get_menu_label(child: Widget): Widget | null
    get_menu_label_text(child: Widget): string | null
    get_n_pages(): number
    get_nth_page(page_num: number): Widget | null
    get_page(child: Widget): NotebookPage
    get_pages(): Gio.ListModel
    get_scrollable(): boolean
    get_show_border(): boolean
    get_show_tabs(): boolean
    get_tab_detachable(child: Widget): boolean
    get_tab_label(child: Widget): Widget | null
    get_tab_label_text(child: Widget): string | null
    get_tab_pos(): PositionType
    get_tab_reorderable(child: Widget): boolean
    insert_page(child: Widget, tab_label: Widget | null, position: number): number
    insert_page_menu(child: Widget, tab_label: Widget | null, menu_label: Widget | null, position: number): number
    next_page(): void
    page_num(child: Widget): number
    popup_disable(): void
    popup_enable(): void
    prepend_page(child: Widget, tab_label?: Widget | null): number
    prepend_page_menu(child: Widget, tab_label?: Widget | null, menu_label?: Widget | null): number
    prev_page(): void
    remove_page(page_num: number): void
    reorder_child(child: Widget, position: number): void
    set_action_widget(widget: Widget, pack_type: PackType): void
    set_current_page(page_num: number): void
    set_group_name(group_name?: string | null): void
    set_menu_label(child: Widget, menu_label?: Widget | null): void
    set_menu_label_text(child: Widget, menu_text: string): void
    set_scrollable(scrollable: boolean): void
    set_show_border(show_border: boolean): void
    set_show_tabs(show_tabs: boolean): void
    set_tab_detachable(child: Widget, detachable: boolean): void
    set_tab_label(child: Widget, tab_label?: Widget | null): void
    set_tab_label_text(child: Widget, tab_text: string): void
    set_tab_pos(pos: PositionType): void
    set_tab_reorderable(child: Widget, reorderable: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Notebook */
    connect(sigName: "change-current-page", callback: (($obj: Notebook, object: number) => boolean)): number
    connect_after(sigName: "change-current-page", callback: (($obj: Notebook, object: number) => boolean)): number
    emit(sigName: "change-current-page", object: number): void
    connect(sigName: "create-window", callback: (($obj: Notebook, page: Widget) => Notebook)): number
    connect_after(sigName: "create-window", callback: (($obj: Notebook, page: Widget) => Notebook)): number
    emit(sigName: "create-window", page: Widget): void
    connect(sigName: "focus-tab", callback: (($obj: Notebook, object: NotebookTab) => boolean)): number
    connect_after(sigName: "focus-tab", callback: (($obj: Notebook, object: NotebookTab) => boolean)): number
    emit(sigName: "focus-tab", object: NotebookTab): void
    connect(sigName: "move-focus-out", callback: (($obj: Notebook, object: DirectionType) => void)): number
    connect_after(sigName: "move-focus-out", callback: (($obj: Notebook, object: DirectionType) => void)): number
    emit(sigName: "move-focus-out", object: DirectionType): void
    connect(sigName: "page-added", callback: (($obj: Notebook, child: Widget, page_num: number) => void)): number
    connect_after(sigName: "page-added", callback: (($obj: Notebook, child: Widget, page_num: number) => void)): number
    emit(sigName: "page-added", child: Widget, page_num: number): void
    connect(sigName: "page-removed", callback: (($obj: Notebook, child: Widget, page_num: number) => void)): number
    connect_after(sigName: "page-removed", callback: (($obj: Notebook, child: Widget, page_num: number) => void)): number
    emit(sigName: "page-removed", child: Widget, page_num: number): void
    connect(sigName: "page-reordered", callback: (($obj: Notebook, child: Widget, page_num: number) => void)): number
    connect_after(sigName: "page-reordered", callback: (($obj: Notebook, child: Widget, page_num: number) => void)): number
    emit(sigName: "page-reordered", child: Widget, page_num: number): void
    connect(sigName: "reorder-tab", callback: (($obj: Notebook, object: DirectionType, p0: boolean) => boolean)): number
    connect_after(sigName: "reorder-tab", callback: (($obj: Notebook, object: DirectionType, p0: boolean) => boolean)): number
    emit(sigName: "reorder-tab", object: DirectionType, p0: boolean): void
    connect(sigName: "select-page", callback: (($obj: Notebook, object: boolean) => boolean)): number
    connect_after(sigName: "select-page", callback: (($obj: Notebook, object: boolean) => boolean)): number
    emit(sigName: "select-page", object: boolean): void
    connect(sigName: "switch-page", callback: (($obj: Notebook, page: Widget, page_num: number) => void)): number
    connect_after(sigName: "switch-page", callback: (($obj: Notebook, page: Widget, page_num: number) => void)): number
    emit(sigName: "switch-page", page: Widget, page_num: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Notebook) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Notebook) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Notebook, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Notebook, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Notebook) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Notebook) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Notebook, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Notebook, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Notebook) => void)): number
    connect_after(sigName: "map", callback: (($obj: Notebook) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Notebook, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Notebook, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Notebook, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Notebook, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Notebook, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Notebook, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Notebook) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Notebook) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Notebook) => void)): number
    connect_after(sigName: "show", callback: (($obj: Notebook) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Notebook, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Notebook, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Notebook) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Notebook) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Notebook) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Notebook) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::enable-popup", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-popup", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::group-name", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::group-name", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pages", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pages", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scrollable", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrollable", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-border", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-border", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-tabs", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-tabs", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-pos", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-pos", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Notebook, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Notebook_ConstructProps)
    _init (config?: Notebook_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Notebook
    static $gtype: GObject.Type
}
export interface NotebookPage_ConstructProps extends GObject.Object_ConstructProps {
    child?: Widget
    detachable?: boolean
    menu?: Widget
    menu_label?: string
    position?: number
    reorderable?: boolean
    tab?: Widget
    tab_expand?: boolean
    tab_fill?: boolean
    tab_label?: string
}
export class NotebookPage {
    /* Properties of Gtk.NotebookPage */
    detachable: boolean
    menu_label: string
    position: number
    reorderable: boolean
    tab_expand: boolean
    tab_fill: boolean
    tab_label: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.NotebookPage */
    get_child(): Widget
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::detachable", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detachable", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::menu-label", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::menu-label", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::position", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::position", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reorderable", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reorderable", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-expand", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-expand", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-fill", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-fill", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-label", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-label", callback: (($obj: NotebookPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: NotebookPage_ConstructProps)
    _init (config?: NotebookPage_ConstructProps): void
    static $gtype: GObject.Type
}
export interface NothingAction_ConstructProps extends ShortcutAction_ConstructProps {
}
export class NothingAction {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutAction */
    activate(flags: ShortcutActionFlags, widget: Widget, args?: GLib.Variant | null): boolean
    print(string: GLib.String): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: NothingAction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: NothingAction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: NothingAction_ConstructProps)
    _init (config?: NothingAction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get(): NothingAction
    static $gtype: GObject.Type
}
export interface NumericSorter_ConstructProps extends Sorter_ConstructProps {
    expression?: Expression
    sort_order?: SortType
}
export class NumericSorter {
    /* Properties of Gtk.NumericSorter */
    expression: Expression
    sort_order: SortType
    /* Fields of Gtk.Sorter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.NumericSorter */
    get_expression(): Expression | null
    get_sort_order(): SortType
    set_expression(expression?: Expression | null): void
    set_sort_order(sort_order: SortType): void
    /* Methods of Gtk.Sorter */
    changed(change: SorterChange): void
    compare(item1: GObject.Object, item2: GObject.Object): Ordering
    get_order(): SorterOrder
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Sorter */
    vfunc_compare(item1?: GObject.Object | null, item2?: GObject.Object | null): Ordering
    vfunc_get_order(): SorterOrder
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Sorter */
    connect(sigName: "changed", callback: (($obj: NumericSorter, change: SorterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: NumericSorter, change: SorterChange) => void)): number
    emit(sigName: "changed", change: SorterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: NumericSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: NumericSorter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::expression", callback: (($obj: NumericSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expression", callback: (($obj: NumericSorter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sort-order", callback: (($obj: NumericSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sort-order", callback: (($obj: NumericSorter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: NumericSorter_ConstructProps)
    _init (config?: NumericSorter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(expression?: Expression | null): NumericSorter
    static $gtype: GObject.Type
}
export class ObjectExpression {
    /* Methods of Gtk.ObjectExpression */
    get_object(): GObject.Object | null
    /* Methods of Gtk.Expression */
    bind(target: GObject.Object, property: string, this_?: GObject.Object | null): ExpressionWatch
    evaluate(this_: GObject.Object | null, value: any): boolean
    get_value_type(): GObject.Type
    is_static(): boolean
    ref(): Expression
    unref(): void
    watch(this_: GObject.Object | null, notify: ExpressionNotify): ExpressionWatch
    static name: string
    static new(object: GObject.Object): ObjectExpression
    constructor(object: GObject.Object)
    /* Static methods and pseudo-constructors */
    static new(object: GObject.Object): ObjectExpression
}
export interface Overlay_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    accessible_role?: AccessibleRole
}
export class Overlay {
    /* Properties of Gtk.Overlay */
    child: Widget
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Overlay */
    add_overlay(widget: Widget): void
    get_child(): Widget | null
    get_clip_overlay(widget: Widget): boolean
    get_measure_overlay(widget: Widget): boolean
    remove_overlay(widget: Widget): void
    set_child(child?: Widget | null): void
    set_clip_overlay(widget: Widget, clip_overlay: boolean): void
    set_measure_overlay(widget: Widget, measure: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Overlay */
    connect(sigName: "get-child-position", callback: (($obj: Overlay, widget: Widget) => boolean)): number
    connect_after(sigName: "get-child-position", callback: (($obj: Overlay, widget: Widget) => boolean)): number
    emit(sigName: "get-child-position", widget: Widget): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Overlay) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Overlay) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Overlay, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Overlay, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Overlay) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Overlay) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Overlay, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Overlay, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Overlay) => void)): number
    connect_after(sigName: "map", callback: (($obj: Overlay) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Overlay, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Overlay, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Overlay, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Overlay, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Overlay, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Overlay, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Overlay) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Overlay) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Overlay) => void)): number
    connect_after(sigName: "show", callback: (($obj: Overlay) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Overlay, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Overlay, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Overlay) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Overlay) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Overlay) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Overlay) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Overlay, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Overlay_ConstructProps)
    _init (config?: Overlay_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Overlay
    static $gtype: GObject.Type
}
export interface OverlayLayout_ConstructProps extends LayoutManager_ConstructProps {
}
export class OverlayLayout {
    /* Fields of Gtk.LayoutManager */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.LayoutManager */
    allocate(widget: Widget, width: number, height: number, baseline: number): void
    get_layout_child(child: Widget): LayoutChild
    get_request_mode(): SizeRequestMode
    get_widget(): Widget | null
    layout_changed(): void
    measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.LayoutManager */
    vfunc_allocate(widget: Widget, width: number, height: number, baseline: number): void
    vfunc_create_layout_child(widget: Widget, for_child: Widget): LayoutChild
    vfunc_get_request_mode(widget: Widget): SizeRequestMode
    vfunc_measure(widget: Widget, orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_root(): void
    vfunc_unroot(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: OverlayLayout, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: OverlayLayout, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: OverlayLayout_ConstructProps)
    _init (config?: OverlayLayout_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): OverlayLayout
    static $gtype: GObject.Type
}
export interface OverlayLayoutChild_ConstructProps extends LayoutChild_ConstructProps {
    clip_overlay?: boolean
    measure?: boolean
}
export class OverlayLayoutChild {
    /* Properties of Gtk.OverlayLayoutChild */
    clip_overlay: boolean
    measure: boolean
    /* Fields of Gtk.LayoutChild */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.OverlayLayoutChild */
    get_clip_overlay(): boolean
    get_measure(): boolean
    set_clip_overlay(clip_overlay: boolean): void
    set_measure(measure: boolean): void
    /* Methods of Gtk.LayoutChild */
    get_child_widget(): Widget
    get_layout_manager(): LayoutManager
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: OverlayLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: OverlayLayoutChild, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::clip-overlay", callback: (($obj: OverlayLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::clip-overlay", callback: (($obj: OverlayLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::measure", callback: (($obj: OverlayLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::measure", callback: (($obj: OverlayLayoutChild, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: OverlayLayoutChild_ConstructProps)
    _init (config?: OverlayLayoutChild_ConstructProps): void
    static $gtype: GObject.Type
}
export interface PadController_ConstructProps extends EventController_ConstructProps {
    action_group?: Gio.ActionGroup
    pad?: Gdk.Device
}
export class PadController {
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PadController */
    set_action(type: PadActionType, index: number, mode: number, label: string, action_name: string): void
    set_action_entries(entries: PadActionEntry[]): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: PadController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PadController_ConstructProps)
    _init (config?: PadController_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(group: Gio.ActionGroup, pad?: Gdk.Device | null): PadController
    static $gtype: GObject.Type
}
export interface PageSetup_ConstructProps extends GObject.Object_ConstructProps {
}
export class PageSetup {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PageSetup */
    copy(): PageSetup
    get_bottom_margin(unit: Unit): number
    get_left_margin(unit: Unit): number
    get_orientation(): PageOrientation
    get_page_height(unit: Unit): number
    get_page_width(unit: Unit): number
    get_paper_height(unit: Unit): number
    get_paper_size(): PaperSize
    get_paper_width(unit: Unit): number
    get_right_margin(unit: Unit): number
    get_top_margin(unit: Unit): number
    load_file(file_name: string): boolean
    load_key_file(key_file: GLib.KeyFile, group_name?: string | null): boolean
    set_bottom_margin(margin: number, unit: Unit): void
    set_left_margin(margin: number, unit: Unit): void
    set_orientation(orientation: PageOrientation): void
    set_paper_size(size: PaperSize): void
    set_paper_size_and_default_margins(size: PaperSize): void
    set_right_margin(margin: number, unit: Unit): void
    set_top_margin(margin: number, unit: Unit): void
    to_file(file_name: string): boolean
    to_gvariant(): GLib.Variant
    to_key_file(key_file: GLib.KeyFile, group_name?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PageSetup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PageSetup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PageSetup_ConstructProps)
    _init (config?: PageSetup_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): PageSetup
    static new_from_file(file_name: string): PageSetup
    static new_from_gvariant(variant: GLib.Variant): PageSetup
    static new_from_key_file(key_file: GLib.KeyFile, group_name?: string | null): PageSetup
    static $gtype: GObject.Type
}
export interface PageSetupUnixDialog_ConstructProps extends Dialog_ConstructProps {
    accessible_role?: AccessibleRole
}
export class PageSetupUnixDialog {
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Dialog */
    parent_instance: Window
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PageSetupUnixDialog */
    get_page_setup(): PageSetup
    get_print_settings(): PrintSettings
    set_page_setup(page_setup: PageSetup): void
    set_print_settings(print_settings: PrintSettings): void
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_content_area(): Box
    get_header_bar(): HeaderBar
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Dialog */
    vfunc_close(): void
    vfunc_response(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "close", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: PageSetupUnixDialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: PageSetupUnixDialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: PageSetupUnixDialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: PageSetupUnixDialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: PageSetupUnixDialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: PageSetupUnixDialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: PageSetupUnixDialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: PageSetupUnixDialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: PageSetupUnixDialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: PageSetupUnixDialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: PageSetupUnixDialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: PageSetupUnixDialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: PageSetupUnixDialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: PageSetupUnixDialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: PageSetupUnixDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: PageSetupUnixDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: PageSetupUnixDialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: PageSetupUnixDialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: PageSetupUnixDialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: PageSetupUnixDialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::application", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: PageSetupUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PageSetupUnixDialog_ConstructProps)
    _init (config?: PageSetupUnixDialog_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(title?: string | null, parent?: Window | null): PageSetupUnixDialog
    static new(): PageSetupUnixDialog
    static $gtype: GObject.Type
}
export interface Paned_ConstructProps extends Widget_ConstructProps {
    end_child?: Widget
    position?: number
    position_set?: boolean
    resize_end_child?: boolean
    resize_start_child?: boolean
    shrink_end_child?: boolean
    shrink_start_child?: boolean
    start_child?: Widget
    wide_handle?: boolean
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class Paned {
    /* Properties of Gtk.Paned */
    end_child: Widget
    readonly max_position: number
    readonly min_position: number
    position: number
    position_set: boolean
    resize_end_child: boolean
    resize_start_child: boolean
    shrink_end_child: boolean
    shrink_start_child: boolean
    start_child: Widget
    wide_handle: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Paned */
    get_end_child(): Widget | null
    get_position(): number
    get_resize_end_child(): boolean
    get_resize_start_child(): boolean
    get_shrink_end_child(): boolean
    get_shrink_start_child(): boolean
    get_start_child(): Widget | null
    get_wide_handle(): boolean
    set_end_child(child: Widget): void
    set_position(position: number): void
    set_resize_end_child(resize: boolean): void
    set_resize_start_child(resize: boolean): void
    set_shrink_end_child(resize: boolean): void
    set_shrink_start_child(resize: boolean): void
    set_start_child(child: Widget): void
    set_wide_handle(wide: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Paned */
    connect(sigName: "accept-position", callback: (($obj: Paned) => boolean)): number
    connect_after(sigName: "accept-position", callback: (($obj: Paned) => boolean)): number
    emit(sigName: "accept-position"): void
    connect(sigName: "cancel-position", callback: (($obj: Paned) => boolean)): number
    connect_after(sigName: "cancel-position", callback: (($obj: Paned) => boolean)): number
    emit(sigName: "cancel-position"): void
    connect(sigName: "cycle-child-focus", callback: (($obj: Paned, reversed: boolean) => boolean)): number
    connect_after(sigName: "cycle-child-focus", callback: (($obj: Paned, reversed: boolean) => boolean)): number
    emit(sigName: "cycle-child-focus", reversed: boolean): void
    connect(sigName: "cycle-handle-focus", callback: (($obj: Paned, reversed: boolean) => boolean)): number
    connect_after(sigName: "cycle-handle-focus", callback: (($obj: Paned, reversed: boolean) => boolean)): number
    emit(sigName: "cycle-handle-focus", reversed: boolean): void
    connect(sigName: "move-handle", callback: (($obj: Paned, scroll_type: ScrollType) => boolean)): number
    connect_after(sigName: "move-handle", callback: (($obj: Paned, scroll_type: ScrollType) => boolean)): number
    emit(sigName: "move-handle", scroll_type: ScrollType): void
    connect(sigName: "toggle-handle-focus", callback: (($obj: Paned) => boolean)): number
    connect_after(sigName: "toggle-handle-focus", callback: (($obj: Paned) => boolean)): number
    emit(sigName: "toggle-handle-focus"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Paned) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Paned) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Paned, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Paned, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Paned) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Paned) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Paned, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Paned, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Paned) => void)): number
    connect_after(sigName: "map", callback: (($obj: Paned) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Paned, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Paned, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Paned, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Paned, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Paned, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Paned, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Paned) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Paned) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Paned) => void)): number
    connect_after(sigName: "show", callback: (($obj: Paned) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Paned, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Paned, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Paned) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Paned) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Paned) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Paned) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::end-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-position", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-position", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-position", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-position", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::position", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::position", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::position-set", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::position-set", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resize-end-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resize-end-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resize-start-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resize-start-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shrink-end-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shrink-end-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shrink-start-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shrink-start-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::start-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-child", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wide-handle", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wide-handle", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: Paned, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Paned_ConstructProps)
    _init (config?: Paned_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(orientation: Orientation): Paned
    static $gtype: GObject.Type
}
export class ParamSpecExpression {
    /* Fields of GObject.ParamSpec */
    g_type_instance: GObject.TypeInstance
    name: string
    flags: GObject.ParamFlags
    value_type: GObject.Type
    owner_type: GObject.Type
    /* Methods of GObject.ParamSpec */
    get_blurb(): string | null
    get_default_value(): GObject.Value
    get_name(): string
    get_name_quark(): GLib.Quark
    get_nick(): string
    get_qdata(quark: GLib.Quark): object | null
    get_redirect_target(): GObject.ParamSpec | null
    set_qdata(quark: GLib.Quark, data?: object | null): void
    sink(): void
    steal_qdata(quark: GLib.Quark): object | null
    /* Virtual methods of GObject.ParamSpec */
    vfunc_finalize(): void
    vfunc_value_set_default(value: GObject.Value): void
    vfunc_value_validate(value: GObject.Value): boolean
    vfunc_values_cmp(value1: GObject.Value, value2: GObject.Value): number
    static name: string
}
export interface PasswordEntry_ConstructProps extends Widget_ConstructProps {
    activates_default?: boolean
    extra_menu?: Gio.MenuModel
    placeholder_text?: string
    show_peek_icon?: boolean
    accessible_role?: AccessibleRole
    editable?: boolean
    enable_undo?: boolean
    max_width_chars?: number
    text?: string
    width_chars?: number
    xalign?: number
}
export class PasswordEntry {
    /* Properties of Gtk.PasswordEntry */
    activates_default: boolean
    extra_menu: Gio.MenuModel
    placeholder_text: string
    show_peek_icon: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Editable */
    readonly cursor_position: number
    editable: boolean
    enable_undo: boolean
    max_width_chars: number
    readonly selection_bound: number
    text: string
    width_chars: number
    xalign: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PasswordEntry */
    get_extra_menu(): Gio.MenuModel
    get_show_peek_icon(): boolean
    set_extra_menu(model?: Gio.MenuModel | null): void
    set_show_peek_icon(show_peek_icon: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Editable */
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    finish_delegate(): void
    get_alignment(): number
    get_chars(start_pos: number, end_pos: number): string
    get_delegate(): Editable | null
    get_editable(): boolean
    get_enable_undo(): boolean
    get_max_width_chars(): number
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    get_text(): string
    get_width_chars(): number
    init_delegate(): void
    insert_text(text: string, length: number, position: number): /* position */ number
    select_region(start_pos: number, end_pos: number): void
    set_alignment(xalign: number): void
    set_editable(is_editable: boolean): void
    set_enable_undo(enable_undo: boolean): void
    set_max_width_chars(n_chars: number): void
    set_position(position: number): void
    set_text(text: string): void
    set_width_chars(n_chars: number): void
    /* Virtual methods of Gtk.PasswordEntry */
    vfunc_changed(): void
    vfunc_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_get_delegate(): Editable | null
    vfunc_get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    vfunc_get_text(): string
    vfunc_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_set_selection_bounds(start_pos: number, end_pos: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.PasswordEntry */
    connect(sigName: "activate", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "activate", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "activate"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: PasswordEntry, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: PasswordEntry, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "hide", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: PasswordEntry, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: PasswordEntry, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "map", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: PasswordEntry, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: PasswordEntry, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: PasswordEntry, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: PasswordEntry, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: PasswordEntry, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: PasswordEntry, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "realize", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "show", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: PasswordEntry, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: PasswordEntry, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: (($obj: PasswordEntry) => void)): number
    connect_after(sigName: "changed", callback: (($obj: PasswordEntry) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "delete-text", callback: (($obj: PasswordEntry, start_pos: number, end_pos: number) => void)): number
    connect_after(sigName: "delete-text", callback: (($obj: PasswordEntry, start_pos: number, end_pos: number) => void)): number
    emit(sigName: "delete-text", start_pos: number, end_pos: number): void
    connect(sigName: "insert-text", callback: (($obj: PasswordEntry, text: string, length: number, position: number) => void)): number
    connect_after(sigName: "insert-text", callback: (($obj: PasswordEntry, text: string, length: number, position: number) => void)): number
    emit(sigName: "insert-text", text: string, length: number, position: number): void
    connect(sigName: "notify::activates-default", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activates-default", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::extra-menu", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extra-menu", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder-text", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder-text", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-peek-icon", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-peek-icon", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor-position", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-position", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-undo", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-undo", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-bound", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-bound", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: PasswordEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PasswordEntry_ConstructProps)
    _init (config?: PasswordEntry_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): PasswordEntry
    static delegate_get_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static delegate_set_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static install_properties(object_class: GObject.ObjectClass, first_prop: number): number
    static $gtype: GObject.Type
}
export interface Picture_ConstructProps extends Widget_ConstructProps {
    alternative_text?: string
    can_shrink?: boolean
    file?: Gio.File
    keep_aspect_ratio?: boolean
    paintable?: Gdk.Paintable
    accessible_role?: AccessibleRole
}
export class Picture {
    /* Properties of Gtk.Picture */
    alternative_text: string
    can_shrink: boolean
    file: Gio.File
    keep_aspect_ratio: boolean
    paintable: Gdk.Paintable
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Picture */
    get_alternative_text(): string | null
    get_can_shrink(): boolean
    get_file(): Gio.File | null
    get_keep_aspect_ratio(): boolean
    get_paintable(): Gdk.Paintable | null
    set_alternative_text(alternative_text?: string | null): void
    set_can_shrink(can_shrink: boolean): void
    set_file(file?: Gio.File | null): void
    set_filename(filename?: string | null): void
    set_keep_aspect_ratio(keep_aspect_ratio: boolean): void
    set_paintable(paintable?: Gdk.Paintable | null): void
    set_pixbuf(pixbuf?: GdkPixbuf.Pixbuf | null): void
    set_resource(resource_path?: string | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Picture) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Picture) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Picture, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Picture, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Picture) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Picture) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Picture, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Picture, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Picture) => void)): number
    connect_after(sigName: "map", callback: (($obj: Picture) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Picture, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Picture, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Picture, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Picture, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Picture, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Picture, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Picture) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Picture) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Picture) => void)): number
    connect_after(sigName: "show", callback: (($obj: Picture) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Picture, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Picture, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Picture) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Picture) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Picture) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Picture) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::alternative-text", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alternative-text", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-shrink", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-shrink", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::file", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::keep-aspect-ratio", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keep-aspect-ratio", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paintable", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paintable", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Picture, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Picture_ConstructProps)
    _init (config?: Picture_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Picture
    static new_for_file(file?: Gio.File | null): Picture
    static new_for_filename(filename?: string | null): Picture
    static new_for_paintable(paintable?: Gdk.Paintable | null): Picture
    static new_for_pixbuf(pixbuf?: GdkPixbuf.Pixbuf | null): Picture
    static new_for_resource(resource_path?: string | null): Picture
    static $gtype: GObject.Type
}
export interface Popover_ConstructProps extends Widget_ConstructProps {
    autohide?: boolean
    cascade_popdown?: boolean
    child?: Widget
    default_widget?: Widget
    has_arrow?: boolean
    mnemonics_visible?: boolean
    pointing_to?: Gdk.Rectangle
    position?: PositionType
    accessible_role?: AccessibleRole
}
export class Popover {
    /* Properties of Gtk.Popover */
    autohide: boolean
    cascade_popdown: boolean
    child: Widget
    default_widget: Widget
    has_arrow: boolean
    mnemonics_visible: boolean
    pointing_to: Gdk.Rectangle
    position: PositionType
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Popover */
    get_autohide(): boolean
    get_cascade_popdown(): boolean
    get_child(): Widget | null
    get_has_arrow(): boolean
    get_mnemonics_visible(): boolean
    get_offset(): [ /* x_offset */ number | null, /* y_offset */ number | null ]
    get_pointing_to(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_position(): PositionType
    popdown(): void
    popup(): void
    present(): void
    set_autohide(autohide: boolean): void
    set_cascade_popdown(cascade_popdown: boolean): void
    set_child(child?: Widget | null): void
    set_default_widget(widget?: Widget | null): void
    set_has_arrow(has_arrow: boolean): void
    set_mnemonics_visible(mnemonics_visible: boolean): void
    set_offset(x_offset: number, y_offset: number): void
    set_pointing_to(rect: Gdk.Rectangle): void
    set_position(position: PositionType): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Popover */
    vfunc_activate_default(): void
    vfunc_closed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Popover */
    connect(sigName: "activate-default", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: Popover) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "closed", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "closed", callback: (($obj: Popover) => void)): number
    emit(sigName: "closed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Popover) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Popover, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Popover, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Popover) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Popover, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Popover, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "map", callback: (($obj: Popover) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Popover, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Popover, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Popover, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Popover, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Popover, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Popover, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Popover) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "show", callback: (($obj: Popover) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Popover, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Popover, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Popover) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Popover) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Popover) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autohide", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autohide", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cascade-popdown", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cascade-popdown", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-arrow", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-arrow", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pointing-to", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointing-to", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::position", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::position", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Popover, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Popover_ConstructProps)
    _init (config?: Popover_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Popover
    static get_for_surface(surface: Gdk.Surface): Native
    static $gtype: GObject.Type
}
export interface PopoverMenu_ConstructProps extends Popover_ConstructProps {
    menu_model?: Gio.MenuModel
    visible_submenu?: string
    accessible_role?: AccessibleRole
}
export class PopoverMenu {
    /* Properties of Gtk.PopoverMenu */
    menu_model: Gio.MenuModel
    visible_submenu: string
    /* Properties of Gtk.Popover */
    autohide: boolean
    cascade_popdown: boolean
    child: Widget
    default_widget: Widget
    has_arrow: boolean
    mnemonics_visible: boolean
    pointing_to: Gdk.Rectangle
    position: PositionType
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PopoverMenu */
    add_child(child: Widget, id: string): boolean
    get_menu_model(): Gio.MenuModel
    remove_child(child: Widget): boolean
    set_menu_model(model?: Gio.MenuModel | null): void
    /* Methods of Gtk.Popover */
    get_autohide(): boolean
    get_cascade_popdown(): boolean
    get_child(): Widget | null
    get_has_arrow(): boolean
    get_mnemonics_visible(): boolean
    get_offset(): [ /* x_offset */ number | null, /* y_offset */ number | null ]
    get_pointing_to(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_position(): PositionType
    popdown(): void
    popup(): void
    present(): void
    set_autohide(autohide: boolean): void
    set_cascade_popdown(cascade_popdown: boolean): void
    set_child(child?: Widget | null): void
    set_default_widget(widget?: Widget | null): void
    set_has_arrow(has_arrow: boolean): void
    set_mnemonics_visible(mnemonics_visible: boolean): void
    set_offset(x_offset: number, y_offset: number): void
    set_pointing_to(rect: Gdk.Rectangle): void
    set_position(position: PositionType): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Popover */
    vfunc_activate_default(): void
    vfunc_closed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Popover */
    connect(sigName: "activate-default", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "closed", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "closed", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "closed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: PopoverMenu, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: PopoverMenu, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "hide", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: PopoverMenu, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: PopoverMenu, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "map", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: PopoverMenu, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: PopoverMenu, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: PopoverMenu, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: PopoverMenu, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: PopoverMenu, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: PopoverMenu, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "realize", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "show", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: PopoverMenu, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: PopoverMenu, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: PopoverMenu) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: PopoverMenu) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::menu-model", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::menu-model", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible-submenu", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible-submenu", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autohide", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autohide", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cascade-popdown", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cascade-popdown", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-arrow", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-arrow", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pointing-to", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointing-to", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::position", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::position", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: PopoverMenu, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PopoverMenu_ConstructProps)
    _init (config?: PopoverMenu_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new_from_model(model?: Gio.MenuModel | null): PopoverMenu
    static new_from_model_full(model: Gio.MenuModel, flags: PopoverMenuFlags): PopoverMenu
    static $gtype: GObject.Type
}
export interface PopoverMenuBar_ConstructProps extends Widget_ConstructProps {
    menu_model?: Gio.MenuModel
    accessible_role?: AccessibleRole
}
export class PopoverMenuBar {
    /* Properties of Gtk.PopoverMenuBar */
    menu_model: Gio.MenuModel
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PopoverMenuBar */
    add_child(child: Widget, id: string): boolean
    get_menu_model(): Gio.MenuModel
    remove_child(child: Widget): boolean
    set_menu_model(model?: Gio.MenuModel | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: PopoverMenuBar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: PopoverMenuBar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: PopoverMenuBar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: PopoverMenuBar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: PopoverMenuBar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: PopoverMenuBar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: PopoverMenuBar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: PopoverMenuBar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: PopoverMenuBar) => void)): number
    connect_after(sigName: "map", callback: (($obj: PopoverMenuBar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: PopoverMenuBar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: PopoverMenuBar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: PopoverMenuBar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: PopoverMenuBar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: PopoverMenuBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: PopoverMenuBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: PopoverMenuBar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: PopoverMenuBar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: PopoverMenuBar) => void)): number
    connect_after(sigName: "show", callback: (($obj: PopoverMenuBar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: PopoverMenuBar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: PopoverMenuBar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: PopoverMenuBar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: PopoverMenuBar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: PopoverMenuBar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: PopoverMenuBar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::menu-model", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::menu-model", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: PopoverMenuBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PopoverMenuBar_ConstructProps)
    _init (config?: PopoverMenuBar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new_from_model(model?: Gio.MenuModel | null): PopoverMenuBar
    static $gtype: GObject.Type
}
export interface PrintContext_ConstructProps extends GObject.Object_ConstructProps {
}
export class PrintContext {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PrintContext */
    create_pango_context(): Pango.Context
    create_pango_layout(): Pango.Layout
    get_cairo_context(): cairo.Context
    get_dpi_x(): number
    get_dpi_y(): number
    get_hard_margins(): [ /* returnType */ boolean, /* top */ number, /* bottom */ number, /* left */ number, /* right */ number ]
    get_height(): number
    get_page_setup(): PageSetup
    get_pango_fontmap(): Pango.FontMap
    get_width(): number
    set_cairo_context(cr: cairo.Context, dpi_x: number, dpi_y: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PrintContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PrintContext, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PrintContext_ConstructProps)
    _init (config?: PrintContext_ConstructProps): void
    static $gtype: GObject.Type
}
export interface PrintJob_ConstructProps extends GObject.Object_ConstructProps {
    page_setup?: PageSetup
    printer?: Printer
    settings?: PrintSettings
    title?: string
    track_print_status?: boolean
}
export class PrintJob {
    /* Properties of Gtk.PrintJob */
    track_print_status: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PrintJob */
    get_collate(): boolean
    get_n_up(): number
    get_n_up_layout(): NumberUpLayout
    get_num_copies(): number
    get_page_ranges(): PageRange[]
    get_page_set(): PageSet
    get_pages(): PrintPages
    get_printer(): Printer
    get_reverse(): boolean
    get_rotate(): boolean
    get_scale(): number
    get_settings(): PrintSettings
    get_status(): PrintStatus
    get_surface(): cairo.Surface
    get_title(): string
    get_track_print_status(): boolean
    send(callback: PrintJobCompleteFunc): void
    set_collate(collate: boolean): void
    set_n_up(n_up: number): void
    set_n_up_layout(layout: NumberUpLayout): void
    set_num_copies(num_copies: number): void
    set_page_ranges(ranges: PageRange[]): void
    set_page_set(page_set: PageSet): void
    set_pages(pages: PrintPages): void
    set_reverse(reverse: boolean): void
    set_rotate(rotate: boolean): void
    set_scale(scale: number): void
    set_source_fd(fd: number): boolean
    set_source_file(filename: string): boolean
    set_track_print_status(track_status: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.PrintJob */
    connect(sigName: "status-changed", callback: (($obj: PrintJob) => void)): number
    connect_after(sigName: "status-changed", callback: (($obj: PrintJob) => void)): number
    emit(sigName: "status-changed"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PrintJob, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PrintJob, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::track-print-status", callback: (($obj: PrintJob, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::track-print-status", callback: (($obj: PrintJob, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PrintJob_ConstructProps)
    _init (config?: PrintJob_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(title: string, printer: Printer, settings: PrintSettings, page_setup: PageSetup): PrintJob
    static $gtype: GObject.Type
}
export interface PrintOperation_ConstructProps extends GObject.Object_ConstructProps {
    allow_async?: boolean
    current_page?: number
    custom_tab_label?: string
    default_page_setup?: PageSetup
    embed_page_setup?: boolean
    export_filename?: string
    has_selection?: boolean
    job_name?: string
    n_pages?: number
    print_settings?: PrintSettings
    show_progress?: boolean
    support_selection?: boolean
    track_print_status?: boolean
    unit?: Unit
    use_full_page?: boolean
}
export class PrintOperation {
    /* Properties of Gtk.PrintOperation */
    allow_async: boolean
    current_page: number
    custom_tab_label: string
    default_page_setup: PageSetup
    embed_page_setup: boolean
    export_filename: string
    has_selection: boolean
    job_name: string
    n_pages: number
    readonly n_pages_to_print: number
    print_settings: PrintSettings
    show_progress: boolean
    readonly status: PrintStatus
    readonly status_string: string
    support_selection: boolean
    track_print_status: boolean
    unit: Unit
    use_full_page: boolean
    /* Fields of Gtk.PrintOperation */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PrintOperation */
    cancel(): void
    draw_page_finish(): void
    get_default_page_setup(): PageSetup
    get_embed_page_setup(): boolean
    get_error(): void
    get_has_selection(): boolean
    get_n_pages_to_print(): number
    get_print_settings(): PrintSettings
    get_status(): PrintStatus
    get_status_string(): string
    get_support_selection(): boolean
    is_finished(): boolean
    run(action: PrintOperationAction, parent?: Window | null): PrintOperationResult
    set_allow_async(allow_async: boolean): void
    set_current_page(current_page: number): void
    set_custom_tab_label(label?: string | null): void
    set_default_page_setup(default_page_setup?: PageSetup | null): void
    set_defer_drawing(): void
    set_embed_page_setup(embed: boolean): void
    set_export_filename(filename: string): void
    set_has_selection(has_selection: boolean): void
    set_job_name(job_name: string): void
    set_n_pages(n_pages: number): void
    set_print_settings(print_settings?: PrintSettings | null): void
    set_show_progress(show_progress: boolean): void
    set_support_selection(support_selection: boolean): void
    set_track_print_status(track_status: boolean): void
    set_unit(unit: Unit): void
    set_use_full_page(full_page: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.PrintOperationPreview */
    end_preview(): void
    is_selected(page_nr: number): boolean
    render_page(page_nr: number): void
    /* Virtual methods of Gtk.PrintOperation */
    vfunc_begin_print(context: PrintContext): void
    vfunc_custom_widget_apply(widget: Widget): void
    vfunc_done(result: PrintOperationResult): void
    vfunc_draw_page(context: PrintContext, page_nr: number): void
    vfunc_end_print(context: PrintContext): void
    vfunc_paginate(context: PrintContext): boolean
    vfunc_preview(preview: PrintOperationPreview, context: PrintContext, parent: Window): boolean
    vfunc_request_page_setup(context: PrintContext, page_nr: number, setup: PageSetup): void
    vfunc_status_changed(): void
    vfunc_update_custom_widget(widget: Widget, setup: PageSetup, settings: PrintSettings): void
    vfunc_end_preview(): void
    vfunc_got_page_size(context: PrintContext, page_setup: PageSetup): void
    vfunc_is_selected(page_nr: number): boolean
    vfunc_ready(context: PrintContext): void
    vfunc_render_page(page_nr: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.PrintOperation */
    connect(sigName: "begin-print", callback: (($obj: PrintOperation, context: PrintContext) => void)): number
    connect_after(sigName: "begin-print", callback: (($obj: PrintOperation, context: PrintContext) => void)): number
    emit(sigName: "begin-print", context: PrintContext): void
    connect(sigName: "create-custom-widget", callback: (($obj: PrintOperation) => GObject.Object)): number
    connect_after(sigName: "create-custom-widget", callback: (($obj: PrintOperation) => GObject.Object)): number
    emit(sigName: "create-custom-widget"): void
    connect(sigName: "custom-widget-apply", callback: (($obj: PrintOperation, widget: Widget) => void)): number
    connect_after(sigName: "custom-widget-apply", callback: (($obj: PrintOperation, widget: Widget) => void)): number
    emit(sigName: "custom-widget-apply", widget: Widget): void
    connect(sigName: "done", callback: (($obj: PrintOperation, result: PrintOperationResult) => void)): number
    connect_after(sigName: "done", callback: (($obj: PrintOperation, result: PrintOperationResult) => void)): number
    emit(sigName: "done", result: PrintOperationResult): void
    connect(sigName: "draw-page", callback: (($obj: PrintOperation, context: PrintContext, page_nr: number) => void)): number
    connect_after(sigName: "draw-page", callback: (($obj: PrintOperation, context: PrintContext, page_nr: number) => void)): number
    emit(sigName: "draw-page", context: PrintContext, page_nr: number): void
    connect(sigName: "end-print", callback: (($obj: PrintOperation, context: PrintContext) => void)): number
    connect_after(sigName: "end-print", callback: (($obj: PrintOperation, context: PrintContext) => void)): number
    emit(sigName: "end-print", context: PrintContext): void
    connect(sigName: "paginate", callback: (($obj: PrintOperation, context: PrintContext) => boolean)): number
    connect_after(sigName: "paginate", callback: (($obj: PrintOperation, context: PrintContext) => boolean)): number
    emit(sigName: "paginate", context: PrintContext): void
    connect(sigName: "preview", callback: (($obj: PrintOperation, preview: PrintOperationPreview, context: PrintContext, parent?: Window | null) => boolean)): number
    connect_after(sigName: "preview", callback: (($obj: PrintOperation, preview: PrintOperationPreview, context: PrintContext, parent?: Window | null) => boolean)): number
    emit(sigName: "preview", preview: PrintOperationPreview, context: PrintContext, parent?: Window | null): void
    connect(sigName: "request-page-setup", callback: (($obj: PrintOperation, context: PrintContext, page_nr: number, setup: PageSetup) => void)): number
    connect_after(sigName: "request-page-setup", callback: (($obj: PrintOperation, context: PrintContext, page_nr: number, setup: PageSetup) => void)): number
    emit(sigName: "request-page-setup", context: PrintContext, page_nr: number, setup: PageSetup): void
    connect(sigName: "status-changed", callback: (($obj: PrintOperation) => void)): number
    connect_after(sigName: "status-changed", callback: (($obj: PrintOperation) => void)): number
    emit(sigName: "status-changed"): void
    connect(sigName: "update-custom-widget", callback: (($obj: PrintOperation, widget: Widget, setup: PageSetup, settings: PrintSettings) => void)): number
    connect_after(sigName: "update-custom-widget", callback: (($obj: PrintOperation, widget: Widget, setup: PageSetup, settings: PrintSettings) => void)): number
    emit(sigName: "update-custom-widget", widget: Widget, setup: PageSetup, settings: PrintSettings): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.PrintOperationPreview */
    connect(sigName: "got-page-size", callback: (($obj: PrintOperation, context: PrintContext, page_setup: PageSetup) => void)): number
    connect_after(sigName: "got-page-size", callback: (($obj: PrintOperation, context: PrintContext, page_setup: PageSetup) => void)): number
    emit(sigName: "got-page-size", context: PrintContext, page_setup: PageSetup): void
    connect(sigName: "ready", callback: (($obj: PrintOperation, context: PrintContext) => void)): number
    connect_after(sigName: "ready", callback: (($obj: PrintOperation, context: PrintContext) => void)): number
    emit(sigName: "ready", context: PrintContext): void
    connect(sigName: "notify::allow-async", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::allow-async", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-page", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-page", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::custom-tab-label", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::custom-tab-label", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-page-setup", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-page-setup", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::embed-page-setup", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::embed-page-setup", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::export-filename", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::export-filename", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-selection", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-selection", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::job-name", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::job-name", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::n-pages", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::n-pages", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::n-pages-to-print", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::n-pages-to-print", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::print-settings", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::print-settings", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-progress", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-progress", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::status", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::status", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::status-string", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::status-string", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::support-selection", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::support-selection", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::track-print-status", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::track-print-status", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unit", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unit", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-full-page", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-full-page", callback: (($obj: PrintOperation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PrintOperation_ConstructProps)
    _init (config?: PrintOperation_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): PrintOperation
    static $gtype: GObject.Type
}
export interface PrintSettings_ConstructProps extends GObject.Object_ConstructProps {
}
export class PrintSettings {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PrintSettings */
    copy(): PrintSettings
    foreach(func: PrintSettingsFunc): void
    get(key: string): string
    get_bool(key: string): boolean
    get_collate(): boolean
    get_default_source(): string
    get_dither(): string
    get_double(key: string): number
    get_double_with_default(key: string, def: number): number
    get_duplex(): PrintDuplex
    get_finishings(): string
    get_int(key: string): number
    get_int_with_default(key: string, def: number): number
    get_length(key: string, unit: Unit): number
    get_media_type(): string
    get_n_copies(): number
    get_number_up(): number
    get_number_up_layout(): NumberUpLayout
    get_orientation(): PageOrientation
    get_output_bin(): string
    get_page_ranges(): PageRange[]
    get_page_set(): PageSet
    get_paper_height(unit: Unit): number
    get_paper_size(): PaperSize
    get_paper_width(unit: Unit): number
    get_print_pages(): PrintPages
    get_printer(): string
    get_printer_lpi(): number
    get_quality(): PrintQuality
    get_resolution(): number
    get_resolution_x(): number
    get_resolution_y(): number
    get_reverse(): boolean
    get_scale(): number
    get_use_color(): boolean
    has_key(key: string): boolean
    load_file(file_name: string): boolean
    load_key_file(key_file: GLib.KeyFile, group_name?: string | null): boolean
    set(key: string, value?: string | null): void
    set_bool(key: string, value: boolean): void
    set_collate(collate: boolean): void
    set_default_source(default_source: string): void
    set_dither(dither: string): void
    set_double(key: string, value: number): void
    set_duplex(duplex: PrintDuplex): void
    set_finishings(finishings: string): void
    set_int(key: string, value: number): void
    set_length(key: string, value: number, unit: Unit): void
    set_media_type(media_type: string): void
    set_n_copies(num_copies: number): void
    set_number_up(number_up: number): void
    set_number_up_layout(number_up_layout: NumberUpLayout): void
    set_orientation(orientation: PageOrientation): void
    set_output_bin(output_bin: string): void
    set_page_ranges(page_ranges: PageRange[]): void
    set_page_set(page_set: PageSet): void
    set_paper_height(height: number, unit: Unit): void
    set_paper_size(paper_size: PaperSize): void
    set_paper_width(width: number, unit: Unit): void
    set_print_pages(pages: PrintPages): void
    set_printer(printer: string): void
    set_printer_lpi(lpi: number): void
    set_quality(quality: PrintQuality): void
    set_resolution(resolution: number): void
    set_resolution_xy(resolution_x: number, resolution_y: number): void
    set_reverse(reverse: boolean): void
    set_scale(scale: number): void
    set_use_color(use_color: boolean): void
    to_file(file_name: string): boolean
    to_gvariant(): GLib.Variant
    to_key_file(key_file: GLib.KeyFile, group_name?: string | null): void
    unset(key: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PrintSettings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PrintSettings, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PrintSettings_ConstructProps)
    _init (config?: PrintSettings_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): PrintSettings
    static new_from_file(file_name: string): PrintSettings
    static new_from_gvariant(variant: GLib.Variant): PrintSettings
    static new_from_key_file(key_file: GLib.KeyFile, group_name?: string | null): PrintSettings
    static $gtype: GObject.Type
}
export interface PrintUnixDialog_ConstructProps extends Dialog_ConstructProps {
    current_page?: number
    embed_page_setup?: boolean
    has_selection?: boolean
    manual_capabilities?: PrintCapabilities
    page_setup?: PageSetup
    print_settings?: PrintSettings
    support_selection?: boolean
    accessible_role?: AccessibleRole
}
export class PrintUnixDialog {
    /* Properties of Gtk.PrintUnixDialog */
    current_page: number
    embed_page_setup: boolean
    has_selection: boolean
    manual_capabilities: PrintCapabilities
    page_setup: PageSetup
    print_settings: PrintSettings
    readonly selected_printer: Printer
    support_selection: boolean
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Dialog */
    parent_instance: Window
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.PrintUnixDialog */
    add_custom_tab(child: Widget, tab_label: Widget): void
    get_current_page(): number
    get_embed_page_setup(): boolean
    get_has_selection(): boolean
    get_manual_capabilities(): PrintCapabilities
    get_page_setup(): PageSetup
    get_page_setup_set(): boolean
    get_selected_printer(): Printer
    get_settings(): PrintSettings
    get_support_selection(): boolean
    set_current_page(current_page: number): void
    set_embed_page_setup(embed: boolean): void
    set_has_selection(has_selection: boolean): void
    set_manual_capabilities(capabilities: PrintCapabilities): void
    set_page_setup(page_setup: PageSetup): void
    set_settings(settings?: PrintSettings | null): void
    set_support_selection(support_selection: boolean): void
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_content_area(): Box
    get_header_bar(): HeaderBar
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Dialog */
    vfunc_close(): void
    vfunc_response(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "close", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "response", callback: (($obj: PrintUnixDialog, response_id: number) => void)): number
    connect_after(sigName: "response", callback: (($obj: PrintUnixDialog, response_id: number) => void)): number
    emit(sigName: "response", response_id: number): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: PrintUnixDialog) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: PrintUnixDialog) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: PrintUnixDialog, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: PrintUnixDialog, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: PrintUnixDialog, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: PrintUnixDialog, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "hide", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: PrintUnixDialog, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: PrintUnixDialog, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "map", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: PrintUnixDialog, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: PrintUnixDialog, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: PrintUnixDialog, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: PrintUnixDialog, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: PrintUnixDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: PrintUnixDialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "realize", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "show", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: PrintUnixDialog, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: PrintUnixDialog, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: PrintUnixDialog) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: PrintUnixDialog) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::current-page", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-page", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::embed-page-setup", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::embed-page-setup", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-selection", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-selection", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::manual-capabilities", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::manual-capabilities", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-setup", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-setup", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::print-settings", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::print-settings", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected-printer", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-printer", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::support-selection", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::support-selection", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: PrintUnixDialog, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: PrintUnixDialog_ConstructProps)
    _init (config?: PrintUnixDialog_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(title?: string | null, parent?: Window | null): PrintUnixDialog
    static new(): PrintUnixDialog
    static $gtype: GObject.Type
}
export interface Printer_ConstructProps extends GObject.Object_ConstructProps {
    accepts_pdf?: boolean
    accepts_ps?: boolean
    is_virtual?: boolean
    name?: string
}
export class Printer {
    /* Properties of Gtk.Printer */
    readonly accepting_jobs: boolean
    readonly icon_name: string
    readonly job_count: number
    readonly location: string
    readonly paused: boolean
    readonly state_message: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Printer */
    accepts_pdf(): boolean
    accepts_ps(): boolean
    compare(b: Printer): number
    get_backend(): PrintBackend
    get_capabilities(): PrintCapabilities
    get_default_page_size(): PageSetup
    get_description(): string
    get_hard_margins(): [ /* returnType */ boolean, /* top */ number, /* bottom */ number, /* left */ number, /* right */ number ]
    get_hard_margins_for_paper_size(paper_size: PaperSize): [ /* returnType */ boolean, /* top */ number, /* bottom */ number, /* left */ number, /* right */ number ]
    get_icon_name(): string
    get_job_count(): number
    get_location(): string
    get_name(): string
    get_state_message(): string
    has_details(): boolean
    is_accepting_jobs(): boolean
    is_active(): boolean
    is_default(): boolean
    is_paused(): boolean
    is_virtual(): boolean
    list_papers(): PageSetup[]
    request_details(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Printer */
    connect(sigName: "details-acquired", callback: (($obj: Printer, success: boolean) => void)): number
    connect_after(sigName: "details-acquired", callback: (($obj: Printer, success: boolean) => void)): number
    emit(sigName: "details-acquired", success: boolean): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accepting-jobs", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accepting-jobs", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::job-count", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::job-count", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::location", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::location", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paused", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paused", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::state-message", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::state-message", callback: (($obj: Printer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Printer_ConstructProps)
    _init (config?: Printer_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(name: string, backend: PrintBackend, virtual_: boolean): Printer
    static $gtype: GObject.Type
}
export interface ProgressBar_ConstructProps extends Widget_ConstructProps {
    ellipsize?: Pango.EllipsizeMode
    fraction?: number
    inverted?: boolean
    pulse_step?: number
    show_text?: boolean
    text?: string
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class ProgressBar {
    /* Properties of Gtk.ProgressBar */
    ellipsize: Pango.EllipsizeMode
    fraction: number
    inverted: boolean
    pulse_step: number
    show_text: boolean
    text: string
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ProgressBar */
    get_ellipsize(): Pango.EllipsizeMode
    get_fraction(): number
    get_inverted(): boolean
    get_pulse_step(): number
    get_show_text(): boolean
    get_text(): string | null
    pulse(): void
    set_ellipsize(mode: Pango.EllipsizeMode): void
    set_fraction(fraction: number): void
    set_inverted(inverted: boolean): void
    set_pulse_step(fraction: number): void
    set_show_text(show_text: boolean): void
    set_text(text?: string | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ProgressBar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ProgressBar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ProgressBar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ProgressBar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ProgressBar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ProgressBar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ProgressBar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ProgressBar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ProgressBar) => void)): number
    connect_after(sigName: "map", callback: (($obj: ProgressBar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ProgressBar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ProgressBar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ProgressBar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ProgressBar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ProgressBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ProgressBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ProgressBar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ProgressBar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ProgressBar) => void)): number
    connect_after(sigName: "show", callback: (($obj: ProgressBar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ProgressBar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ProgressBar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ProgressBar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ProgressBar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ProgressBar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ProgressBar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::ellipsize", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ellipsize", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fraction", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fraction", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inverted", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inverted", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pulse-step", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pulse-step", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-text", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-text", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: ProgressBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ProgressBar_ConstructProps)
    _init (config?: ProgressBar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ProgressBar
    static $gtype: GObject.Type
}
export class PropertyExpression {
    /* Methods of Gtk.PropertyExpression */
    get_expression(): Expression
    get_pspec(): GObject.ParamSpec
    /* Methods of Gtk.Expression */
    bind(target: GObject.Object, property: string, this_?: GObject.Object | null): ExpressionWatch
    evaluate(this_: GObject.Object | null, value: any): boolean
    get_value_type(): GObject.Type
    is_static(): boolean
    ref(): Expression
    unref(): void
    watch(this_: GObject.Object | null, notify: ExpressionNotify): ExpressionWatch
    static name: string
    static new(this_type: GObject.Type, expression: Expression | null, property_name: string): PropertyExpression
    constructor(this_type: GObject.Type, expression: Expression | null, property_name: string)
    /* Static methods and pseudo-constructors */
    static new(this_type: GObject.Type, expression: Expression | null, property_name: string): PropertyExpression
    static new_for_pspec(expression: Expression | null, pspec: GObject.ParamSpec): PropertyExpression
}
export interface Range_ConstructProps extends Widget_ConstructProps {
    adjustment?: Adjustment
    fill_level?: number
    inverted?: boolean
    restrict_to_fill_level?: boolean
    round_digits?: number
    show_fill_level?: boolean
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class Range {
    /* Properties of Gtk.Range */
    adjustment: Adjustment
    fill_level: number
    inverted: boolean
    restrict_to_fill_level: boolean
    round_digits: number
    show_fill_level: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Range */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Range */
    get_adjustment(): Adjustment
    get_fill_level(): number
    get_flippable(): boolean
    get_inverted(): boolean
    get_range_rect(): /* range_rect */ Gdk.Rectangle
    get_restrict_to_fill_level(): boolean
    get_round_digits(): number
    get_show_fill_level(): boolean
    get_slider_range(): [ /* slider_start */ number | null, /* slider_end */ number | null ]
    get_slider_size_fixed(): boolean
    get_value(): number
    set_adjustment(adjustment: Adjustment): void
    set_fill_level(fill_level: number): void
    set_flippable(flippable: boolean): void
    set_increments(step: number, page: number): void
    set_inverted(setting: boolean): void
    set_range(min: number, max: number): void
    set_restrict_to_fill_level(restrict_to_fill_level: boolean): void
    set_round_digits(round_digits: number): void
    set_show_fill_level(show_fill_level: boolean): void
    set_slider_size_fixed(size_fixed: boolean): void
    set_value(value: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds(new_value: number): void
    vfunc_change_value(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border(border_: Border): void
    vfunc_move_slider(scroll: ScrollType): void
    vfunc_value_changed(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Range */
    connect(sigName: "adjust-bounds", callback: (($obj: Range, value: number) => void)): number
    connect_after(sigName: "adjust-bounds", callback: (($obj: Range, value: number) => void)): number
    emit(sigName: "adjust-bounds", value: number): void
    connect(sigName: "change-value", callback: (($obj: Range, scroll: ScrollType, value: number) => boolean)): number
    connect_after(sigName: "change-value", callback: (($obj: Range, scroll: ScrollType, value: number) => boolean)): number
    emit(sigName: "change-value", scroll: ScrollType, value: number): void
    connect(sigName: "move-slider", callback: (($obj: Range, step: ScrollType) => void)): number
    connect_after(sigName: "move-slider", callback: (($obj: Range, step: ScrollType) => void)): number
    emit(sigName: "move-slider", step: ScrollType): void
    connect(sigName: "value-changed", callback: (($obj: Range) => void)): number
    connect_after(sigName: "value-changed", callback: (($obj: Range) => void)): number
    emit(sigName: "value-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Range) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Range) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Range, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Range, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Range) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Range) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Range, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Range, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Range) => void)): number
    connect_after(sigName: "map", callback: (($obj: Range) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Range, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Range, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Range, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Range, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Range, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Range, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Range) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Range) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Range) => void)): number
    connect_after(sigName: "show", callback: (($obj: Range) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Range, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Range, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Range) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Range) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Range) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Range) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::adjustment", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::adjustment", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fill-level", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fill-level", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inverted", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inverted", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::restrict-to-fill-level", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::restrict-to-fill-level", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::round-digits", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::round-digits", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-fill-level", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-fill-level", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: Range, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Range_ConstructProps)
    _init (config?: Range_ConstructProps): void
    static $gtype: GObject.Type
}
export interface RecentManager_ConstructProps extends GObject.Object_ConstructProps {
    filename?: string
}
export class RecentManager {
    /* Properties of Gtk.RecentManager */
    readonly size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.RecentManager */
    add_full(uri: string, recent_data: RecentData): boolean
    add_item(uri: string): boolean
    get_items(): RecentInfo[]
    has_item(uri: string): boolean
    lookup_item(uri: string): RecentInfo | null
    move_item(uri: string, new_uri?: string | null): boolean
    purge_items(): number
    remove_item(uri: string): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.RecentManager */
    vfunc_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RecentManager */
    connect(sigName: "changed", callback: (($obj: RecentManager) => void)): number
    connect_after(sigName: "changed", callback: (($obj: RecentManager) => void)): number
    emit(sigName: "changed"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: RecentManager, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: RecentManager, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::size", callback: (($obj: RecentManager, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: RecentManager, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: RecentManager_ConstructProps)
    _init (config?: RecentManager_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): RecentManager
    static get_default(): RecentManager
    static $gtype: GObject.Type
}
export interface Revealer_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    reveal_child?: boolean
    transition_duration?: number
    transition_type?: RevealerTransitionType
    accessible_role?: AccessibleRole
}
export class Revealer {
    /* Properties of Gtk.Revealer */
    child: Widget
    readonly child_revealed: boolean
    reveal_child: boolean
    transition_duration: number
    transition_type: RevealerTransitionType
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Revealer */
    get_child(): Widget | null
    get_child_revealed(): boolean
    get_reveal_child(): boolean
    get_transition_duration(): number
    get_transition_type(): RevealerTransitionType
    set_child(child?: Widget | null): void
    set_reveal_child(reveal_child: boolean): void
    set_transition_duration(duration: number): void
    set_transition_type(transition: RevealerTransitionType): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Revealer) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Revealer) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Revealer, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Revealer, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Revealer) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Revealer) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Revealer, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Revealer, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Revealer) => void)): number
    connect_after(sigName: "map", callback: (($obj: Revealer) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Revealer, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Revealer, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Revealer, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Revealer, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Revealer, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Revealer, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Revealer) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Revealer) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Revealer) => void)): number
    connect_after(sigName: "show", callback: (($obj: Revealer) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Revealer, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Revealer, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Revealer) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Revealer) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Revealer) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Revealer) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-revealed", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-revealed", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reveal-child", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reveal-child", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transition-duration", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transition-duration", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transition-type", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transition-type", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Revealer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Revealer_ConstructProps)
    _init (config?: Revealer_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Revealer
    static $gtype: GObject.Type
}
export interface Scale_ConstructProps extends Range_ConstructProps {
    digits?: number
    draw_value?: boolean
    has_origin?: boolean
    value_pos?: PositionType
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class Scale {
    /* Properties of Gtk.Scale */
    digits: number
    draw_value: boolean
    has_origin: boolean
    value_pos: PositionType
    /* Properties of Gtk.Range */
    adjustment: Adjustment
    fill_level: number
    inverted: boolean
    restrict_to_fill_level: boolean
    round_digits: number
    show_fill_level: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Scale */
    parent_instance: Range
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Scale */
    add_mark(value: number, position: PositionType, markup?: string | null): void
    clear_marks(): void
    get_digits(): number
    get_draw_value(): boolean
    get_has_origin(): boolean
    get_layout(): Pango.Layout | null
    get_layout_offsets(): [ /* x */ number | null, /* y */ number | null ]
    get_value_pos(): PositionType
    set_digits(digits: number): void
    set_draw_value(draw_value: boolean): void
    set_format_value_func(func?: ScaleFormatValueFunc | null): void
    set_has_origin(has_origin: boolean): void
    set_value_pos(pos: PositionType): void
    /* Methods of Gtk.Range */
    get_adjustment(): Adjustment
    get_fill_level(): number
    get_flippable(): boolean
    get_inverted(): boolean
    get_range_rect(): /* range_rect */ Gdk.Rectangle
    get_restrict_to_fill_level(): boolean
    get_round_digits(): number
    get_show_fill_level(): boolean
    get_slider_range(): [ /* slider_start */ number | null, /* slider_end */ number | null ]
    get_slider_size_fixed(): boolean
    get_value(): number
    set_adjustment(adjustment: Adjustment): void
    set_fill_level(fill_level: number): void
    set_flippable(flippable: boolean): void
    set_increments(step: number, page: number): void
    set_inverted(setting: boolean): void
    set_range(min: number, max: number): void
    set_restrict_to_fill_level(restrict_to_fill_level: boolean): void
    set_round_digits(round_digits: number): void
    set_show_fill_level(show_fill_level: boolean): void
    set_slider_size_fixed(size_fixed: boolean): void
    set_value(value: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Scale */
    vfunc_get_layout_offsets(): [ /* x */ number | null, /* y */ number | null ]
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds(new_value: number): void
    vfunc_change_value(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border(border_: Border): void
    vfunc_move_slider(scroll: ScrollType): void
    vfunc_value_changed(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Range */
    connect(sigName: "adjust-bounds", callback: (($obj: Scale, value: number) => void)): number
    connect_after(sigName: "adjust-bounds", callback: (($obj: Scale, value: number) => void)): number
    emit(sigName: "adjust-bounds", value: number): void
    connect(sigName: "change-value", callback: (($obj: Scale, scroll: ScrollType, value: number) => boolean)): number
    connect_after(sigName: "change-value", callback: (($obj: Scale, scroll: ScrollType, value: number) => boolean)): number
    emit(sigName: "change-value", scroll: ScrollType, value: number): void
    connect(sigName: "move-slider", callback: (($obj: Scale, step: ScrollType) => void)): number
    connect_after(sigName: "move-slider", callback: (($obj: Scale, step: ScrollType) => void)): number
    emit(sigName: "move-slider", step: ScrollType): void
    connect(sigName: "value-changed", callback: (($obj: Scale) => void)): number
    connect_after(sigName: "value-changed", callback: (($obj: Scale) => void)): number
    emit(sigName: "value-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Scale) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Scale) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Scale, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Scale, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Scale) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Scale) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Scale, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Scale, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Scale) => void)): number
    connect_after(sigName: "map", callback: (($obj: Scale) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Scale, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Scale, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Scale, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Scale, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Scale, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Scale, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Scale) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Scale) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Scale) => void)): number
    connect_after(sigName: "show", callback: (($obj: Scale) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Scale, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Scale, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Scale) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Scale) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Scale) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Scale) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::digits", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::digits", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draw-value", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draw-value", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-origin", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-origin", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value-pos", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value-pos", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::adjustment", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::adjustment", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fill-level", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fill-level", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inverted", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inverted", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::restrict-to-fill-level", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::restrict-to-fill-level", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::round-digits", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::round-digits", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-fill-level", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-fill-level", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: Scale, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Scale_ConstructProps)
    _init (config?: Scale_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(orientation: Orientation, adjustment?: Adjustment | null): Scale
    static new_with_range(orientation: Orientation, min: number, max: number, step: number): Scale
    static $gtype: GObject.Type
}
export interface ScaleButton_ConstructProps extends Widget_ConstructProps {
    adjustment?: Adjustment
    icons?: string[]
    value?: number
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class ScaleButton {
    /* Properties of Gtk.ScaleButton */
    adjustment: Adjustment
    icons: string[]
    value: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.ScaleButton */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ScaleButton */
    get_adjustment(): Adjustment
    get_minus_button(): Button
    get_plus_button(): Button
    get_popup(): Widget
    get_value(): number
    set_adjustment(adjustment: Adjustment): void
    set_icons(icons: string[]): void
    set_value(value: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.ScaleButton */
    vfunc_value_changed(value: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ScaleButton */
    connect(sigName: "popdown", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "popdown", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "popdown"): void
    connect(sigName: "popup", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "popup", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "popup"): void
    connect(sigName: "value-changed", callback: (($obj: ScaleButton, value: number) => void)): number
    connect_after(sigName: "value-changed", callback: (($obj: ScaleButton, value: number) => void)): number
    emit(sigName: "value-changed", value: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ScaleButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ScaleButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ScaleButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ScaleButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ScaleButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ScaleButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ScaleButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ScaleButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ScaleButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ScaleButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ScaleButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ScaleButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ScaleButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ScaleButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::adjustment", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::adjustment", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icons", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icons", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: ScaleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ScaleButton_ConstructProps)
    _init (config?: ScaleButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(min: number, max: number, step: number, icons?: string[] | null): ScaleButton
    static $gtype: GObject.Type
}
export interface Scrollbar_ConstructProps extends Widget_ConstructProps {
    adjustment?: Adjustment
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class Scrollbar {
    /* Properties of Gtk.Scrollbar */
    adjustment: Adjustment
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Scrollbar */
    get_adjustment(): Adjustment
    set_adjustment(adjustment?: Adjustment | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Scrollbar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Scrollbar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Scrollbar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Scrollbar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Scrollbar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Scrollbar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Scrollbar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Scrollbar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Scrollbar) => void)): number
    connect_after(sigName: "map", callback: (($obj: Scrollbar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Scrollbar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Scrollbar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Scrollbar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Scrollbar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Scrollbar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Scrollbar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Scrollbar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Scrollbar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Scrollbar) => void)): number
    connect_after(sigName: "show", callback: (($obj: Scrollbar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Scrollbar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Scrollbar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Scrollbar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Scrollbar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Scrollbar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Scrollbar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::adjustment", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::adjustment", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: Scrollbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Scrollbar_ConstructProps)
    _init (config?: Scrollbar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(orientation: Orientation, adjustment?: Adjustment | null): Scrollbar
    static $gtype: GObject.Type
}
export interface ScrolledWindow_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    hadjustment?: Adjustment
    has_frame?: boolean
    hscrollbar_policy?: PolicyType
    kinetic_scrolling?: boolean
    max_content_height?: number
    max_content_width?: number
    min_content_height?: number
    min_content_width?: number
    overlay_scrolling?: boolean
    propagate_natural_height?: boolean
    propagate_natural_width?: boolean
    vadjustment?: Adjustment
    vscrollbar_policy?: PolicyType
    window_placement?: CornerType
    accessible_role?: AccessibleRole
}
export class ScrolledWindow {
    /* Properties of Gtk.ScrolledWindow */
    child: Widget
    hadjustment: Adjustment
    has_frame: boolean
    hscrollbar_policy: PolicyType
    kinetic_scrolling: boolean
    max_content_height: number
    max_content_width: number
    min_content_height: number
    min_content_width: number
    overlay_scrolling: boolean
    propagate_natural_height: boolean
    propagate_natural_width: boolean
    vadjustment: Adjustment
    vscrollbar_policy: PolicyType
    window_placement: CornerType
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ScrolledWindow */
    get_child(): Widget | null
    get_hadjustment(): Adjustment
    get_has_frame(): boolean
    get_hscrollbar(): Widget
    get_kinetic_scrolling(): boolean
    get_max_content_height(): number
    get_max_content_width(): number
    get_min_content_height(): number
    get_min_content_width(): number
    get_overlay_scrolling(): boolean
    get_placement(): CornerType
    get_policy(): [ /* hscrollbar_policy */ PolicyType | null, /* vscrollbar_policy */ PolicyType | null ]
    get_propagate_natural_height(): boolean
    get_propagate_natural_width(): boolean
    get_vadjustment(): Adjustment
    get_vscrollbar(): Widget
    set_child(child?: Widget | null): void
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_has_frame(has_frame: boolean): void
    set_kinetic_scrolling(kinetic_scrolling: boolean): void
    set_max_content_height(height: number): void
    set_max_content_width(width: number): void
    set_min_content_height(height: number): void
    set_min_content_width(width: number): void
    set_overlay_scrolling(overlay_scrolling: boolean): void
    set_placement(window_placement: CornerType): void
    set_policy(hscrollbar_policy: PolicyType, vscrollbar_policy: PolicyType): void
    set_propagate_natural_height(propagate: boolean): void
    set_propagate_natural_width(propagate: boolean): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    unset_placement(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ScrolledWindow */
    connect(sigName: "edge-overshot", callback: (($obj: ScrolledWindow, pos: PositionType) => void)): number
    connect_after(sigName: "edge-overshot", callback: (($obj: ScrolledWindow, pos: PositionType) => void)): number
    emit(sigName: "edge-overshot", pos: PositionType): void
    connect(sigName: "edge-reached", callback: (($obj: ScrolledWindow, pos: PositionType) => void)): number
    connect_after(sigName: "edge-reached", callback: (($obj: ScrolledWindow, pos: PositionType) => void)): number
    emit(sigName: "edge-reached", pos: PositionType): void
    connect(sigName: "move-focus-out", callback: (($obj: ScrolledWindow, direction_type: DirectionType) => void)): number
    connect_after(sigName: "move-focus-out", callback: (($obj: ScrolledWindow, direction_type: DirectionType) => void)): number
    emit(sigName: "move-focus-out", direction_type: DirectionType): void
    connect(sigName: "scroll-child", callback: (($obj: ScrolledWindow, scroll: ScrollType, horizontal: boolean) => boolean)): number
    connect_after(sigName: "scroll-child", callback: (($obj: ScrolledWindow, scroll: ScrollType, horizontal: boolean) => boolean)): number
    emit(sigName: "scroll-child", scroll: ScrollType, horizontal: boolean): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ScrolledWindow) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ScrolledWindow) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ScrolledWindow, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ScrolledWindow, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ScrolledWindow) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ScrolledWindow) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ScrolledWindow, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ScrolledWindow, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ScrolledWindow) => void)): number
    connect_after(sigName: "map", callback: (($obj: ScrolledWindow) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ScrolledWindow, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ScrolledWindow, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ScrolledWindow, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ScrolledWindow, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ScrolledWindow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ScrolledWindow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ScrolledWindow) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ScrolledWindow) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ScrolledWindow) => void)): number
    connect_after(sigName: "show", callback: (($obj: ScrolledWindow) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ScrolledWindow, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ScrolledWindow, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ScrolledWindow) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ScrolledWindow) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ScrolledWindow) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ScrolledWindow) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscrollbar-policy", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscrollbar-policy", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::kinetic-scrolling", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::kinetic-scrolling", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-content-height", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-content-height", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-content-width", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-content-width", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-content-height", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-content-height", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-content-width", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-content-width", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overlay-scrolling", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overlay-scrolling", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagate-natural-height", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagate-natural-height", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagate-natural-width", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagate-natural-width", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscrollbar-policy", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscrollbar-policy", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::window-placement", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::window-placement", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ScrolledWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ScrolledWindow_ConstructProps)
    _init (config?: ScrolledWindow_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ScrolledWindow
    static $gtype: GObject.Type
}
export interface SearchBar_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    key_capture_widget?: Widget
    search_mode_enabled?: boolean
    show_close_button?: boolean
    accessible_role?: AccessibleRole
}
export class SearchBar {
    /* Properties of Gtk.SearchBar */
    child: Widget
    key_capture_widget: Widget
    search_mode_enabled: boolean
    show_close_button: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SearchBar */
    connect_entry(entry: Editable): void
    get_child(): Widget | null
    get_key_capture_widget(): Widget
    get_search_mode(): boolean
    get_show_close_button(): boolean
    set_child(child?: Widget | null): void
    set_key_capture_widget(widget?: Widget | null): void
    set_search_mode(search_mode: boolean): void
    set_show_close_button(visible: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: SearchBar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: SearchBar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: SearchBar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: SearchBar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: SearchBar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: SearchBar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: SearchBar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: SearchBar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: SearchBar) => void)): number
    connect_after(sigName: "map", callback: (($obj: SearchBar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: SearchBar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: SearchBar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: SearchBar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: SearchBar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: SearchBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: SearchBar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: SearchBar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: SearchBar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: SearchBar) => void)): number
    connect_after(sigName: "show", callback: (($obj: SearchBar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: SearchBar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: SearchBar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: SearchBar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: SearchBar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: SearchBar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: SearchBar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::key-capture-widget", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-capture-widget", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::search-mode-enabled", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search-mode-enabled", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-close-button", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-close-button", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: SearchBar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SearchBar_ConstructProps)
    _init (config?: SearchBar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SearchBar
    static $gtype: GObject.Type
}
export interface SearchEntry_ConstructProps extends Widget_ConstructProps {
    activates_default?: boolean
    placeholder_text?: string
    accessible_role?: AccessibleRole
    editable?: boolean
    enable_undo?: boolean
    max_width_chars?: number
    text?: string
    width_chars?: number
    xalign?: number
}
export class SearchEntry {
    /* Properties of Gtk.SearchEntry */
    activates_default: boolean
    placeholder_text: string
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Editable */
    readonly cursor_position: number
    editable: boolean
    enable_undo: boolean
    max_width_chars: number
    readonly selection_bound: number
    text: string
    width_chars: number
    xalign: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SearchEntry */
    get_key_capture_widget(): Widget
    set_key_capture_widget(widget?: Widget | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Editable */
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    finish_delegate(): void
    get_alignment(): number
    get_chars(start_pos: number, end_pos: number): string
    get_delegate(): Editable | null
    get_editable(): boolean
    get_enable_undo(): boolean
    get_max_width_chars(): number
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    get_text(): string
    get_width_chars(): number
    init_delegate(): void
    insert_text(text: string, length: number, position: number): /* position */ number
    select_region(start_pos: number, end_pos: number): void
    set_alignment(xalign: number): void
    set_editable(is_editable: boolean): void
    set_enable_undo(enable_undo: boolean): void
    set_max_width_chars(n_chars: number): void
    set_position(position: number): void
    set_text(text: string): void
    set_width_chars(n_chars: number): void
    /* Virtual methods of Gtk.SearchEntry */
    vfunc_changed(): void
    vfunc_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_get_delegate(): Editable | null
    vfunc_get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    vfunc_get_text(): string
    vfunc_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_set_selection_bounds(start_pos: number, end_pos: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.SearchEntry */
    connect(sigName: "activate", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "activate", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "next-match", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "next-match", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "next-match"): void
    connect(sigName: "previous-match", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "previous-match", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "previous-match"): void
    connect(sigName: "search-changed", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "search-changed", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "search-changed"): void
    connect(sigName: "search-started", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "search-started", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "search-started"): void
    connect(sigName: "stop-search", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "stop-search", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "stop-search"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: SearchEntry, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: SearchEntry, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "hide", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: SearchEntry, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: SearchEntry, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "map", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: SearchEntry, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: SearchEntry, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: SearchEntry, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: SearchEntry, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: SearchEntry, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: SearchEntry, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "realize", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "show", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: SearchEntry, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: SearchEntry, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: (($obj: SearchEntry) => void)): number
    connect_after(sigName: "changed", callback: (($obj: SearchEntry) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "delete-text", callback: (($obj: SearchEntry, start_pos: number, end_pos: number) => void)): number
    connect_after(sigName: "delete-text", callback: (($obj: SearchEntry, start_pos: number, end_pos: number) => void)): number
    emit(sigName: "delete-text", start_pos: number, end_pos: number): void
    connect(sigName: "insert-text", callback: (($obj: SearchEntry, text: string, length: number, position: number) => void)): number
    connect_after(sigName: "insert-text", callback: (($obj: SearchEntry, text: string, length: number, position: number) => void)): number
    emit(sigName: "insert-text", text: string, length: number, position: number): void
    connect(sigName: "notify::activates-default", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activates-default", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder-text", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder-text", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor-position", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-position", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-undo", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-undo", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-bound", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-bound", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: SearchEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SearchEntry_ConstructProps)
    _init (config?: SearchEntry_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SearchEntry
    static delegate_get_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static delegate_set_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static install_properties(object_class: GObject.ObjectClass, first_prop: number): number
    static $gtype: GObject.Type
}
export interface SelectionFilterModel_ConstructProps extends GObject.Object_ConstructProps {
    model?: SelectionModel
}
export class SelectionFilterModel {
    /* Properties of Gtk.SelectionFilterModel */
    model: SelectionModel
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SelectionFilterModel */
    get_model(): SelectionModel | null
    set_model(model?: SelectionModel | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.SelectionFilterModel */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SelectionFilterModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SelectionFilterModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: SelectionFilterModel, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: SelectionFilterModel, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::model", callback: (($obj: SelectionFilterModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: SelectionFilterModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SelectionFilterModel_ConstructProps)
    _init (config?: SelectionFilterModel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: SelectionModel | null): SelectionFilterModel
    static $gtype: GObject.Type
}
export interface Separator_ConstructProps extends Widget_ConstructProps {
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class Separator {
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Separator) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Separator) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Separator, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Separator, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Separator) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Separator) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Separator, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Separator, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Separator) => void)): number
    connect_after(sigName: "map", callback: (($obj: Separator) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Separator, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Separator, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Separator, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Separator, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Separator, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Separator, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Separator) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Separator) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Separator) => void)): number
    connect_after(sigName: "show", callback: (($obj: Separator) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Separator, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Separator, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Separator) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Separator) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Separator) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Separator) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::can-focus", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: Separator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Separator_ConstructProps)
    _init (config?: Separator_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(orientation: Orientation): Separator
    static $gtype: GObject.Type
}
export interface Settings_ConstructProps extends GObject.Object_ConstructProps {
    gtk_alternative_button_order?: boolean
    gtk_alternative_sort_arrows?: boolean
    gtk_application_prefer_dark_theme?: boolean
    gtk_cursor_aspect_ratio?: number
    gtk_cursor_blink?: boolean
    gtk_cursor_blink_time?: number
    gtk_cursor_blink_timeout?: number
    gtk_cursor_theme_name?: string
    gtk_cursor_theme_size?: number
    gtk_decoration_layout?: string
    gtk_dialogs_use_header?: boolean
    gtk_dnd_drag_threshold?: number
    gtk_double_click_distance?: number
    gtk_double_click_time?: number
    gtk_enable_accels?: boolean
    gtk_enable_animations?: boolean
    gtk_enable_event_sounds?: boolean
    gtk_enable_input_feedback_sounds?: boolean
    gtk_enable_primary_paste?: boolean
    gtk_entry_password_hint_timeout?: number
    gtk_entry_select_on_focus?: boolean
    gtk_error_bell?: boolean
    gtk_font_name?: string
    gtk_fontconfig_timestamp?: number
    gtk_icon_theme_name?: string
    gtk_im_module?: string
    gtk_keynav_use_caret?: boolean
    gtk_label_select_on_focus?: boolean
    gtk_long_press_time?: number
    gtk_overlay_scrolling?: boolean
    gtk_primary_button_warps_slider?: boolean
    gtk_print_backends?: string
    gtk_print_preview_command?: string
    gtk_recent_files_enabled?: boolean
    gtk_recent_files_max_age?: number
    gtk_shell_shows_app_menu?: boolean
    gtk_shell_shows_desktop?: boolean
    gtk_shell_shows_menubar?: boolean
    gtk_sound_theme_name?: string
    gtk_split_cursor?: boolean
    gtk_theme_name?: string
    gtk_titlebar_double_click?: string
    gtk_titlebar_middle_click?: string
    gtk_titlebar_right_click?: string
    gtk_xft_antialias?: number
    gtk_xft_dpi?: number
    gtk_xft_hinting?: number
    gtk_xft_hintstyle?: string
    gtk_xft_rgba?: string
}
export class Settings {
    /* Properties of Gtk.Settings */
    gtk_alternative_button_order: boolean
    gtk_alternative_sort_arrows: boolean
    gtk_application_prefer_dark_theme: boolean
    gtk_cursor_aspect_ratio: number
    gtk_cursor_blink: boolean
    gtk_cursor_blink_time: number
    gtk_cursor_blink_timeout: number
    gtk_cursor_theme_name: string
    gtk_cursor_theme_size: number
    gtk_decoration_layout: string
    gtk_dialogs_use_header: boolean
    gtk_dnd_drag_threshold: number
    gtk_double_click_distance: number
    gtk_double_click_time: number
    gtk_enable_accels: boolean
    gtk_enable_animations: boolean
    gtk_enable_event_sounds: boolean
    gtk_enable_input_feedback_sounds: boolean
    gtk_enable_primary_paste: boolean
    gtk_entry_password_hint_timeout: number
    gtk_entry_select_on_focus: boolean
    gtk_error_bell: boolean
    gtk_font_name: string
    gtk_fontconfig_timestamp: number
    gtk_icon_theme_name: string
    gtk_im_module: string
    gtk_keynav_use_caret: boolean
    gtk_label_select_on_focus: boolean
    gtk_long_press_time: number
    gtk_overlay_scrolling: boolean
    gtk_primary_button_warps_slider: boolean
    gtk_print_backends: string
    gtk_print_preview_command: string
    gtk_recent_files_enabled: boolean
    gtk_recent_files_max_age: number
    gtk_shell_shows_app_menu: boolean
    gtk_shell_shows_desktop: boolean
    gtk_shell_shows_menubar: boolean
    gtk_sound_theme_name: string
    gtk_split_cursor: boolean
    gtk_theme_name: string
    gtk_titlebar_double_click: string
    gtk_titlebar_middle_click: string
    gtk_titlebar_right_click: string
    gtk_xft_antialias: number
    gtk_xft_dpi: number
    gtk_xft_hinting: number
    gtk_xft_hintstyle: string
    gtk_xft_rgba: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Settings */
    reset_property(name: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.StyleProvider */
    connect(sigName: "gtk-private-changed", callback: (($obj: Settings) => void)): number
    connect_after(sigName: "gtk-private-changed", callback: (($obj: Settings) => void)): number
    emit(sigName: "gtk-private-changed"): void
    connect(sigName: "notify::gtk-alternative-button-order", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-alternative-button-order", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-alternative-sort-arrows", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-alternative-sort-arrows", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-application-prefer-dark-theme", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-application-prefer-dark-theme", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-cursor-aspect-ratio", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-cursor-aspect-ratio", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-cursor-blink", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-cursor-blink", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-cursor-blink-time", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-cursor-blink-time", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-cursor-blink-timeout", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-cursor-blink-timeout", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-cursor-theme-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-cursor-theme-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-cursor-theme-size", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-cursor-theme-size", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-decoration-layout", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-decoration-layout", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-dialogs-use-header", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-dialogs-use-header", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-dnd-drag-threshold", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-dnd-drag-threshold", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-double-click-distance", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-double-click-distance", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-double-click-time", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-double-click-time", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-enable-accels", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-enable-accels", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-enable-animations", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-enable-animations", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-enable-event-sounds", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-enable-event-sounds", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-enable-input-feedback-sounds", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-enable-input-feedback-sounds", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-enable-primary-paste", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-enable-primary-paste", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-entry-password-hint-timeout", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-entry-password-hint-timeout", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-entry-select-on-focus", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-entry-select-on-focus", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-error-bell", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-error-bell", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-font-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-font-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-fontconfig-timestamp", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-fontconfig-timestamp", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-icon-theme-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-icon-theme-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-im-module", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-im-module", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-keynav-use-caret", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-keynav-use-caret", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-label-select-on-focus", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-label-select-on-focus", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-long-press-time", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-long-press-time", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-overlay-scrolling", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-overlay-scrolling", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-primary-button-warps-slider", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-primary-button-warps-slider", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-print-backends", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-print-backends", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-print-preview-command", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-print-preview-command", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-recent-files-enabled", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-recent-files-enabled", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-recent-files-max-age", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-recent-files-max-age", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-shell-shows-app-menu", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-shell-shows-app-menu", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-shell-shows-desktop", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-shell-shows-desktop", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-shell-shows-menubar", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-shell-shows-menubar", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-sound-theme-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-sound-theme-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-split-cursor", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-split-cursor", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-theme-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-theme-name", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-titlebar-double-click", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-titlebar-double-click", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-titlebar-middle-click", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-titlebar-middle-click", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-titlebar-right-click", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-titlebar-right-click", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-xft-antialias", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-xft-antialias", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-xft-dpi", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-xft-dpi", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-xft-hinting", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-xft-hinting", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-xft-hintstyle", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-xft-hintstyle", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::gtk-xft-rgba", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::gtk-xft-rgba", callback: (($obj: Settings, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Settings_ConstructProps)
    _init (config?: Settings_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get_default(): Settings | null
    static get_for_display(display: Gdk.Display): Settings
    static $gtype: GObject.Type
}
export interface Shortcut_ConstructProps extends GObject.Object_ConstructProps {
    action?: ShortcutAction
    "arguments"?: GLib.Variant
    trigger?: ShortcutTrigger
}
export class Shortcut {
    /* Properties of Gtk.Shortcut */
    action: ShortcutAction
    "arguments": GLib.Variant
    trigger: ShortcutTrigger
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Shortcut */
    get_action(): ShortcutAction | null
    get_arguments(): GLib.Variant | null
    get_trigger(): ShortcutTrigger | null
    set_action(action?: ShortcutAction | null): void
    set_arguments(args?: GLib.Variant | null): void
    set_trigger(trigger?: ShortcutTrigger | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Shortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Shortcut, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::action", callback: (($obj: Shortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action", callback: (($obj: Shortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::arguments", callback: (($obj: Shortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::arguments", callback: (($obj: Shortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::trigger", callback: (($obj: Shortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::trigger", callback: (($obj: Shortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Shortcut_ConstructProps)
    _init (config?: Shortcut_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(trigger?: ShortcutTrigger | null, action?: ShortcutAction | null): Shortcut
    static $gtype: GObject.Type
}
export interface ShortcutAction_ConstructProps extends GObject.Object_ConstructProps {
}
export class ShortcutAction {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutAction */
    activate(flags: ShortcutActionFlags, widget: Widget, args?: GLib.Variant | null): boolean
    print(string: GLib.String): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ShortcutAction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ShortcutAction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ShortcutAction_ConstructProps)
    _init (config?: ShortcutAction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static parse_string(string: string): ShortcutAction
    static $gtype: GObject.Type
}
export interface ShortcutController_ConstructProps extends EventController_ConstructProps {
    mnemonic_modifiers?: Gdk.ModifierType
    model?: Gio.ListModel
    scope?: ShortcutScope
}
export class ShortcutController {
    /* Properties of Gtk.ShortcutController */
    mnemonic_modifiers: Gdk.ModifierType
    scope: ShortcutScope
    /* Properties of Gtk.EventController */
    name: string
    propagation_limit: PropagationLimit
    propagation_phase: PropagationPhase
    readonly widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutController */
    add_shortcut(shortcut: Shortcut): void
    get_mnemonics_modifiers(): Gdk.ModifierType
    get_scope(): ShortcutScope
    remove_shortcut(shortcut: Shortcut): void
    set_mnemonics_modifiers(modifiers: Gdk.ModifierType): void
    set_scope(scope: ShortcutScope): void
    /* Methods of Gtk.EventController */
    get_current_event(): Gdk.Event | null
    get_current_event_device(): Gdk.Device | null
    get_current_event_state(): Gdk.ModifierType
    get_current_event_time(): number
    get_name(): string
    get_propagation_limit(): PropagationLimit
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    reset(): void
    set_name(name: string): void
    set_propagation_limit(limit: PropagationLimit): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.ShortcutController */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: ShortcutController, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: ShortcutController, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::mnemonic-modifiers", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonic-modifiers", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scope", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scope", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-limit", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-limit", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagation-phase", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagation-phase", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: ShortcutController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ShortcutController_ConstructProps)
    _init (config?: ShortcutController_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ShortcutController
    static new_for_model(model: Gio.ListModel): ShortcutController
    static $gtype: GObject.Type
}
export interface ShortcutLabel_ConstructProps extends Widget_ConstructProps {
    accelerator?: string
    disabled_text?: string
    accessible_role?: AccessibleRole
}
export class ShortcutLabel {
    /* Properties of Gtk.ShortcutLabel */
    accelerator: string
    disabled_text: string
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutLabel */
    get_accelerator(): string | null
    get_disabled_text(): string | null
    set_accelerator(accelerator: string): void
    set_disabled_text(disabled_text: string): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ShortcutLabel) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ShortcutLabel) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ShortcutLabel, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ShortcutLabel, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ShortcutLabel) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ShortcutLabel) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ShortcutLabel, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ShortcutLabel, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ShortcutLabel) => void)): number
    connect_after(sigName: "map", callback: (($obj: ShortcutLabel) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ShortcutLabel, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ShortcutLabel, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ShortcutLabel, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ShortcutLabel, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ShortcutLabel, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ShortcutLabel, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ShortcutLabel) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ShortcutLabel) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ShortcutLabel) => void)): number
    connect_after(sigName: "show", callback: (($obj: ShortcutLabel) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ShortcutLabel, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ShortcutLabel, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ShortcutLabel) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ShortcutLabel) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ShortcutLabel) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ShortcutLabel) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accelerator", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accelerator", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled-text", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled-text", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ShortcutLabel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ShortcutLabel_ConstructProps)
    _init (config?: ShortcutLabel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(accelerator: string): ShortcutLabel
    static $gtype: GObject.Type
}
export interface ShortcutTrigger_ConstructProps extends GObject.Object_ConstructProps {
}
export class ShortcutTrigger {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ShortcutTrigger */
    compare(trigger2: ShortcutTrigger): number
    equal(trigger2: ShortcutTrigger): boolean
    hash(): number
    print(string: GLib.String): void
    print_label(display: Gdk.Display, string: GLib.String): boolean
    to_label(display: Gdk.Display): string
    to_string(): string
    trigger(event: Gdk.Event, enable_mnemonics: boolean): Gdk.KeyMatch
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ShortcutTrigger, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ShortcutTrigger, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ShortcutTrigger_ConstructProps)
    _init (config?: ShortcutTrigger_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static parse_string(string: string): ShortcutTrigger
    static $gtype: GObject.Type
}
export interface ShortcutsGroup_ConstructProps extends Box_ConstructProps {
    accel_size_group?: SizeGroup
    title?: string
    title_size_group?: SizeGroup
    view?: string
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class ShortcutsGroup {
    /* Properties of Gtk.ShortcutsGroup */
    accel_size_group: SizeGroup
    readonly height: number
    title: string
    title_size_group: SizeGroup
    view: string
    /* Properties of Gtk.Box */
    baseline_position: BaselinePosition
    homogeneous: boolean
    spacing: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Box */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Box */
    append(child: Widget): void
    get_baseline_position(): BaselinePosition
    get_homogeneous(): boolean
    get_spacing(): number
    insert_child_after(child: Widget, sibling?: Widget | null): void
    prepend(child: Widget): void
    remove(child: Widget): void
    reorder_child_after(child: Widget, sibling?: Widget | null): void
    set_baseline_position(position: BaselinePosition): void
    set_homogeneous(homogeneous: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ShortcutsGroup) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ShortcutsGroup) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ShortcutsGroup, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ShortcutsGroup, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ShortcutsGroup) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ShortcutsGroup) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ShortcutsGroup, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ShortcutsGroup, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ShortcutsGroup) => void)): number
    connect_after(sigName: "map", callback: (($obj: ShortcutsGroup) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ShortcutsGroup, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ShortcutsGroup, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ShortcutsGroup, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ShortcutsGroup, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ShortcutsGroup, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ShortcutsGroup, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ShortcutsGroup) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ShortcutsGroup) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ShortcutsGroup) => void)): number
    connect_after(sigName: "show", callback: (($obj: ShortcutsGroup) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ShortcutsGroup, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ShortcutsGroup, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ShortcutsGroup) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ShortcutsGroup) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ShortcutsGroup) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ShortcutsGroup) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accel-size-group", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accel-size-group", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title-size-group", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title-size-group", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::view", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::baseline-position", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::baseline-position", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::homogeneous", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::homogeneous", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spacing", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spacing", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ShortcutsGroup_ConstructProps)
    _init (config?: ShortcutsGroup_ConstructProps): void
    static $gtype: GObject.Type
}
export interface ShortcutsSection_ConstructProps extends Box_ConstructProps {
    max_height?: number
    section_name?: string
    title?: string
    view_name?: string
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class ShortcutsSection {
    /* Properties of Gtk.ShortcutsSection */
    max_height: number
    section_name: string
    title: string
    view_name: string
    /* Properties of Gtk.Box */
    baseline_position: BaselinePosition
    homogeneous: boolean
    spacing: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Box */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Box */
    append(child: Widget): void
    get_baseline_position(): BaselinePosition
    get_homogeneous(): boolean
    get_spacing(): number
    insert_child_after(child: Widget, sibling?: Widget | null): void
    prepend(child: Widget): void
    remove(child: Widget): void
    reorder_child_after(child: Widget, sibling?: Widget | null): void
    set_baseline_position(position: BaselinePosition): void
    set_homogeneous(homogeneous: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ShortcutsSection */
    connect(sigName: "change-current-page", callback: (($obj: ShortcutsSection, object: number) => boolean)): number
    connect_after(sigName: "change-current-page", callback: (($obj: ShortcutsSection, object: number) => boolean)): number
    emit(sigName: "change-current-page", object: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ShortcutsSection) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ShortcutsSection) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ShortcutsSection, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ShortcutsSection, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ShortcutsSection) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ShortcutsSection) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ShortcutsSection, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ShortcutsSection, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ShortcutsSection) => void)): number
    connect_after(sigName: "map", callback: (($obj: ShortcutsSection) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ShortcutsSection, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ShortcutsSection, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ShortcutsSection, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ShortcutsSection, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ShortcutsSection, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ShortcutsSection, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ShortcutsSection) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ShortcutsSection) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ShortcutsSection) => void)): number
    connect_after(sigName: "show", callback: (($obj: ShortcutsSection) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ShortcutsSection, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ShortcutsSection, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ShortcutsSection) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ShortcutsSection) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ShortcutsSection) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ShortcutsSection) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::max-height", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-height", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::section-name", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::section-name", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::view-name", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view-name", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::baseline-position", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::baseline-position", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::homogeneous", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::homogeneous", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spacing", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spacing", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: ShortcutsSection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ShortcutsSection_ConstructProps)
    _init (config?: ShortcutsSection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface ShortcutsShortcut_ConstructProps extends Widget_ConstructProps {
    accel_size_group?: SizeGroup
    accelerator?: string
    action_name?: string
    direction?: TextDirection
    icon?: Gio.Icon
    icon_set?: boolean
    shortcut_type?: ShortcutType
    subtitle?: string
    subtitle_set?: boolean
    title?: string
    title_size_group?: SizeGroup
    accessible_role?: AccessibleRole
}
export class ShortcutsShortcut {
    /* Properties of Gtk.ShortcutsShortcut */
    accel_size_group: SizeGroup
    accelerator: string
    action_name: string
    direction: TextDirection
    icon: Gio.Icon
    icon_set: boolean
    shortcut_type: ShortcutType
    subtitle: string
    subtitle_set: boolean
    title: string
    title_size_group: SizeGroup
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ShortcutsShortcut) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ShortcutsShortcut) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ShortcutsShortcut, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ShortcutsShortcut, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ShortcutsShortcut) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ShortcutsShortcut) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ShortcutsShortcut, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ShortcutsShortcut, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ShortcutsShortcut) => void)): number
    connect_after(sigName: "map", callback: (($obj: ShortcutsShortcut) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ShortcutsShortcut, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ShortcutsShortcut, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ShortcutsShortcut, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ShortcutsShortcut, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ShortcutsShortcut, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ShortcutsShortcut, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ShortcutsShortcut) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ShortcutsShortcut) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ShortcutsShortcut) => void)): number
    connect_after(sigName: "show", callback: (($obj: ShortcutsShortcut) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ShortcutsShortcut, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ShortcutsShortcut, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ShortcutsShortcut) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ShortcutsShortcut) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ShortcutsShortcut) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ShortcutsShortcut) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accel-size-group", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accel-size-group", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accelerator", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accelerator", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-name", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::direction", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::direction", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-set", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-set", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shortcut-type", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shortcut-type", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::subtitle", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::subtitle", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::subtitle-set", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::subtitle-set", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title-size-group", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title-size-group", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ShortcutsShortcut_ConstructProps)
    _init (config?: ShortcutsShortcut_ConstructProps): void
    static $gtype: GObject.Type
}
export interface ShortcutsWindow_ConstructProps extends Window_ConstructProps {
    section_name?: string
    view_name?: string
    accessible_role?: AccessibleRole
}
export class ShortcutsWindow {
    /* Properties of Gtk.ShortcutsWindow */
    section_name: string
    view_name: string
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Window */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ShortcutsWindow */
    connect(sigName: "close", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "close", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "close"): void
    connect(sigName: "search", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "search", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "search"): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: ShortcutsWindow) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: ShortcutsWindow) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: ShortcutsWindow, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: ShortcutsWindow, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ShortcutsWindow, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ShortcutsWindow, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ShortcutsWindow, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ShortcutsWindow, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "map", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ShortcutsWindow, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ShortcutsWindow, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ShortcutsWindow, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ShortcutsWindow, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ShortcutsWindow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ShortcutsWindow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "show", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ShortcutsWindow, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ShortcutsWindow, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ShortcutsWindow) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ShortcutsWindow) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::section-name", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::section-name", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::view-name", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view-name", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::application", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ShortcutsWindow_ConstructProps)
    _init (config?: ShortcutsWindow_ConstructProps): void
    static $gtype: GObject.Type
}
export interface SignalAction_ConstructProps extends ShortcutAction_ConstructProps {
    signal_name?: string
}
export class SignalAction {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SignalAction */
    get_signal_name(): string
    /* Methods of Gtk.ShortcutAction */
    activate(flags: ShortcutActionFlags, widget: Widget, args?: GLib.Variant | null): boolean
    print(string: GLib.String): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SignalAction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SignalAction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SignalAction_ConstructProps)
    _init (config?: SignalAction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(signal_name: string): SignalAction
    static $gtype: GObject.Type
}
export interface SignalListItemFactory_ConstructProps extends ListItemFactory_ConstructProps {
}
export class SignalListItemFactory {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.SignalListItemFactory */
    connect(sigName: "bind", callback: (($obj: SignalListItemFactory, listitem: ListItem) => void)): number
    connect_after(sigName: "bind", callback: (($obj: SignalListItemFactory, listitem: ListItem) => void)): number
    emit(sigName: "bind", listitem: ListItem): void
    connect(sigName: "setup", callback: (($obj: SignalListItemFactory, listitem: ListItem) => void)): number
    connect_after(sigName: "setup", callback: (($obj: SignalListItemFactory, listitem: ListItem) => void)): number
    emit(sigName: "setup", listitem: ListItem): void
    connect(sigName: "teardown", callback: (($obj: SignalListItemFactory, listitem: ListItem) => void)): number
    connect_after(sigName: "teardown", callback: (($obj: SignalListItemFactory, listitem: ListItem) => void)): number
    emit(sigName: "teardown", listitem: ListItem): void
    connect(sigName: "unbind", callback: (($obj: SignalListItemFactory, listitem: ListItem) => void)): number
    connect_after(sigName: "unbind", callback: (($obj: SignalListItemFactory, listitem: ListItem) => void)): number
    emit(sigName: "unbind", listitem: ListItem): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SignalListItemFactory, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SignalListItemFactory, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SignalListItemFactory_ConstructProps)
    _init (config?: SignalListItemFactory_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SignalListItemFactory
    static $gtype: GObject.Type
}
export interface SingleSelection_ConstructProps extends GObject.Object_ConstructProps {
    autoselect?: boolean
    can_unselect?: boolean
    model?: Gio.ListModel
    selected?: number
}
export class SingleSelection {
    /* Properties of Gtk.SingleSelection */
    autoselect: boolean
    can_unselect: boolean
    model: Gio.ListModel
    selected: number
    readonly selected_item: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SingleSelection */
    get_autoselect(): boolean
    get_can_unselect(): boolean
    get_model(): Gio.ListModel
    get_selected(): number
    get_selected_item(): GObject.Object | null
    set_autoselect(autoselect: boolean): void
    set_can_unselect(can_unselect: boolean): void
    set_model(model?: Gio.ListModel | null): void
    set_selected(position: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.SelectionModel */
    get_selection(): Bitset
    get_selection_in_range(position: number, n_items: number): Bitset
    is_selected(position: number): boolean
    select_all(): boolean
    select_item(position: number, unselect_rest: boolean): boolean
    select_range(position: number, n_items: number, unselect_rest: boolean): boolean
    selection_changed(position: number, n_items: number): void
    set_selection(selected: Bitset, mask: Bitset): boolean
    unselect_all(): boolean
    unselect_item(position: number): boolean
    unselect_range(position: number, n_items: number): boolean
    /* Virtual methods of Gtk.SingleSelection */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_get_selection_in_range(position: number, n_items: number): Bitset
    vfunc_is_selected(position: number): boolean
    vfunc_select_all(): boolean
    vfunc_select_item(position: number, unselect_rest: boolean): boolean
    vfunc_select_range(position: number, n_items: number, unselect_rest: boolean): boolean
    vfunc_set_selection(selected: Bitset, mask: Bitset): boolean
    vfunc_unselect_all(): boolean
    vfunc_unselect_item(position: number): boolean
    vfunc_unselect_range(position: number, n_items: number): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: SingleSelection, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: SingleSelection, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    /* Signals of Gtk.SelectionModel */
    connect(sigName: "selection-changed", callback: (($obj: SingleSelection, position: number, n_items: number) => void)): number
    connect_after(sigName: "selection-changed", callback: (($obj: SingleSelection, position: number, n_items: number) => void)): number
    emit(sigName: "selection-changed", position: number, n_items: number): void
    connect(sigName: "notify::autoselect", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autoselect", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-unselect", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-unselect", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected-item", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-item", callback: (($obj: SingleSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SingleSelection_ConstructProps)
    _init (config?: SingleSelection_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: Gio.ListModel | null): SingleSelection
    static $gtype: GObject.Type
}
export interface SizeGroup_ConstructProps extends GObject.Object_ConstructProps {
    mode?: SizeGroupMode
}
export class SizeGroup {
    /* Properties of Gtk.SizeGroup */
    mode: SizeGroupMode
    /* Fields of Gtk.SizeGroup */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SizeGroup */
    add_widget(widget: Widget): void
    get_mode(): SizeGroupMode
    get_widgets(): Widget[]
    remove_widget(widget: Widget): void
    set_mode(mode: SizeGroupMode): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.SizeGroup */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SizeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SizeGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::mode", callback: (($obj: SizeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: SizeGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SizeGroup_ConstructProps)
    _init (config?: SizeGroup_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(mode: SizeGroupMode): SizeGroup
    static $gtype: GObject.Type
}
export interface SliceListModel_ConstructProps extends GObject.Object_ConstructProps {
    model?: Gio.ListModel
    offset?: number
    size?: number
}
export class SliceListModel {
    /* Properties of Gtk.SliceListModel */
    model: Gio.ListModel
    offset: number
    size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SliceListModel */
    get_model(): Gio.ListModel | null
    get_offset(): number
    get_size(): number
    set_model(model?: Gio.ListModel | null): void
    set_offset(offset: number): void
    set_size(size: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.SliceListModel */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SliceListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SliceListModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: SliceListModel, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: SliceListModel, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::model", callback: (($obj: SliceListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: SliceListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset", callback: (($obj: SliceListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset", callback: (($obj: SliceListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: SliceListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SliceListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SliceListModel_ConstructProps)
    _init (config?: SliceListModel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model: Gio.ListModel | null, offset: number, size: number): SliceListModel
    static $gtype: GObject.Type
}
export interface Snapshot_ConstructProps extends Gdk.Snapshot_ConstructProps {
}
export class Snapshot {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Snapshot */
    append_border(outline: Gsk.RoundedRect, border_width: number[], border_color: Gdk.RGBA[]): void
    append_cairo(bounds: Graphene.Rect): cairo.Context
    append_color(color: Gdk.RGBA, bounds: Graphene.Rect): void
    append_conic_gradient(bounds: Graphene.Rect, center: Graphene.Point, rotation: number, stops: Gsk.ColorStop[]): void
    append_inset_shadow(outline: Gsk.RoundedRect, color: Gdk.RGBA, dx: number, dy: number, spread: number, blur_radius: number): void
    append_layout(layout: Pango.Layout, color: Gdk.RGBA): void
    append_linear_gradient(bounds: Graphene.Rect, start_point: Graphene.Point, end_point: Graphene.Point, stops: Gsk.ColorStop[]): void
    append_node(node: Gsk.RenderNode): void
    append_outset_shadow(outline: Gsk.RoundedRect, color: Gdk.RGBA, dx: number, dy: number, spread: number, blur_radius: number): void
    append_radial_gradient(bounds: Graphene.Rect, center: Graphene.Point, hradius: number, vradius: number, start: number, end: number, stops: Gsk.ColorStop[]): void
    append_repeating_linear_gradient(bounds: Graphene.Rect, start_point: Graphene.Point, end_point: Graphene.Point, stops: Gsk.ColorStop[]): void
    append_repeating_radial_gradient(bounds: Graphene.Rect, center: Graphene.Point, hradius: number, vradius: number, start: number, end: number, stops: Gsk.ColorStop[]): void
    append_texture(texture: Gdk.Texture, bounds: Graphene.Rect): void
    gl_shader_pop_texture(): void
    perspective(depth: number): void
    pop(): void
    push_blend(blend_mode: Gsk.BlendMode): void
    push_blur(radius: number): void
    push_clip(bounds: Graphene.Rect): void
    push_color_matrix(color_matrix: Graphene.Matrix, color_offset: Graphene.Vec4): void
    push_cross_fade(progress: number): void
    push_gl_shader(shader: Gsk.GLShader, bounds: Graphene.Rect, take_args: GLib.Bytes): void
    push_opacity(opacity: number): void
    push_repeat(bounds: Graphene.Rect, child_bounds?: Graphene.Rect | null): void
    push_rounded_clip(bounds: Gsk.RoundedRect): void
    push_shadow(shadow: Gsk.Shadow, n_shadows: number): void
    render_background(context: StyleContext, x: number, y: number, width: number, height: number): void
    render_focus(context: StyleContext, x: number, y: number, width: number, height: number): void
    render_frame(context: StyleContext, x: number, y: number, width: number, height: number): void
    render_insertion_cursor(context: StyleContext, x: number, y: number, layout: Pango.Layout, index: number, direction: Pango.Direction): void
    render_layout(context: StyleContext, x: number, y: number, layout: Pango.Layout): void
    restore(): void
    rotate(angle: number): void
    rotate_3d(angle: number, axis: Graphene.Vec3): void
    save(): void
    scale(factor_x: number, factor_y: number): void
    scale_3d(factor_x: number, factor_y: number, factor_z: number): void
    to_node(): Gsk.RenderNode
    to_paintable(size?: Graphene.Size | null): Gdk.Paintable
    transform(transform?: Gsk.Transform | null): void
    transform_matrix(matrix: Graphene.Matrix): void
    translate(point: Graphene.Point): void
    translate_3d(point: Graphene.Point3D): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Snapshot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Snapshot, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Snapshot_ConstructProps)
    _init (config?: Snapshot_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Snapshot
    static $gtype: GObject.Type
}
export interface SortListModel_ConstructProps extends GObject.Object_ConstructProps {
    incremental?: boolean
    model?: Gio.ListModel
    sorter?: Sorter
}
export class SortListModel {
    /* Properties of Gtk.SortListModel */
    incremental: boolean
    model: Gio.ListModel
    readonly pending: number
    sorter: Sorter
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SortListModel */
    get_incremental(): boolean
    get_model(): Gio.ListModel | null
    get_pending(): number
    get_sorter(): Sorter | null
    set_incremental(incremental: boolean): void
    set_model(model?: Gio.ListModel | null): void
    set_sorter(sorter?: Sorter | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.SortListModel */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: SortListModel, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: SortListModel, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::incremental", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::incremental", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pending", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pending", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sorter", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sorter", callback: (($obj: SortListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SortListModel_ConstructProps)
    _init (config?: SortListModel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(model?: Gio.ListModel | null, sorter?: Sorter | null): SortListModel
    static $gtype: GObject.Type
}
export interface Sorter_ConstructProps extends GObject.Object_ConstructProps {
}
export class Sorter {
    /* Fields of Gtk.Sorter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Sorter */
    changed(change: SorterChange): void
    compare(item1: GObject.Object, item2: GObject.Object): Ordering
    get_order(): SorterOrder
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Sorter */
    vfunc_compare(item1?: GObject.Object | null, item2?: GObject.Object | null): Ordering
    vfunc_get_order(): SorterOrder
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Sorter */
    connect(sigName: "changed", callback: (($obj: Sorter, change: SorterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: Sorter, change: SorterChange) => void)): number
    emit(sigName: "changed", change: SorterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Sorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Sorter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Sorter_ConstructProps)
    _init (config?: Sorter_ConstructProps): void
    static $gtype: GObject.Type
}
export interface SpinButton_ConstructProps extends Widget_ConstructProps {
    adjustment?: Adjustment
    climb_rate?: number
    digits?: number
    numeric?: boolean
    snap_to_ticks?: boolean
    update_policy?: SpinButtonUpdatePolicy
    value?: number
    wrap?: boolean
    accessible_role?: AccessibleRole
    editing_canceled?: boolean
    editable?: boolean
    enable_undo?: boolean
    max_width_chars?: number
    text?: string
    width_chars?: number
    xalign?: number
    orientation?: Orientation
}
export class SpinButton {
    /* Properties of Gtk.SpinButton */
    adjustment: Adjustment
    climb_rate: number
    digits: number
    numeric: boolean
    snap_to_ticks: boolean
    update_policy: SpinButtonUpdatePolicy
    value: number
    wrap: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.CellEditable */
    editing_canceled: boolean
    /* Properties of Gtk.Editable */
    readonly cursor_position: number
    editable: boolean
    enable_undo: boolean
    max_width_chars: number
    readonly selection_bound: number
    text: string
    width_chars: number
    xalign: number
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.SpinButton */
    configure(adjustment: Adjustment | null, climb_rate: number, digits: number): void
    get_adjustment(): Adjustment
    get_climb_rate(): number
    get_digits(): number
    get_increments(): [ /* step */ number | null, /* page */ number | null ]
    get_numeric(): boolean
    get_range(): [ /* min */ number | null, /* max */ number | null ]
    get_snap_to_ticks(): boolean
    get_update_policy(): SpinButtonUpdatePolicy
    get_value(): number
    get_value_as_int(): number
    get_wrap(): boolean
    set_adjustment(adjustment: Adjustment): void
    set_climb_rate(climb_rate: number): void
    set_digits(digits: number): void
    set_increments(step: number, page: number): void
    set_numeric(numeric: boolean): void
    set_range(min: number, max: number): void
    set_snap_to_ticks(snap_to_ticks: boolean): void
    set_update_policy(policy: SpinButtonUpdatePolicy): void
    set_value(value: number): void
    set_wrap(wrap: boolean): void
    spin(direction: SpinType, increment: number): void
    update(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.Editable */
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    finish_delegate(): void
    get_alignment(): number
    get_chars(start_pos: number, end_pos: number): string
    get_delegate(): Editable | null
    get_editable(): boolean
    get_enable_undo(): boolean
    get_max_width_chars(): number
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    get_text(): string
    get_width_chars(): number
    init_delegate(): void
    insert_text(text: string, length: number, position: number): /* position */ number
    select_region(start_pos: number, end_pos: number): void
    set_alignment(xalign: number): void
    set_editable(is_editable: boolean): void
    set_enable_undo(enable_undo: boolean): void
    set_max_width_chars(n_chars: number): void
    set_position(position: number): void
    set_text(text: string): void
    set_width_chars(n_chars: number): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.SpinButton */
    vfunc_editing_done(): void
    vfunc_remove_widget(): void
    vfunc_start_editing(event?: Gdk.Event | null): void
    vfunc_changed(): void
    vfunc_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_get_delegate(): Editable | null
    vfunc_get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    vfunc_get_text(): string
    vfunc_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_set_selection_bounds(start_pos: number, end_pos: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.SpinButton */
    connect(sigName: "change-value", callback: (($obj: SpinButton, scroll: ScrollType) => void)): number
    connect_after(sigName: "change-value", callback: (($obj: SpinButton, scroll: ScrollType) => void)): number
    emit(sigName: "change-value", scroll: ScrollType): void
    connect(sigName: "input", callback: (($obj: SpinButton) => number)): number
    connect_after(sigName: "input", callback: (($obj: SpinButton) => number)): number
    emit(sigName: "input"): void
    connect(sigName: "output", callback: (($obj: SpinButton) => boolean)): number
    connect_after(sigName: "output", callback: (($obj: SpinButton) => boolean)): number
    emit(sigName: "output"): void
    connect(sigName: "value-changed", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "value-changed", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "value-changed"): void
    connect(sigName: "wrapped", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "wrapped", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "wrapped"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: SpinButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: SpinButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: SpinButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: SpinButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: SpinButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: SpinButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: SpinButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: SpinButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: SpinButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: SpinButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: SpinButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: SpinButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "editing-done", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "editing-done"): void
    connect(sigName: "remove-widget", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "remove-widget", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "remove-widget"): void
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: (($obj: SpinButton) => void)): number
    connect_after(sigName: "changed", callback: (($obj: SpinButton) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "delete-text", callback: (($obj: SpinButton, start_pos: number, end_pos: number) => void)): number
    connect_after(sigName: "delete-text", callback: (($obj: SpinButton, start_pos: number, end_pos: number) => void)): number
    emit(sigName: "delete-text", start_pos: number, end_pos: number): void
    connect(sigName: "insert-text", callback: (($obj: SpinButton, text: string, length: number, position: number) => void)): number
    connect_after(sigName: "insert-text", callback: (($obj: SpinButton, text: string, length: number, position: number) => void)): number
    emit(sigName: "insert-text", text: string, length: number, position: number): void
    connect(sigName: "notify::adjustment", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::adjustment", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::climb-rate", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::climb-rate", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::digits", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::digits", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::numeric", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::numeric", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::snap-to-ticks", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::snap-to-ticks", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::update-policy", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::update-policy", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editing-canceled", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editing-canceled", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor-position", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-position", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-undo", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-undo", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-bound", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-bound", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: SpinButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SpinButton_ConstructProps)
    _init (config?: SpinButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(adjustment: Adjustment | null, climb_rate: number, digits: number): SpinButton
    static new_with_range(min: number, max: number, step: number): SpinButton
    static delegate_get_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static delegate_set_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static install_properties(object_class: GObject.ObjectClass, first_prop: number): number
    static $gtype: GObject.Type
}
export interface Spinner_ConstructProps extends Widget_ConstructProps {
    spinning?: boolean
    accessible_role?: AccessibleRole
}
export class Spinner {
    /* Properties of Gtk.Spinner */
    spinning: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Spinner */
    get_spinning(): boolean
    set_spinning(spinning: boolean): void
    start(): void
    stop(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Spinner) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Spinner) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Spinner, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Spinner, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Spinner) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Spinner) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Spinner, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Spinner, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Spinner) => void)): number
    connect_after(sigName: "map", callback: (($obj: Spinner) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Spinner, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Spinner, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Spinner, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Spinner, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Spinner, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Spinner, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Spinner) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Spinner) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Spinner) => void)): number
    connect_after(sigName: "show", callback: (($obj: Spinner) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Spinner, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Spinner, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Spinner) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Spinner) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Spinner) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Spinner) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::spinning", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spinning", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Spinner, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Spinner_ConstructProps)
    _init (config?: Spinner_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Spinner
    static $gtype: GObject.Type
}
export interface Stack_ConstructProps extends Widget_ConstructProps {
    hhomogeneous?: boolean
    interpolate_size?: boolean
    transition_duration?: number
    transition_type?: StackTransitionType
    vhomogeneous?: boolean
    visible_child?: Widget
    visible_child_name?: string
    accessible_role?: AccessibleRole
}
export class Stack {
    /* Properties of Gtk.Stack */
    hhomogeneous: boolean
    interpolate_size: boolean
    readonly pages: SelectionModel
    transition_duration: number
    readonly transition_running: boolean
    transition_type: StackTransitionType
    vhomogeneous: boolean
    visible_child: Widget
    visible_child_name: string
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Stack */
    add_child(child: Widget): StackPage
    add_named(child: Widget, name?: string | null): StackPage
    add_titled(child: Widget, name: string | null, title: string): StackPage
    get_child_by_name(name: string): Widget | null
    get_hhomogeneous(): boolean
    get_interpolate_size(): boolean
    get_page(child: Widget): StackPage
    get_pages(): SelectionModel
    get_transition_duration(): number
    get_transition_running(): boolean
    get_transition_type(): StackTransitionType
    get_vhomogeneous(): boolean
    get_visible_child(): Widget | null
    get_visible_child_name(): string | null
    remove(child: Widget): void
    set_hhomogeneous(hhomogeneous: boolean): void
    set_interpolate_size(interpolate_size: boolean): void
    set_transition_duration(duration: number): void
    set_transition_type(transition: StackTransitionType): void
    set_vhomogeneous(vhomogeneous: boolean): void
    set_visible_child(child: Widget): void
    set_visible_child_full(name: string, transition: StackTransitionType): void
    set_visible_child_name(name: string): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Stack) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Stack) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Stack, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Stack, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Stack) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Stack) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Stack, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Stack, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Stack) => void)): number
    connect_after(sigName: "map", callback: (($obj: Stack) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Stack, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Stack, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Stack, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Stack, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Stack, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Stack, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Stack) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Stack) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Stack) => void)): number
    connect_after(sigName: "show", callback: (($obj: Stack) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Stack, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Stack, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Stack) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Stack) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Stack) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Stack) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::hhomogeneous", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hhomogeneous", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::interpolate-size", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::interpolate-size", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pages", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pages", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transition-duration", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transition-duration", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transition-running", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transition-running", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transition-type", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transition-type", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vhomogeneous", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vhomogeneous", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible-child", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible-child", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible-child-name", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible-child-name", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Stack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Stack_ConstructProps)
    _init (config?: Stack_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Stack
    static $gtype: GObject.Type
}
export interface StackPage_ConstructProps extends GObject.Object_ConstructProps {
    child?: Widget
    icon_name?: string
    name?: string
    needs_attention?: boolean
    title?: string
    use_underline?: boolean
    visible?: boolean
    accessible_role?: AccessibleRole
}
export class StackPage {
    /* Properties of Gtk.StackPage */
    icon_name: string
    needs_attention: boolean
    title: string
    use_underline: boolean
    visible: boolean
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.StackPage */
    get_child(): Widget
    get_icon_name(): string | null
    get_name(): string | null
    get_needs_attention(): boolean
    get_title(): string | null
    get_use_underline(): boolean
    get_visible(): boolean
    set_icon_name(setting: string): void
    set_name(setting: string): void
    set_needs_attention(setting: boolean): void
    set_title(setting: string): void
    set_use_underline(setting: boolean): void
    set_visible(visible: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::icon-name", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::needs-attention", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::needs-attention", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: StackPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: StackPage_ConstructProps)
    _init (config?: StackPage_ConstructProps): void
    static $gtype: GObject.Type
}
export interface StackSidebar_ConstructProps extends Widget_ConstructProps {
    stack?: Stack
    accessible_role?: AccessibleRole
}
export class StackSidebar {
    /* Properties of Gtk.StackSidebar */
    stack: Stack
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.StackSidebar */
    get_stack(): Stack | null
    set_stack(stack: Stack): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: StackSidebar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: StackSidebar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: StackSidebar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: StackSidebar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: StackSidebar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: StackSidebar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: StackSidebar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: StackSidebar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: StackSidebar) => void)): number
    connect_after(sigName: "map", callback: (($obj: StackSidebar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: StackSidebar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: StackSidebar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: StackSidebar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: StackSidebar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: StackSidebar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: StackSidebar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: StackSidebar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: StackSidebar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: StackSidebar) => void)): number
    connect_after(sigName: "show", callback: (($obj: StackSidebar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: StackSidebar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: StackSidebar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: StackSidebar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: StackSidebar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: StackSidebar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: StackSidebar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::stack", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stack", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: StackSidebar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: StackSidebar_ConstructProps)
    _init (config?: StackSidebar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): StackSidebar
    static $gtype: GObject.Type
}
export interface StackSwitcher_ConstructProps extends Widget_ConstructProps {
    stack?: Stack
    accessible_role?: AccessibleRole
}
export class StackSwitcher {
    /* Properties of Gtk.StackSwitcher */
    stack: Stack
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.StackSwitcher */
    get_stack(): Stack | null
    set_stack(stack?: Stack | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: StackSwitcher) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: StackSwitcher) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: StackSwitcher, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: StackSwitcher, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: StackSwitcher) => void)): number
    connect_after(sigName: "hide", callback: (($obj: StackSwitcher) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: StackSwitcher, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: StackSwitcher, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: StackSwitcher) => void)): number
    connect_after(sigName: "map", callback: (($obj: StackSwitcher) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: StackSwitcher, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: StackSwitcher, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: StackSwitcher, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: StackSwitcher, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: StackSwitcher, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: StackSwitcher, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: StackSwitcher) => void)): number
    connect_after(sigName: "realize", callback: (($obj: StackSwitcher) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: StackSwitcher) => void)): number
    connect_after(sigName: "show", callback: (($obj: StackSwitcher) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: StackSwitcher, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: StackSwitcher, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: StackSwitcher) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: StackSwitcher) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: StackSwitcher) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: StackSwitcher) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::stack", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stack", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: StackSwitcher, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: StackSwitcher_ConstructProps)
    _init (config?: StackSwitcher_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): StackSwitcher
    static $gtype: GObject.Type
}
export interface Statusbar_ConstructProps extends Widget_ConstructProps {
    accessible_role?: AccessibleRole
}
export class Statusbar {
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Statusbar */
    get_context_id(context_description: string): number
    pop(context_id: number): void
    push(context_id: number, text: string): number
    remove(context_id: number, message_id: number): void
    remove_all(context_id: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Statusbar */
    connect(sigName: "text-popped", callback: (($obj: Statusbar, context_id: number, text: string) => void)): number
    connect_after(sigName: "text-popped", callback: (($obj: Statusbar, context_id: number, text: string) => void)): number
    emit(sigName: "text-popped", context_id: number, text: string): void
    connect(sigName: "text-pushed", callback: (($obj: Statusbar, context_id: number, text: string) => void)): number
    connect_after(sigName: "text-pushed", callback: (($obj: Statusbar, context_id: number, text: string) => void)): number
    emit(sigName: "text-pushed", context_id: number, text: string): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Statusbar) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Statusbar) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Statusbar, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Statusbar, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Statusbar) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Statusbar) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Statusbar, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Statusbar, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Statusbar) => void)): number
    connect_after(sigName: "map", callback: (($obj: Statusbar) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Statusbar, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Statusbar, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Statusbar, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Statusbar, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Statusbar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Statusbar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Statusbar) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Statusbar) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Statusbar) => void)): number
    connect_after(sigName: "show", callback: (($obj: Statusbar) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Statusbar, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Statusbar, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Statusbar) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Statusbar) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Statusbar) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Statusbar) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::can-focus", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Statusbar, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Statusbar_ConstructProps)
    _init (config?: Statusbar_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Statusbar
    static $gtype: GObject.Type
}
export interface StringFilter_ConstructProps extends Filter_ConstructProps {
    expression?: Expression
    ignore_case?: boolean
    match_mode?: StringFilterMatchMode
    search?: string
}
export class StringFilter {
    /* Properties of Gtk.StringFilter */
    expression: Expression
    ignore_case: boolean
    match_mode: StringFilterMatchMode
    search: string
    /* Fields of Gtk.Filter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.StringFilter */
    get_expression(): Expression | null
    get_ignore_case(): boolean
    get_match_mode(): StringFilterMatchMode
    get_search(): string | null
    set_expression(expression?: Expression | null): void
    set_ignore_case(ignore_case: boolean): void
    set_match_mode(mode: StringFilterMatchMode): void
    set_search(search?: string | null): void
    /* Methods of Gtk.Filter */
    changed(change: FilterChange): void
    get_strictness(): FilterMatch
    match(item: GObject.Object): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Filter */
    vfunc_get_strictness(): FilterMatch
    vfunc_match(item?: GObject.Object | null): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Filter */
    connect(sigName: "changed", callback: (($obj: StringFilter, change: FilterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: StringFilter, change: FilterChange) => void)): number
    emit(sigName: "changed", change: FilterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::expression", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expression", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ignore-case", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignore-case", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::match-mode", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::match-mode", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::search", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search", callback: (($obj: StringFilter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: StringFilter_ConstructProps)
    _init (config?: StringFilter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(expression?: Expression | null): StringFilter
    static $gtype: GObject.Type
}
export interface StringList_ConstructProps extends GObject.Object_ConstructProps {
}
export class StringList {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.StringList */
    append(string: string): void
    get_string(position: number): string | null
    remove(position: number): void
    splice(position: number, n_removals: number, additions?: string[] | null): void
    take(string: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.StringList */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: StringList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: StringList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: StringList, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: StringList, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: StringList_ConstructProps)
    _init (config?: StringList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(strings?: string[] | null): StringList
    static $gtype: GObject.Type
}
export interface StringObject_ConstructProps extends GObject.Object_ConstructProps {
}
export class StringObject {
    /* Properties of Gtk.StringObject */
    readonly string: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.StringObject */
    get_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: StringObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: StringObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::string", callback: (($obj: StringObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::string", callback: (($obj: StringObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: StringObject_ConstructProps)
    _init (config?: StringObject_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(string: string): StringObject
    static $gtype: GObject.Type
}
export interface StringSorter_ConstructProps extends Sorter_ConstructProps {
    expression?: Expression
    ignore_case?: boolean
}
export class StringSorter {
    /* Properties of Gtk.StringSorter */
    expression: Expression
    ignore_case: boolean
    /* Fields of Gtk.Sorter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.StringSorter */
    get_expression(): Expression | null
    get_ignore_case(): boolean
    set_expression(expression?: Expression | null): void
    set_ignore_case(ignore_case: boolean): void
    /* Methods of Gtk.Sorter */
    changed(change: SorterChange): void
    compare(item1: GObject.Object, item2: GObject.Object): Ordering
    get_order(): SorterOrder
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Sorter */
    vfunc_compare(item1?: GObject.Object | null, item2?: GObject.Object | null): Ordering
    vfunc_get_order(): SorterOrder
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Sorter */
    connect(sigName: "changed", callback: (($obj: StringSorter, change: SorterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: StringSorter, change: SorterChange) => void)): number
    emit(sigName: "changed", change: SorterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: StringSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: StringSorter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::expression", callback: (($obj: StringSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expression", callback: (($obj: StringSorter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ignore-case", callback: (($obj: StringSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignore-case", callback: (($obj: StringSorter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: StringSorter_ConstructProps)
    _init (config?: StringSorter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(expression?: Expression | null): StringSorter
    static $gtype: GObject.Type
}
export interface StyleContext_ConstructProps extends GObject.Object_ConstructProps {
    display?: Gdk.Display
}
export class StyleContext {
    /* Properties of Gtk.StyleContext */
    display: Gdk.Display
    /* Fields of Gtk.StyleContext */
    parent_object: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.StyleContext */
    add_class(class_name: string): void
    add_provider(provider: StyleProvider, priority: number): void
    get_border(): /* border */ Border
    get_color(): /* color */ Gdk.RGBA
    get_display(): Gdk.Display
    get_margin(): /* margin */ Border
    get_padding(): /* padding */ Border
    get_scale(): number
    get_state(): StateFlags
    has_class(class_name: string): boolean
    lookup_color(color_name: string): [ /* returnType */ boolean, /* color */ Gdk.RGBA ]
    remove_class(class_name: string): void
    remove_provider(provider: StyleProvider): void
    restore(): void
    save(): void
    set_display(display: Gdk.Display): void
    set_scale(scale: number): void
    set_state(flags: StateFlags): void
    to_string(flags: StyleContextPrintFlags): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.StyleContext */
    vfunc_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: StyleContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: StyleContext, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::display", callback: (($obj: StyleContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: StyleContext, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: StyleContext_ConstructProps)
    _init (config?: StyleContext_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static add_provider_for_display(display: Gdk.Display, provider: StyleProvider, priority: number): void
    static remove_provider_for_display(display: Gdk.Display, provider: StyleProvider): void
    static $gtype: GObject.Type
}
export interface Switch_ConstructProps extends Widget_ConstructProps {
    active?: boolean
    state?: boolean
    accessible_role?: AccessibleRole
    action_name?: string
    action_target?: GLib.Variant
}
export class Switch {
    /* Properties of Gtk.Switch */
    active: boolean
    state: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Actionable */
    action_name: string
    action_target: GLib.Variant
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Switch */
    get_active(): boolean
    get_state(): boolean
    set_active(is_active: boolean): void
    set_state(state: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant | null
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value?: GLib.Variant | null): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Switch */
    vfunc_get_action_name(): string | null
    vfunc_get_action_target_value(): GLib.Variant | null
    vfunc_set_action_name(action_name?: string | null): void
    vfunc_set_action_target_value(target_value?: GLib.Variant | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Switch */
    connect(sigName: "activate", callback: (($obj: Switch) => void)): number
    connect_after(sigName: "activate", callback: (($obj: Switch) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "state-set", callback: (($obj: Switch, state: boolean) => boolean)): number
    connect_after(sigName: "state-set", callback: (($obj: Switch, state: boolean) => boolean)): number
    emit(sigName: "state-set", state: boolean): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Switch) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Switch) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Switch, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Switch, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Switch) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Switch) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Switch, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Switch, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Switch) => void)): number
    connect_after(sigName: "map", callback: (($obj: Switch) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Switch, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Switch, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Switch, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Switch, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Switch, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Switch, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Switch) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Switch) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Switch) => void)): number
    connect_after(sigName: "show", callback: (($obj: Switch) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Switch, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Switch, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Switch) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Switch) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Switch) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Switch) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::state", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::state", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-name", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-target", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-target", callback: (($obj: Switch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Switch_ConstructProps)
    _init (config?: Switch_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Switch
    static $gtype: GObject.Type
}
export interface Text_ConstructProps extends Widget_ConstructProps {
    activates_default?: boolean
    attributes?: Pango.AttrList
    buffer?: EntryBuffer
    enable_emoji_completion?: boolean
    extra_menu?: Gio.MenuModel
    im_module?: string
    input_hints?: InputHints
    input_purpose?: InputPurpose
    invisible_char?: number
    invisible_char_set?: boolean
    max_length?: number
    overwrite_mode?: boolean
    placeholder_text?: string
    propagate_text_width?: boolean
    tabs?: Pango.TabArray
    truncate_multiline?: boolean
    visibility?: boolean
    accessible_role?: AccessibleRole
    editable?: boolean
    enable_undo?: boolean
    max_width_chars?: number
    text?: string
    width_chars?: number
    xalign?: number
}
export class Text {
    /* Properties of Gtk.Text */
    activates_default: boolean
    attributes: Pango.AttrList
    buffer: EntryBuffer
    enable_emoji_completion: boolean
    extra_menu: Gio.MenuModel
    im_module: string
    input_hints: InputHints
    input_purpose: InputPurpose
    invisible_char: number
    invisible_char_set: boolean
    max_length: number
    overwrite_mode: boolean
    placeholder_text: string
    propagate_text_width: boolean
    readonly scroll_offset: number
    tabs: Pango.TabArray
    truncate_multiline: boolean
    visibility: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Editable */
    readonly cursor_position: number
    editable: boolean
    enable_undo: boolean
    max_width_chars: number
    readonly selection_bound: number
    text: string
    width_chars: number
    xalign: number
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Text */
    get_activates_default(): boolean
    get_attributes(): Pango.AttrList | null
    get_buffer(): EntryBuffer
    get_enable_emoji_completion(): boolean
    get_extra_menu(): Gio.MenuModel | null
    get_input_hints(): InputHints
    get_input_purpose(): InputPurpose
    get_invisible_char(): number
    get_max_length(): number
    get_overwrite_mode(): boolean
    get_placeholder_text(): string | null
    get_propagate_text_width(): boolean
    get_tabs(): Pango.TabArray | null
    get_text_length(): number
    get_truncate_multiline(): boolean
    get_visibility(): boolean
    grab_focus_without_selecting(): boolean
    set_activates_default(activates: boolean): void
    set_attributes(attrs?: Pango.AttrList | null): void
    set_buffer(buffer: EntryBuffer): void
    set_enable_emoji_completion(enable_emoji_completion: boolean): void
    set_extra_menu(model?: Gio.MenuModel | null): void
    set_input_hints(hints: InputHints): void
    set_input_purpose(purpose: InputPurpose): void
    set_invisible_char(ch: number): void
    set_max_length(length: number): void
    set_overwrite_mode(overwrite: boolean): void
    set_placeholder_text(text?: string | null): void
    set_propagate_text_width(propagate_text_width: boolean): void
    set_tabs(tabs?: Pango.TabArray | null): void
    set_truncate_multiline(truncate_multiline: boolean): void
    set_visibility(visible: boolean): void
    unset_invisible_char(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Editable */
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    finish_delegate(): void
    get_alignment(): number
    get_chars(start_pos: number, end_pos: number): string
    get_delegate(): Editable | null
    get_editable(): boolean
    get_enable_undo(): boolean
    get_max_width_chars(): number
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    get_text(): string
    get_width_chars(): number
    init_delegate(): void
    insert_text(text: string, length: number, position: number): /* position */ number
    select_region(start_pos: number, end_pos: number): void
    set_alignment(xalign: number): void
    set_editable(is_editable: boolean): void
    set_enable_undo(enable_undo: boolean): void
    set_max_width_chars(n_chars: number): void
    set_position(position: number): void
    set_text(text: string): void
    set_width_chars(n_chars: number): void
    /* Virtual methods of Gtk.Text */
    vfunc_changed(): void
    vfunc_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_delete_text(start_pos: number, end_pos: number): void
    vfunc_do_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_get_delegate(): Editable | null
    vfunc_get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    vfunc_get_text(): string
    vfunc_insert_text(text: string, length: number, position: number): /* position */ number
    vfunc_set_selection_bounds(start_pos: number, end_pos: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Text */
    connect(sigName: "activate", callback: (($obj: Text) => void)): number
    connect_after(sigName: "activate", callback: (($obj: Text) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "backspace", callback: (($obj: Text) => void)): number
    connect_after(sigName: "backspace", callback: (($obj: Text) => void)): number
    emit(sigName: "backspace"): void
    connect(sigName: "copy-clipboard", callback: (($obj: Text) => void)): number
    connect_after(sigName: "copy-clipboard", callback: (($obj: Text) => void)): number
    emit(sigName: "copy-clipboard"): void
    connect(sigName: "cut-clipboard", callback: (($obj: Text) => void)): number
    connect_after(sigName: "cut-clipboard", callback: (($obj: Text) => void)): number
    emit(sigName: "cut-clipboard"): void
    connect(sigName: "delete-from-cursor", callback: (($obj: Text, type: DeleteType, count: number) => void)): number
    connect_after(sigName: "delete-from-cursor", callback: (($obj: Text, type: DeleteType, count: number) => void)): number
    emit(sigName: "delete-from-cursor", type: DeleteType, count: number): void
    connect(sigName: "insert-at-cursor", callback: (($obj: Text, string: string) => void)): number
    connect_after(sigName: "insert-at-cursor", callback: (($obj: Text, string: string) => void)): number
    emit(sigName: "insert-at-cursor", string: string): void
    connect(sigName: "insert-emoji", callback: (($obj: Text) => void)): number
    connect_after(sigName: "insert-emoji", callback: (($obj: Text) => void)): number
    emit(sigName: "insert-emoji"): void
    connect(sigName: "move-cursor", callback: (($obj: Text, step: MovementStep, count: number, extend: boolean) => void)): number
    connect_after(sigName: "move-cursor", callback: (($obj: Text, step: MovementStep, count: number, extend: boolean) => void)): number
    emit(sigName: "move-cursor", step: MovementStep, count: number, extend: boolean): void
    connect(sigName: "paste-clipboard", callback: (($obj: Text) => void)): number
    connect_after(sigName: "paste-clipboard", callback: (($obj: Text) => void)): number
    emit(sigName: "paste-clipboard"): void
    connect(sigName: "preedit-changed", callback: (($obj: Text, preedit: string) => void)): number
    connect_after(sigName: "preedit-changed", callback: (($obj: Text, preedit: string) => void)): number
    emit(sigName: "preedit-changed", preedit: string): void
    connect(sigName: "toggle-overwrite", callback: (($obj: Text) => void)): number
    connect_after(sigName: "toggle-overwrite", callback: (($obj: Text) => void)): number
    emit(sigName: "toggle-overwrite"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Text) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Text) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Text, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Text, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Text) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Text) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Text, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Text, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Text) => void)): number
    connect_after(sigName: "map", callback: (($obj: Text) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Text, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Text, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Text, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Text, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Text, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Text, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Text) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Text) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Text) => void)): number
    connect_after(sigName: "show", callback: (($obj: Text) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Text, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Text, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Text) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Text) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Text) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Text) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: (($obj: Text) => void)): number
    connect_after(sigName: "changed", callback: (($obj: Text) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "delete-text", callback: (($obj: Text, start_pos: number, end_pos: number) => void)): number
    connect_after(sigName: "delete-text", callback: (($obj: Text, start_pos: number, end_pos: number) => void)): number
    emit(sigName: "delete-text", start_pos: number, end_pos: number): void
    connect(sigName: "insert-text", callback: (($obj: Text, text: string, length: number, position: number) => void)): number
    connect_after(sigName: "insert-text", callback: (($obj: Text, text: string, length: number, position: number) => void)): number
    emit(sigName: "insert-text", text: string, length: number, position: number): void
    connect(sigName: "notify::activates-default", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activates-default", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::buffer", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::buffer", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-emoji-completion", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-emoji-completion", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::extra-menu", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extra-menu", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::im-module", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::im-module", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-hints", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-hints", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-purpose", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-purpose", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::invisible-char", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invisible-char", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::invisible-char-set", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invisible-char-set", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-length", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-length", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overwrite-mode", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overwrite-mode", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder-text", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder-text", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::propagate-text-width", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::propagate-text-width", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-offset", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-offset", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tabs", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tabs", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::truncate-multiline", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::truncate-multiline", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visibility", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visibility", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor-position", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-position", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-undo", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-undo", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width-chars", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width-chars", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-bound", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-bound", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-chars", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-chars", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xalign", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xalign", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Text_ConstructProps)
    _init (config?: Text_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Text
    static new_with_buffer(buffer: EntryBuffer): Text
    static delegate_get_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static delegate_set_property(object: GObject.Object, prop_id: number, value: any, pspec: GObject.ParamSpec): boolean
    static install_properties(object_class: GObject.ObjectClass, first_prop: number): number
    static $gtype: GObject.Type
}
export interface TextBuffer_ConstructProps extends GObject.Object_ConstructProps {
    enable_undo?: boolean
    tag_table?: TextTagTable
    text?: string
}
export class TextBuffer {
    /* Properties of Gtk.TextBuffer */
    readonly can_redo: boolean
    readonly can_undo: boolean
    readonly cursor_position: number
    enable_undo: boolean
    readonly has_selection: boolean
    text: string
    /* Fields of Gtk.TextBuffer */
    parent_instance: GObject.Object
    priv: TextBufferPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TextBuffer */
    add_mark(mark: TextMark, where: TextIter): void
    add_selection_clipboard(clipboard: Gdk.Clipboard): void
    apply_tag(tag: TextTag, start: TextIter, end: TextIter): void
    apply_tag_by_name(name: string, start: TextIter, end: TextIter): void
    backspace(iter: TextIter, interactive: boolean, default_editable: boolean): boolean
    begin_irreversible_action(): void
    begin_user_action(): void
    copy_clipboard(clipboard: Gdk.Clipboard): void
    create_child_anchor(iter: TextIter): TextChildAnchor
    create_mark(mark_name: string | null, where: TextIter, left_gravity: boolean): TextMark
    cut_clipboard(clipboard: Gdk.Clipboard, default_editable: boolean): void
    delete(start: TextIter, end: TextIter): void
    delete_interactive(start_iter: TextIter, end_iter: TextIter, default_editable: boolean): boolean
    delete_mark(mark: TextMark): void
    delete_mark_by_name(name: string): void
    delete_selection(interactive: boolean, default_editable: boolean): boolean
    end_irreversible_action(): void
    end_user_action(): void
    get_bounds(): [ /* start */ TextIter, /* end */ TextIter ]
    get_can_redo(): boolean
    get_can_undo(): boolean
    get_char_count(): number
    get_enable_undo(): boolean
    get_end_iter(): /* iter */ TextIter
    get_has_selection(): boolean
    get_insert(): TextMark
    get_iter_at_child_anchor(anchor: TextChildAnchor): /* iter */ TextIter
    get_iter_at_line(line_number: number): [ /* returnType */ boolean, /* iter */ TextIter ]
    get_iter_at_line_index(line_number: number, byte_index: number): [ /* returnType */ boolean, /* iter */ TextIter ]
    get_iter_at_line_offset(line_number: number, char_offset: number): [ /* returnType */ boolean, /* iter */ TextIter ]
    get_iter_at_mark(mark: TextMark): /* iter */ TextIter
    get_iter_at_offset(char_offset: number): /* iter */ TextIter
    get_line_count(): number
    get_mark(name: string): TextMark | null
    get_max_undo_levels(): number
    get_modified(): boolean
    get_selection_bound(): TextMark
    get_selection_bounds(): [ /* returnType */ boolean, /* start */ TextIter, /* end */ TextIter ]
    get_selection_content(): Gdk.ContentProvider
    get_slice(start: TextIter, end: TextIter, include_hidden_chars: boolean): string
    get_start_iter(): /* iter */ TextIter
    get_tag_table(): TextTagTable
    get_text(start: TextIter, end: TextIter, include_hidden_chars: boolean): string
    insert(iter: TextIter, text: string, len: number): void
    insert_at_cursor(text: string, len: number): void
    insert_child_anchor(iter: TextIter, anchor: TextChildAnchor): void
    insert_interactive(iter: TextIter, text: string, len: number, default_editable: boolean): boolean
    insert_interactive_at_cursor(text: string, len: number, default_editable: boolean): boolean
    insert_markup(iter: TextIter, markup: string, len: number): void
    insert_paintable(iter: TextIter, paintable: Gdk.Paintable): void
    insert_range(iter: TextIter, start: TextIter, end: TextIter): void
    insert_range_interactive(iter: TextIter, start: TextIter, end: TextIter, default_editable: boolean): boolean
    move_mark(mark: TextMark, where: TextIter): void
    move_mark_by_name(name: string, where: TextIter): void
    paste_clipboard(clipboard: Gdk.Clipboard, override_location: TextIter | null, default_editable: boolean): void
    place_cursor(where: TextIter): void
    redo(): void
    remove_all_tags(start: TextIter, end: TextIter): void
    remove_selection_clipboard(clipboard: Gdk.Clipboard): void
    remove_tag(tag: TextTag, start: TextIter, end: TextIter): void
    remove_tag_by_name(name: string, start: TextIter, end: TextIter): void
    select_range(ins: TextIter, bound: TextIter): void
    set_enable_undo(enable_undo: boolean): void
    set_max_undo_levels(max_undo_levels: number): void
    set_modified(setting: boolean): void
    set_text(text: string, len: number): void
    undo(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.TextBuffer */
    vfunc_apply_tag(tag: TextTag, start: TextIter, end: TextIter): void
    vfunc_begin_user_action(): void
    vfunc_changed(): void
    vfunc_delete_range(start: TextIter, end: TextIter): void
    vfunc_end_user_action(): void
    vfunc_insert_child_anchor(iter: TextIter, anchor: TextChildAnchor): void
    vfunc_insert_paintable(iter: TextIter, paintable: Gdk.Paintable): void
    vfunc_insert_text(pos: TextIter, new_text: string, new_text_length: number): void
    vfunc_mark_deleted(mark: TextMark): void
    vfunc_mark_set(location: TextIter, mark: TextMark): void
    vfunc_modified_changed(): void
    vfunc_paste_done(clipboard: Gdk.Clipboard): void
    vfunc_redo(): void
    vfunc_remove_tag(tag: TextTag, start: TextIter, end: TextIter): void
    vfunc_undo(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TextBuffer */
    connect(sigName: "apply-tag", callback: (($obj: TextBuffer, tag: TextTag, start: TextIter, end: TextIter) => void)): number
    connect_after(sigName: "apply-tag", callback: (($obj: TextBuffer, tag: TextTag, start: TextIter, end: TextIter) => void)): number
    emit(sigName: "apply-tag", tag: TextTag, start: TextIter, end: TextIter): void
    connect(sigName: "begin-user-action", callback: (($obj: TextBuffer) => void)): number
    connect_after(sigName: "begin-user-action", callback: (($obj: TextBuffer) => void)): number
    emit(sigName: "begin-user-action"): void
    connect(sigName: "changed", callback: (($obj: TextBuffer) => void)): number
    connect_after(sigName: "changed", callback: (($obj: TextBuffer) => void)): number
    emit(sigName: "changed"): void
    connect(sigName: "delete-range", callback: (($obj: TextBuffer, start: TextIter, end: TextIter) => void)): number
    connect_after(sigName: "delete-range", callback: (($obj: TextBuffer, start: TextIter, end: TextIter) => void)): number
    emit(sigName: "delete-range", start: TextIter, end: TextIter): void
    connect(sigName: "end-user-action", callback: (($obj: TextBuffer) => void)): number
    connect_after(sigName: "end-user-action", callback: (($obj: TextBuffer) => void)): number
    emit(sigName: "end-user-action"): void
    connect(sigName: "insert-child-anchor", callback: (($obj: TextBuffer, location: TextIter, anchor: TextChildAnchor) => void)): number
    connect_after(sigName: "insert-child-anchor", callback: (($obj: TextBuffer, location: TextIter, anchor: TextChildAnchor) => void)): number
    emit(sigName: "insert-child-anchor", location: TextIter, anchor: TextChildAnchor): void
    connect(sigName: "insert-paintable", callback: (($obj: TextBuffer, location: TextIter, paintable: Gdk.Paintable) => void)): number
    connect_after(sigName: "insert-paintable", callback: (($obj: TextBuffer, location: TextIter, paintable: Gdk.Paintable) => void)): number
    emit(sigName: "insert-paintable", location: TextIter, paintable: Gdk.Paintable): void
    connect(sigName: "insert-text", callback: (($obj: TextBuffer, location: TextIter, text: string, len: number) => void)): number
    connect_after(sigName: "insert-text", callback: (($obj: TextBuffer, location: TextIter, text: string, len: number) => void)): number
    emit(sigName: "insert-text", location: TextIter, text: string, len: number): void
    connect(sigName: "mark-deleted", callback: (($obj: TextBuffer, mark: TextMark) => void)): number
    connect_after(sigName: "mark-deleted", callback: (($obj: TextBuffer, mark: TextMark) => void)): number
    emit(sigName: "mark-deleted", mark: TextMark): void
    connect(sigName: "mark-set", callback: (($obj: TextBuffer, location: TextIter, mark: TextMark) => void)): number
    connect_after(sigName: "mark-set", callback: (($obj: TextBuffer, location: TextIter, mark: TextMark) => void)): number
    emit(sigName: "mark-set", location: TextIter, mark: TextMark): void
    connect(sigName: "modified-changed", callback: (($obj: TextBuffer) => void)): number
    connect_after(sigName: "modified-changed", callback: (($obj: TextBuffer) => void)): number
    emit(sigName: "modified-changed"): void
    connect(sigName: "paste-done", callback: (($obj: TextBuffer, clipboard: Gdk.Clipboard) => void)): number
    connect_after(sigName: "paste-done", callback: (($obj: TextBuffer, clipboard: Gdk.Clipboard) => void)): number
    emit(sigName: "paste-done", clipboard: Gdk.Clipboard): void
    connect(sigName: "redo", callback: (($obj: TextBuffer) => void)): number
    connect_after(sigName: "redo", callback: (($obj: TextBuffer) => void)): number
    emit(sigName: "redo"): void
    connect(sigName: "remove-tag", callback: (($obj: TextBuffer, tag: TextTag, start: TextIter, end: TextIter) => void)): number
    connect_after(sigName: "remove-tag", callback: (($obj: TextBuffer, tag: TextTag, start: TextIter, end: TextIter) => void)): number
    emit(sigName: "remove-tag", tag: TextTag, start: TextIter, end: TextIter): void
    connect(sigName: "undo", callback: (($obj: TextBuffer) => void)): number
    connect_after(sigName: "undo", callback: (($obj: TextBuffer) => void)): number
    emit(sigName: "undo"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::can-redo", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-redo", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-undo", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-undo", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor-position", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-position", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-undo", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-undo", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-selection", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-selection", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: TextBuffer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TextBuffer_ConstructProps)
    _init (config?: TextBuffer_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(table?: TextTagTable | null): TextBuffer
    static $gtype: GObject.Type
}
export interface TextChildAnchor_ConstructProps extends GObject.Object_ConstructProps {
}
export class TextChildAnchor {
    /* Fields of Gtk.TextChildAnchor */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TextChildAnchor */
    get_deleted(): boolean
    get_widgets(): Widget[]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TextChildAnchor, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TextChildAnchor, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TextChildAnchor_ConstructProps)
    _init (config?: TextChildAnchor_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): TextChildAnchor
    static $gtype: GObject.Type
}
export interface TextMark_ConstructProps extends GObject.Object_ConstructProps {
    left_gravity?: boolean
    name?: string
}
export class TextMark {
    /* Fields of Gtk.TextMark */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TextMark */
    get_buffer(): TextBuffer
    get_deleted(): boolean
    get_left_gravity(): boolean
    get_name(): string | null
    get_visible(): boolean
    set_visible(setting: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TextMark, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TextMark, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TextMark_ConstructProps)
    _init (config?: TextMark_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(name: string | null, left_gravity: boolean): TextMark
    static $gtype: GObject.Type
}
export interface TextTag_ConstructProps extends GObject.Object_ConstructProps {
    accumulative_margin?: boolean
    allow_breaks?: boolean
    allow_breaks_set?: boolean
    background?: string
    background_full_height?: boolean
    background_full_height_set?: boolean
    background_rgba?: Gdk.RGBA
    background_set?: boolean
    direction?: TextDirection
    editable?: boolean
    editable_set?: boolean
    fallback?: boolean
    fallback_set?: boolean
    family?: string
    family_set?: boolean
    font?: string
    font_desc?: Pango.FontDescription
    font_features?: string
    font_features_set?: boolean
    foreground?: string
    foreground_rgba?: Gdk.RGBA
    foreground_set?: boolean
    indent?: number
    indent_set?: boolean
    insert_hyphens?: boolean
    insert_hyphens_set?: boolean
    invisible?: boolean
    invisible_set?: boolean
    justification?: Justification
    justification_set?: boolean
    language?: string
    language_set?: boolean
    left_margin?: number
    left_margin_set?: boolean
    letter_spacing?: number
    letter_spacing_set?: boolean
    name?: string
    overline?: Pango.Overline
    overline_rgba?: Gdk.RGBA
    overline_rgba_set?: boolean
    overline_set?: boolean
    paragraph_background?: string
    paragraph_background_rgba?: Gdk.RGBA
    paragraph_background_set?: boolean
    pixels_above_lines?: number
    pixels_above_lines_set?: boolean
    pixels_below_lines?: number
    pixels_below_lines_set?: boolean
    pixels_inside_wrap?: number
    pixels_inside_wrap_set?: boolean
    right_margin?: number
    right_margin_set?: boolean
    rise?: number
    rise_set?: boolean
    scale?: number
    scale_set?: boolean
    show_spaces?: Pango.ShowFlags
    show_spaces_set?: boolean
    size?: number
    size_points?: number
    size_set?: boolean
    stretch?: Pango.Stretch
    stretch_set?: boolean
    strikethrough?: boolean
    strikethrough_rgba?: Gdk.RGBA
    strikethrough_rgba_set?: boolean
    strikethrough_set?: boolean
    style?: Pango.Style
    style_set?: boolean
    tabs?: Pango.TabArray
    tabs_set?: boolean
    underline?: Pango.Underline
    underline_rgba?: Gdk.RGBA
    underline_rgba_set?: boolean
    underline_set?: boolean
    variant?: Pango.Variant
    variant_set?: boolean
    weight?: number
    weight_set?: boolean
    wrap_mode?: WrapMode
    wrap_mode_set?: boolean
}
export class TextTag {
    /* Properties of Gtk.TextTag */
    accumulative_margin: boolean
    allow_breaks: boolean
    allow_breaks_set: boolean
    background: string
    background_full_height: boolean
    background_full_height_set: boolean
    background_rgba: Gdk.RGBA
    background_set: boolean
    direction: TextDirection
    editable: boolean
    editable_set: boolean
    fallback: boolean
    fallback_set: boolean
    family: string
    family_set: boolean
    font: string
    font_desc: Pango.FontDescription
    font_features: string
    font_features_set: boolean
    foreground: string
    foreground_rgba: Gdk.RGBA
    foreground_set: boolean
    indent: number
    indent_set: boolean
    insert_hyphens: boolean
    insert_hyphens_set: boolean
    invisible: boolean
    invisible_set: boolean
    justification: Justification
    justification_set: boolean
    language: string
    language_set: boolean
    left_margin: number
    left_margin_set: boolean
    letter_spacing: number
    letter_spacing_set: boolean
    overline: Pango.Overline
    overline_rgba: Gdk.RGBA
    overline_rgba_set: boolean
    overline_set: boolean
    paragraph_background: string
    paragraph_background_rgba: Gdk.RGBA
    paragraph_background_set: boolean
    pixels_above_lines: number
    pixels_above_lines_set: boolean
    pixels_below_lines: number
    pixels_below_lines_set: boolean
    pixels_inside_wrap: number
    pixels_inside_wrap_set: boolean
    right_margin: number
    right_margin_set: boolean
    rise: number
    rise_set: boolean
    scale: number
    scale_set: boolean
    show_spaces: Pango.ShowFlags
    show_spaces_set: boolean
    size: number
    size_points: number
    size_set: boolean
    stretch: Pango.Stretch
    stretch_set: boolean
    strikethrough: boolean
    strikethrough_rgba: Gdk.RGBA
    strikethrough_rgba_set: boolean
    strikethrough_set: boolean
    style: Pango.Style
    style_set: boolean
    tabs: Pango.TabArray
    tabs_set: boolean
    underline: Pango.Underline
    underline_rgba: Gdk.RGBA
    underline_rgba_set: boolean
    underline_set: boolean
    variant: Pango.Variant
    variant_set: boolean
    weight: number
    weight_set: boolean
    wrap_mode: WrapMode
    wrap_mode_set: boolean
    /* Fields of Gtk.TextTag */
    parent_instance: GObject.Object
    priv: TextTagPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TextTag */
    changed(size_changed: boolean): void
    get_priority(): number
    set_priority(priority: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accumulative-margin", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accumulative-margin", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::allow-breaks", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::allow-breaks", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::allow-breaks-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::allow-breaks-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-full-height", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-full-height", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-full-height-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-full-height-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::direction", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::direction", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fallback", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fallback", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fallback-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fallback-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::family-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::family-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-desc", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-desc", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-features", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-features", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::font-features-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::font-features-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::foreground-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::foreground-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::indent", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::indent-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::insert-hyphens", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::insert-hyphens", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::insert-hyphens-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::insert-hyphens-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::invisible", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invisible", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::invisible-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invisible-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::justification", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::justification", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::justification-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::justification-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::left-margin", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::left-margin", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::left-margin-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::left-margin-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::letter-spacing", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::letter-spacing", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::letter-spacing-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::letter-spacing-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overline", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overline", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overline-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overline-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overline-rgba-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overline-rgba-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overline-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overline-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paragraph-background", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paragraph-background", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paragraph-background-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paragraph-background-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paragraph-background-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paragraph-background-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-above-lines", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-above-lines", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-above-lines-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-above-lines-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-below-lines", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-below-lines", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-below-lines-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-below-lines-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-inside-wrap", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-inside-wrap", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-inside-wrap-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-inside-wrap-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::right-margin", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::right-margin", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::right-margin-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::right-margin-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rise-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rise-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-spaces", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-spaces", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-spaces-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-spaces-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-points", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-points", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::stretch-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::stretch-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough-rgba-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough-rgba-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::strikethrough-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::strikethrough-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tabs", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tabs", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tabs-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tabs-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline-rgba", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline-rgba-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline-rgba-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::underline-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::underline-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::variant-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::variant-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::weight-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::weight-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-mode", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-mode", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-mode-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-mode-set", callback: (($obj: TextTag, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TextTag_ConstructProps)
    _init (config?: TextTag_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(name?: string | null): TextTag
    static $gtype: GObject.Type
}
export interface TextTagTable_ConstructProps extends GObject.Object_ConstructProps {
}
export class TextTagTable {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TextTagTable */
    add(tag: TextTag): boolean
    foreach(func: TextTagTableForeach): void
    get_size(): number
    lookup(name: string): TextTag | null
    remove(tag: TextTag): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.TextTagTable */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TextTagTable */
    connect(sigName: "tag-added", callback: (($obj: TextTagTable, tag: TextTag) => void)): number
    connect_after(sigName: "tag-added", callback: (($obj: TextTagTable, tag: TextTag) => void)): number
    emit(sigName: "tag-added", tag: TextTag): void
    connect(sigName: "tag-changed", callback: (($obj: TextTagTable, tag: TextTag, size_changed: boolean) => void)): number
    connect_after(sigName: "tag-changed", callback: (($obj: TextTagTable, tag: TextTag, size_changed: boolean) => void)): number
    emit(sigName: "tag-changed", tag: TextTag, size_changed: boolean): void
    connect(sigName: "tag-removed", callback: (($obj: TextTagTable, tag: TextTag) => void)): number
    connect_after(sigName: "tag-removed", callback: (($obj: TextTagTable, tag: TextTag) => void)): number
    emit(sigName: "tag-removed", tag: TextTag): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TextTagTable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TextTagTable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TextTagTable_ConstructProps)
    _init (config?: TextTagTable_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): TextTagTable
    static $gtype: GObject.Type
}
export interface TextView_ConstructProps extends Widget_ConstructProps {
    accepts_tab?: boolean
    bottom_margin?: number
    buffer?: TextBuffer
    cursor_visible?: boolean
    editable?: boolean
    extra_menu?: Gio.MenuModel
    im_module?: string
    indent?: number
    input_hints?: InputHints
    input_purpose?: InputPurpose
    justification?: Justification
    left_margin?: number
    monospace?: boolean
    overwrite?: boolean
    pixels_above_lines?: number
    pixels_below_lines?: number
    pixels_inside_wrap?: number
    right_margin?: number
    tabs?: Pango.TabArray
    top_margin?: number
    wrap_mode?: WrapMode
    accessible_role?: AccessibleRole
    hadjustment?: Adjustment
    hscroll_policy?: ScrollablePolicy
    vadjustment?: Adjustment
    vscroll_policy?: ScrollablePolicy
}
export class TextView {
    /* Properties of Gtk.TextView */
    accepts_tab: boolean
    bottom_margin: number
    buffer: TextBuffer
    cursor_visible: boolean
    editable: boolean
    extra_menu: Gio.MenuModel
    im_module: string
    indent: number
    input_hints: InputHints
    input_purpose: InputPurpose
    justification: Justification
    left_margin: number
    monospace: boolean
    overwrite: boolean
    pixels_above_lines: number
    pixels_below_lines: number
    pixels_inside_wrap: number
    right_margin: number
    tabs: Pango.TabArray
    top_margin: number
    wrap_mode: WrapMode
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Fields of Gtk.TextView */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TextView */
    add_child_at_anchor(child: Widget, anchor: TextChildAnchor): void
    add_overlay(child: Widget, xpos: number, ypos: number): void
    backward_display_line(iter: TextIter): boolean
    backward_display_line_start(iter: TextIter): boolean
    buffer_to_window_coords(win: TextWindowType, buffer_x: number, buffer_y: number): [ /* window_x */ number | null, /* window_y */ number | null ]
    forward_display_line(iter: TextIter): boolean
    forward_display_line_end(iter: TextIter): boolean
    get_accepts_tab(): boolean
    get_bottom_margin(): number
    get_buffer(): TextBuffer
    get_cursor_locations(iter?: TextIter | null): [ /* strong */ Gdk.Rectangle | null, /* weak */ Gdk.Rectangle | null ]
    get_cursor_visible(): boolean
    get_editable(): boolean
    get_extra_menu(): Gio.MenuModel
    get_gutter(win: TextWindowType): Widget | null
    get_indent(): number
    get_input_hints(): InputHints
    get_input_purpose(): InputPurpose
    get_iter_at_location(x: number, y: number): [ /* returnType */ boolean, /* iter */ TextIter ]
    get_iter_at_position(x: number, y: number): [ /* returnType */ boolean, /* iter */ TextIter, /* trailing */ number | null ]
    get_iter_location(iter: TextIter): /* location */ Gdk.Rectangle
    get_justification(): Justification
    get_left_margin(): number
    get_line_at_y(y: number): [ /* target_iter */ TextIter, /* line_top */ number ]
    get_line_yrange(iter: TextIter): [ /* y */ number, /* height */ number ]
    get_monospace(): boolean
    get_overwrite(): boolean
    get_pixels_above_lines(): number
    get_pixels_below_lines(): number
    get_pixels_inside_wrap(): number
    get_right_margin(): number
    get_tabs(): Pango.TabArray | null
    get_top_margin(): number
    get_visible_rect(): /* visible_rect */ Gdk.Rectangle
    get_wrap_mode(): WrapMode
    im_context_filter_keypress(event: Gdk.Event): boolean
    move_mark_onscreen(mark: TextMark): boolean
    move_overlay(child: Widget, xpos: number, ypos: number): void
    move_visually(iter: TextIter, count: number): boolean
    place_cursor_onscreen(): boolean
    remove(child: Widget): void
    reset_cursor_blink(): void
    reset_im_context(): void
    scroll_mark_onscreen(mark: TextMark): void
    scroll_to_iter(iter: TextIter, within_margin: number, use_align: boolean, xalign: number, yalign: number): boolean
    scroll_to_mark(mark: TextMark, within_margin: number, use_align: boolean, xalign: number, yalign: number): void
    set_accepts_tab(accepts_tab: boolean): void
    set_bottom_margin(bottom_margin: number): void
    set_buffer(buffer?: TextBuffer | null): void
    set_cursor_visible(setting: boolean): void
    set_editable(setting: boolean): void
    set_extra_menu(model?: Gio.MenuModel | null): void
    set_gutter(win: TextWindowType, widget?: Widget | null): void
    set_indent(indent: number): void
    set_input_hints(hints: InputHints): void
    set_input_purpose(purpose: InputPurpose): void
    set_justification(justification: Justification): void
    set_left_margin(left_margin: number): void
    set_monospace(monospace: boolean): void
    set_overwrite(overwrite: boolean): void
    set_pixels_above_lines(pixels_above_lines: number): void
    set_pixels_below_lines(pixels_below_lines: number): void
    set_pixels_inside_wrap(pixels_inside_wrap: number): void
    set_right_margin(right_margin: number): void
    set_tabs(tabs: Pango.TabArray): void
    set_top_margin(top_margin: number): void
    set_wrap_mode(wrap_mode: WrapMode): void
    starts_display_line(iter: TextIter): boolean
    window_to_buffer_coords(win: TextWindowType, window_x: number, window_y: number): [ /* buffer_x */ number | null, /* buffer_y */ number | null ]
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.TextView */
    vfunc_backspace(): void
    vfunc_copy_clipboard(): void
    vfunc_cut_clipboard(): void
    vfunc_delete_from_cursor(type: DeleteType, count: number): void
    vfunc_extend_selection(granularity: TextExtendSelection, location: TextIter, start: TextIter, end: TextIter): boolean
    vfunc_insert_at_cursor(str: string): void
    vfunc_insert_emoji(): void
    vfunc_move_cursor(step: MovementStep, count: number, extend_selection: boolean): void
    vfunc_paste_clipboard(): void
    vfunc_set_anchor(): void
    vfunc_snapshot_layer(layer: TextViewLayer, snapshot: Snapshot): void
    vfunc_toggle_overwrite(): void
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TextView */
    connect(sigName: "backspace", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "backspace", callback: (($obj: TextView) => void)): number
    emit(sigName: "backspace"): void
    connect(sigName: "copy-clipboard", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "copy-clipboard", callback: (($obj: TextView) => void)): number
    emit(sigName: "copy-clipboard"): void
    connect(sigName: "cut-clipboard", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "cut-clipboard", callback: (($obj: TextView) => void)): number
    emit(sigName: "cut-clipboard"): void
    connect(sigName: "delete-from-cursor", callback: (($obj: TextView, type: DeleteType, count: number) => void)): number
    connect_after(sigName: "delete-from-cursor", callback: (($obj: TextView, type: DeleteType, count: number) => void)): number
    emit(sigName: "delete-from-cursor", type: DeleteType, count: number): void
    connect(sigName: "extend-selection", callback: (($obj: TextView, granularity: TextExtendSelection, location: TextIter, start: TextIter, end: TextIter) => boolean)): number
    connect_after(sigName: "extend-selection", callback: (($obj: TextView, granularity: TextExtendSelection, location: TextIter, start: TextIter, end: TextIter) => boolean)): number
    emit(sigName: "extend-selection", granularity: TextExtendSelection, location: TextIter, start: TextIter, end: TextIter): void
    connect(sigName: "insert-at-cursor", callback: (($obj: TextView, string: string) => void)): number
    connect_after(sigName: "insert-at-cursor", callback: (($obj: TextView, string: string) => void)): number
    emit(sigName: "insert-at-cursor", string: string): void
    connect(sigName: "insert-emoji", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "insert-emoji", callback: (($obj: TextView) => void)): number
    emit(sigName: "insert-emoji"): void
    connect(sigName: "move-cursor", callback: (($obj: TextView, step: MovementStep, count: number, extend_selection: boolean) => void)): number
    connect_after(sigName: "move-cursor", callback: (($obj: TextView, step: MovementStep, count: number, extend_selection: boolean) => void)): number
    emit(sigName: "move-cursor", step: MovementStep, count: number, extend_selection: boolean): void
    connect(sigName: "move-viewport", callback: (($obj: TextView, step: ScrollStep, count: number) => void)): number
    connect_after(sigName: "move-viewport", callback: (($obj: TextView, step: ScrollStep, count: number) => void)): number
    emit(sigName: "move-viewport", step: ScrollStep, count: number): void
    connect(sigName: "paste-clipboard", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "paste-clipboard", callback: (($obj: TextView) => void)): number
    emit(sigName: "paste-clipboard"): void
    connect(sigName: "preedit-changed", callback: (($obj: TextView, preedit: string) => void)): number
    connect_after(sigName: "preedit-changed", callback: (($obj: TextView, preedit: string) => void)): number
    emit(sigName: "preedit-changed", preedit: string): void
    connect(sigName: "select-all", callback: (($obj: TextView, select: boolean) => void)): number
    connect_after(sigName: "select-all", callback: (($obj: TextView, select: boolean) => void)): number
    emit(sigName: "select-all", select: boolean): void
    connect(sigName: "set-anchor", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "set-anchor", callback: (($obj: TextView) => void)): number
    emit(sigName: "set-anchor"): void
    connect(sigName: "toggle-cursor-visible", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "toggle-cursor-visible", callback: (($obj: TextView) => void)): number
    emit(sigName: "toggle-cursor-visible"): void
    connect(sigName: "toggle-overwrite", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "toggle-overwrite", callback: (($obj: TextView) => void)): number
    emit(sigName: "toggle-overwrite"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: TextView) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: TextView, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: TextView, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "hide", callback: (($obj: TextView) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: TextView, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: TextView, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "map", callback: (($obj: TextView) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: TextView, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: TextView, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: TextView, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: TextView, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: TextView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: TextView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "realize", callback: (($obj: TextView) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "show", callback: (($obj: TextView) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: TextView, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: TextView, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: TextView) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: TextView) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: TextView) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accepts-tab", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accepts-tab", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bottom-margin", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bottom-margin", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::buffer", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::buffer", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor-visible", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor-visible", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::editable", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::editable", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::extra-menu", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extra-menu", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::im-module", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::im-module", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::indent", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-hints", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-hints", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-purpose", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-purpose", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::justification", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::justification", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::left-margin", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::left-margin", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::monospace", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::monospace", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overwrite", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overwrite", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-above-lines", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-above-lines", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-below-lines", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-below-lines", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixels-inside-wrap", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixels-inside-wrap", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::right-margin", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::right-margin", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tabs", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tabs", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::top-margin", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::top-margin", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap-mode", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap-mode", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscroll-policy", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscroll-policy", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscroll-policy", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscroll-policy", callback: (($obj: TextView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TextView_ConstructProps)
    _init (config?: TextView_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): TextView
    static new_with_buffer(buffer: TextBuffer): TextView
    static $gtype: GObject.Type
}
export interface ToggleButton_ConstructProps extends Button_ConstructProps {
    active?: boolean
    group?: ToggleButton
    accessible_role?: AccessibleRole
    action_name?: string
    action_target?: GLib.Variant
}
export class ToggleButton {
    /* Properties of Gtk.ToggleButton */
    active: boolean
    group: ToggleButton
    /* Properties of Gtk.Button */
    child: Widget
    has_frame: boolean
    icon_name: string
    label: string
    use_underline: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Actionable */
    action_name: string
    action_target: GLib.Variant
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ToggleButton */
    get_active(): boolean
    set_active(is_active: boolean): void
    set_group(group?: ToggleButton | null): void
    toggled(): void
    /* Methods of Gtk.Button */
    get_child(): Widget | null
    get_has_frame(): boolean
    get_icon_name(): string | null
    get_label(): string | null
    get_use_underline(): boolean
    set_child(child?: Widget | null): void
    set_has_frame(has_frame: boolean): void
    set_icon_name(icon_name: string): void
    set_label(label: string): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant | null
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value?: GLib.Variant | null): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.ToggleButton */
    vfunc_toggled(): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate(): void
    vfunc_clicked(): void
    vfunc_get_action_name(): string | null
    vfunc_get_action_target_value(): GLib.Variant | null
    vfunc_set_action_name(action_name?: string | null): void
    vfunc_set_action_target_value(target_value?: GLib.Variant | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToggleButton */
    connect(sigName: "toggled", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "toggled", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "toggled"): void
    /* Signals of Gtk.Button */
    connect(sigName: "activate", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "activate", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "activate"): void
    connect(sigName: "clicked", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "clicked", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "clicked"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: ToggleButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: ToggleButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: ToggleButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: ToggleButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: ToggleButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: ToggleButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: ToggleButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: ToggleButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: ToggleButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: ToggleButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: ToggleButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: ToggleButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: ToggleButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: ToggleButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::group", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::group", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-frame", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-frame", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-underline", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-underline", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-name", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-name", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action-target", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action-target", callback: (($obj: ToggleButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ToggleButton_ConstructProps)
    _init (config?: ToggleButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ToggleButton
    static new_with_label(label: string): ToggleButton
    static new_with_mnemonic(label: string): ToggleButton
    static $gtype: GObject.Type
}
export interface Tooltip_ConstructProps extends GObject.Object_ConstructProps {
}
export class Tooltip {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Tooltip */
    set_custom(custom_widget?: Widget | null): void
    set_icon(paintable?: Gdk.Paintable | null): void
    set_icon_from_gicon(gicon?: Gio.Icon | null): void
    set_icon_from_icon_name(icon_name?: string | null): void
    set_markup(markup?: string | null): void
    set_text(text?: string | null): void
    set_tip_area(rect: Gdk.Rectangle): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Tooltip, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Tooltip, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Tooltip_ConstructProps)
    _init (config?: Tooltip_ConstructProps): void
    static $gtype: GObject.Type
}
export interface TreeExpander_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    list_row?: TreeListRow
    accessible_role?: AccessibleRole
}
export class TreeExpander {
    /* Properties of Gtk.TreeExpander */
    child: Widget
    readonly item: GObject.Object
    list_row: TreeListRow
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeExpander */
    get_child(): Widget | null
    get_item(): GObject.Object | null
    get_list_row(): TreeListRow | null
    set_child(child?: Widget | null): void
    set_list_row(list_row?: TreeListRow | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: TreeExpander) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: TreeExpander) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: TreeExpander, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: TreeExpander, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: TreeExpander) => void)): number
    connect_after(sigName: "hide", callback: (($obj: TreeExpander) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: TreeExpander, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: TreeExpander, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: TreeExpander) => void)): number
    connect_after(sigName: "map", callback: (($obj: TreeExpander) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: TreeExpander, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: TreeExpander, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: TreeExpander, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: TreeExpander, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: TreeExpander, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: TreeExpander, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: TreeExpander) => void)): number
    connect_after(sigName: "realize", callback: (($obj: TreeExpander) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: TreeExpander) => void)): number
    connect_after(sigName: "show", callback: (($obj: TreeExpander) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: TreeExpander, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: TreeExpander, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: TreeExpander) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: TreeExpander) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: TreeExpander) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: TreeExpander) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::item", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::item", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::list-row", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::list-row", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: TreeExpander, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeExpander_ConstructProps)
    _init (config?: TreeExpander_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): TreeExpander
    static $gtype: GObject.Type
}
export interface TreeListModel_ConstructProps extends GObject.Object_ConstructProps {
    autoexpand?: boolean
    passthrough?: boolean
}
export class TreeListModel {
    /* Properties of Gtk.TreeListModel */
    autoexpand: boolean
    readonly model: Gio.ListModel
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeListModel */
    get_autoexpand(): boolean
    get_child_row(position: number): TreeListRow | null
    get_model(): Gio.ListModel
    get_passthrough(): boolean
    get_row(position: number): TreeListRow | null
    set_autoexpand(autoexpand: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gio.ListModel */
    get_item_type(): GObject.Type
    get_n_items(): number
    get_item(position: number): GObject.Object | null
    items_changed(position: number, removed: number, added: number): void
    /* Virtual methods of Gtk.TreeListModel */
    vfunc_get_item(position: number): GObject.Object | null
    vfunc_get_item_type(): GObject.Type
    vfunc_get_n_items(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeListModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gio.ListModel */
    connect(sigName: "items-changed", callback: (($obj: TreeListModel, position: number, removed: number, added: number) => void)): number
    connect_after(sigName: "items-changed", callback: (($obj: TreeListModel, position: number, removed: number, added: number) => void)): number
    emit(sigName: "items-changed", position: number, removed: number, added: number): void
    connect(sigName: "notify::autoexpand", callback: (($obj: TreeListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autoexpand", callback: (($obj: TreeListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: TreeListModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: TreeListModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeListModel_ConstructProps)
    _init (config?: TreeListModel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(root: Gio.ListModel, passthrough: boolean, autoexpand: boolean, create_func: TreeListModelCreateModelFunc): TreeListModel
    static $gtype: GObject.Type
}
export interface TreeListRow_ConstructProps extends GObject.Object_ConstructProps {
    expanded?: boolean
}
export class TreeListRow {
    /* Properties of Gtk.TreeListRow */
    readonly children: Gio.ListModel
    readonly depth: number
    readonly expandable: boolean
    expanded: boolean
    readonly item: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeListRow */
    get_child_row(position: number): TreeListRow | null
    get_children(): Gio.ListModel | null
    get_depth(): number
    get_expanded(): boolean
    get_item(): GObject.Object | null
    get_parent(): TreeListRow | null
    get_position(): number
    is_expandable(): boolean
    set_expanded(expanded: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::children", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::depth", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::depth", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::expandable", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expandable", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::expanded", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expanded", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::item", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::item", callback: (($obj: TreeListRow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeListRow_ConstructProps)
    _init (config?: TreeListRow_ConstructProps): void
    static $gtype: GObject.Type
}
export interface TreeListRowSorter_ConstructProps extends Sorter_ConstructProps {
    sorter?: Sorter
}
export class TreeListRowSorter {
    /* Properties of Gtk.TreeListRowSorter */
    sorter: Sorter
    /* Fields of Gtk.Sorter */
    parent_instance: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeListRowSorter */
    get_sorter(): Sorter | null
    set_sorter(sorter?: Sorter | null): void
    /* Methods of Gtk.Sorter */
    changed(change: SorterChange): void
    compare(item1: GObject.Object, item2: GObject.Object): Ordering
    get_order(): SorterOrder
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.Sorter */
    vfunc_compare(item1?: GObject.Object | null, item2?: GObject.Object | null): Ordering
    vfunc_get_order(): SorterOrder
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Sorter */
    connect(sigName: "changed", callback: (($obj: TreeListRowSorter, change: SorterChange) => void)): number
    connect_after(sigName: "changed", callback: (($obj: TreeListRowSorter, change: SorterChange) => void)): number
    emit(sigName: "changed", change: SorterChange): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeListRowSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeListRowSorter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::sorter", callback: (($obj: TreeListRowSorter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sorter", callback: (($obj: TreeListRowSorter, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeListRowSorter_ConstructProps)
    _init (config?: TreeListRowSorter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(sorter?: Sorter | null): TreeListRowSorter
    static $gtype: GObject.Type
}
export interface TreeModelFilter_ConstructProps extends GObject.Object_ConstructProps {
    child_model?: TreeModel
    virtual_root?: TreePath
}
export class TreeModelFilter {
    /* Fields of Gtk.TreeModelFilter */
    parent: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeModelFilter */
    clear_cache(): void
    convert_child_iter_to_iter(child_iter: TreeIter): [ /* returnType */ boolean, /* filter_iter */ TreeIter ]
    convert_child_path_to_path(child_path: TreePath): TreePath | null
    convert_iter_to_child_iter(filter_iter: TreeIter): /* child_iter */ TreeIter
    convert_path_to_child_path(filter_path: TreePath): TreePath | null
    get_model(): TreeModel
    refilter(): void
    set_modify_func(types: GObject.Type[], func: TreeModelFilterModifyFunc): void
    set_visible_column(column: number): void
    set_visible_func(func: TreeModelFilterVisibleFunc): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath): Gdk.ContentProvider | null
    row_draggable(path: TreePath): boolean
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): GObject.Type
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string | null
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    unref_node(iter: TreeIter): void
    /* Virtual methods of Gtk.TreeModelFilter */
    vfunc_modify(child_model: TreeModel, iter: TreeIter, value: any, column: number): void
    vfunc_visible(child_model: TreeModel, iter: TreeIter): boolean
    vfunc_drag_data_delete(path: TreePath): boolean
    vfunc_drag_data_get(path: TreePath): Gdk.ContentProvider | null
    vfunc_row_draggable(path: TreePath): boolean
    vfunc_get_column_type(index_: number): GObject.Type
    vfunc_get_flags(): TreeModelFlags
    vfunc_get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_get_n_columns(): number
    vfunc_get_path(iter: TreeIter): TreePath
    vfunc_get_value(iter: TreeIter, column: number): /* value */ any
    vfunc_iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_has_child(iter: TreeIter): boolean
    vfunc_iter_n_children(iter?: TreeIter | null): number
    vfunc_iter_next(iter: TreeIter): boolean
    vfunc_iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_previous(iter: TreeIter): boolean
    vfunc_ref_node(iter: TreeIter): void
    vfunc_row_changed(path: TreePath, iter: TreeIter): void
    vfunc_row_deleted(path: TreePath): void
    vfunc_row_has_child_toggled(path: TreePath, iter: TreeIter): void
    vfunc_row_inserted(path: TreePath, iter: TreeIter): void
    vfunc_unref_node(iter: TreeIter): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeModelFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeModelFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: (($obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-changed", callback: (($obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-changed", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-deleted", callback: (($obj: TreeModelFilter, path: TreePath) => void)): number
    connect_after(sigName: "row-deleted", callback: (($obj: TreeModelFilter, path: TreePath) => void)): number
    emit(sigName: "row-deleted", path: TreePath): void
    connect(sigName: "row-has-child-toggled", callback: (($obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-has-child-toggled", callback: (($obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-has-child-toggled", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-inserted", callback: (($obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-inserted", callback: (($obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-inserted", path: TreePath, iter: TreeIter): void
    connect(sigName: "rows-reordered", callback: (($obj: TreeModelFilter, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    connect_after(sigName: "rows-reordered", callback: (($obj: TreeModelFilter, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    emit(sigName: "rows-reordered", path: TreePath, iter: TreeIter, new_order?: object | null): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeModelFilter_ConstructProps)
    _init (config?: TreeModelFilter_ConstructProps): void
    static $gtype: GObject.Type
}
export interface TreeModelSort_ConstructProps extends GObject.Object_ConstructProps {
    model?: TreeModel
}
export class TreeModelSort {
    /* Fields of Gtk.TreeModelSort */
    parent: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeModelSort */
    clear_cache(): void
    convert_child_iter_to_iter(child_iter: TreeIter): [ /* returnType */ boolean, /* sort_iter */ TreeIter ]
    convert_child_path_to_path(child_path: TreePath): TreePath | null
    convert_iter_to_child_iter(sorted_iter: TreeIter): /* child_iter */ TreeIter
    convert_path_to_child_path(sorted_path: TreePath): TreePath | null
    get_model(): TreeModel
    iter_is_valid(iter: TreeIter): boolean
    reset_default_sort_func(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath): Gdk.ContentProvider | null
    row_draggable(path: TreePath): boolean
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): GObject.Type
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string | null
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    unref_node(iter: TreeIter): void
    /* Methods of Gtk.TreeSortable */
    get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    has_default_sort_func(): boolean
    set_default_sort_func(sort_func: TreeIterCompareFunc): void
    set_sort_column_id(sort_column_id: number, order: SortType): void
    set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc): void
    sort_column_changed(): void
    /* Virtual methods of Gtk.TreeModelSort */
    vfunc_drag_data_delete(path: TreePath): boolean
    vfunc_drag_data_get(path: TreePath): Gdk.ContentProvider | null
    vfunc_row_draggable(path: TreePath): boolean
    vfunc_get_column_type(index_: number): GObject.Type
    vfunc_get_flags(): TreeModelFlags
    vfunc_get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_get_n_columns(): number
    vfunc_get_path(iter: TreeIter): TreePath
    vfunc_get_value(iter: TreeIter, column: number): /* value */ any
    vfunc_iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_has_child(iter: TreeIter): boolean
    vfunc_iter_n_children(iter?: TreeIter | null): number
    vfunc_iter_next(iter: TreeIter): boolean
    vfunc_iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_previous(iter: TreeIter): boolean
    vfunc_ref_node(iter: TreeIter): void
    vfunc_row_changed(path: TreePath, iter: TreeIter): void
    vfunc_row_deleted(path: TreePath): void
    vfunc_row_has_child_toggled(path: TreePath, iter: TreeIter): void
    vfunc_row_inserted(path: TreePath, iter: TreeIter): void
    vfunc_unref_node(iter: TreeIter): void
    vfunc_get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    vfunc_has_default_sort_func(): boolean
    vfunc_set_default_sort_func(sort_func: TreeIterCompareFunc): void
    vfunc_set_sort_column_id(sort_column_id: number, order: SortType): void
    vfunc_set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc): void
    vfunc_sort_column_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeModelSort, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeModelSort, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: (($obj: TreeModelSort, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-changed", callback: (($obj: TreeModelSort, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-changed", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-deleted", callback: (($obj: TreeModelSort, path: TreePath) => void)): number
    connect_after(sigName: "row-deleted", callback: (($obj: TreeModelSort, path: TreePath) => void)): number
    emit(sigName: "row-deleted", path: TreePath): void
    connect(sigName: "row-has-child-toggled", callback: (($obj: TreeModelSort, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-has-child-toggled", callback: (($obj: TreeModelSort, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-has-child-toggled", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-inserted", callback: (($obj: TreeModelSort, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-inserted", callback: (($obj: TreeModelSort, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-inserted", path: TreePath, iter: TreeIter): void
    connect(sigName: "rows-reordered", callback: (($obj: TreeModelSort, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    connect_after(sigName: "rows-reordered", callback: (($obj: TreeModelSort, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    emit(sigName: "rows-reordered", path: TreePath, iter: TreeIter, new_order?: object | null): void
    /* Signals of Gtk.TreeSortable */
    connect(sigName: "sort-column-changed", callback: (($obj: TreeModelSort) => void)): number
    connect_after(sigName: "sort-column-changed", callback: (($obj: TreeModelSort) => void)): number
    emit(sigName: "sort-column-changed"): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeModelSort_ConstructProps)
    _init (config?: TreeModelSort_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new_with_model(child_model: TreeModel): TreeModelSort
    static $gtype: GObject.Type
}
export interface TreeSelection_ConstructProps extends GObject.Object_ConstructProps {
    mode?: SelectionMode
}
export class TreeSelection {
    /* Properties of Gtk.TreeSelection */
    mode: SelectionMode
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeSelection */
    count_selected_rows(): number
    get_mode(): SelectionMode
    get_selected(): [ /* returnType */ boolean, /* model */ TreeModel | null, /* iter */ TreeIter | null ]
    get_selected_rows(): [ /* returnType */ TreePath[], /* model */ TreeModel | null ]
    get_tree_view(): TreeView
    iter_is_selected(iter: TreeIter): boolean
    path_is_selected(path: TreePath): boolean
    select_all(): void
    select_iter(iter: TreeIter): void
    select_path(path: TreePath): void
    select_range(start_path: TreePath, end_path: TreePath): void
    selected_foreach(func: TreeSelectionForeachFunc): void
    set_mode(type: SelectionMode): void
    set_select_function(func: TreeSelectionFunc | null): void
    unselect_all(): void
    unselect_iter(iter: TreeIter): void
    unselect_path(path: TreePath): void
    unselect_range(start_path: TreePath, end_path: TreePath): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeSelection */
    connect(sigName: "changed", callback: (($obj: TreeSelection) => void)): number
    connect_after(sigName: "changed", callback: (($obj: TreeSelection) => void)): number
    emit(sigName: "changed"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::mode", callback: (($obj: TreeSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: TreeSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeSelection_ConstructProps)
    _init (config?: TreeSelection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface TreeStore_ConstructProps extends GObject.Object_ConstructProps {
}
export class TreeStore {
    /* Fields of Gtk.TreeStore */
    parent: GObject.Object
    priv: TreeStorePrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeStore */
    append(parent?: TreeIter | null): /* iter */ TreeIter
    clear(): void
    insert(parent: TreeIter | null, position: number): /* iter */ TreeIter
    insert_after(parent?: TreeIter | null, sibling?: TreeIter | null): /* iter */ TreeIter
    insert_before(parent?: TreeIter | null, sibling?: TreeIter | null): /* iter */ TreeIter
    insert_with_values(parent: TreeIter | null, position: number, columns: number[], values: any): /* iter */ TreeIter | null
    is_ancestor(iter: TreeIter, descendant: TreeIter): boolean
    iter_depth(iter: TreeIter): number
    iter_is_valid(iter: TreeIter): boolean
    move_after(iter: TreeIter, position?: TreeIter | null): void
    move_before(iter: TreeIter, position?: TreeIter | null): void
    prepend(parent?: TreeIter | null): /* iter */ TreeIter
    remove(iter: TreeIter): boolean
    set_column_types(types: GObject.Type[]): void
    set_value(iter: TreeIter, column: number, value: any): void
    set(iter: TreeIter, columns: number[], values: any): void
    swap(a: TreeIter, b: TreeIter): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.TreeDragDest */
    drag_data_received(dest: TreePath, value: any): boolean
    row_drop_possible(dest_path: TreePath, value: any): boolean
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath): Gdk.ContentProvider | null
    row_draggable(path: TreePath): boolean
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): GObject.Type
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string | null
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    unref_node(iter: TreeIter): void
    /* Methods of Gtk.TreeSortable */
    get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    has_default_sort_func(): boolean
    set_default_sort_func(sort_func: TreeIterCompareFunc): void
    set_sort_column_id(sort_column_id: number, order: SortType): void
    set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc): void
    sort_column_changed(): void
    /* Virtual methods of Gtk.TreeStore */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    vfunc_drag_data_received(dest: TreePath, value: any): boolean
    vfunc_row_drop_possible(dest_path: TreePath, value: any): boolean
    vfunc_drag_data_delete(path: TreePath): boolean
    vfunc_drag_data_get(path: TreePath): Gdk.ContentProvider | null
    vfunc_row_draggable(path: TreePath): boolean
    vfunc_get_column_type(index_: number): GObject.Type
    vfunc_get_flags(): TreeModelFlags
    vfunc_get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_get_n_columns(): number
    vfunc_get_path(iter: TreeIter): TreePath
    vfunc_get_value(iter: TreeIter, column: number): /* value */ any
    vfunc_iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_has_child(iter: TreeIter): boolean
    vfunc_iter_n_children(iter?: TreeIter | null): number
    vfunc_iter_next(iter: TreeIter): boolean
    vfunc_iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_previous(iter: TreeIter): boolean
    vfunc_ref_node(iter: TreeIter): void
    vfunc_row_changed(path: TreePath, iter: TreeIter): void
    vfunc_row_deleted(path: TreePath): void
    vfunc_row_has_child_toggled(path: TreePath, iter: TreeIter): void
    vfunc_row_inserted(path: TreePath, iter: TreeIter): void
    vfunc_unref_node(iter: TreeIter): void
    vfunc_get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    vfunc_has_default_sort_func(): boolean
    vfunc_set_default_sort_func(sort_func: TreeIterCompareFunc): void
    vfunc_set_sort_column_id(sort_column_id: number, order: SortType): void
    vfunc_set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc): void
    vfunc_sort_column_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeStore, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeStore, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: (($obj: TreeStore, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-changed", callback: (($obj: TreeStore, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-changed", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-deleted", callback: (($obj: TreeStore, path: TreePath) => void)): number
    connect_after(sigName: "row-deleted", callback: (($obj: TreeStore, path: TreePath) => void)): number
    emit(sigName: "row-deleted", path: TreePath): void
    connect(sigName: "row-has-child-toggled", callback: (($obj: TreeStore, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-has-child-toggled", callback: (($obj: TreeStore, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-has-child-toggled", path: TreePath, iter: TreeIter): void
    connect(sigName: "row-inserted", callback: (($obj: TreeStore, path: TreePath, iter: TreeIter) => void)): number
    connect_after(sigName: "row-inserted", callback: (($obj: TreeStore, path: TreePath, iter: TreeIter) => void)): number
    emit(sigName: "row-inserted", path: TreePath, iter: TreeIter): void
    connect(sigName: "rows-reordered", callback: (($obj: TreeStore, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    connect_after(sigName: "rows-reordered", callback: (($obj: TreeStore, path: TreePath, iter: TreeIter, new_order?: object | null) => void)): number
    emit(sigName: "rows-reordered", path: TreePath, iter: TreeIter, new_order?: object | null): void
    /* Signals of Gtk.TreeSortable */
    connect(sigName: "sort-column-changed", callback: (($obj: TreeStore) => void)): number
    connect_after(sigName: "sort-column-changed", callback: (($obj: TreeStore) => void)): number
    emit(sigName: "sort-column-changed"): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeStore_ConstructProps)
    _init (config?: TreeStore_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(types: GObject.Type[]): TreeStore
    static $gtype: GObject.Type
}
export interface TreeView_ConstructProps extends Widget_ConstructProps {
    activate_on_single_click?: boolean
    enable_grid_lines?: TreeViewGridLines
    enable_search?: boolean
    enable_tree_lines?: boolean
    expander_column?: TreeViewColumn
    fixed_height_mode?: boolean
    headers_clickable?: boolean
    headers_visible?: boolean
    hover_expand?: boolean
    hover_selection?: boolean
    level_indentation?: number
    model?: TreeModel
    reorderable?: boolean
    rubber_banding?: boolean
    search_column?: number
    show_expanders?: boolean
    tooltip_column?: number
    accessible_role?: AccessibleRole
    hadjustment?: Adjustment
    hscroll_policy?: ScrollablePolicy
    vadjustment?: Adjustment
    vscroll_policy?: ScrollablePolicy
}
export class TreeView {
    /* Properties of Gtk.TreeView */
    activate_on_single_click: boolean
    enable_grid_lines: TreeViewGridLines
    enable_search: boolean
    enable_tree_lines: boolean
    expander_column: TreeViewColumn
    fixed_height_mode: boolean
    headers_clickable: boolean
    headers_visible: boolean
    hover_expand: boolean
    hover_selection: boolean
    level_indentation: number
    model: TreeModel
    reorderable: boolean
    rubber_banding: boolean
    search_column: number
    show_expanders: boolean
    tooltip_column: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Fields of Gtk.TreeView */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeView */
    append_column(column: TreeViewColumn): number
    collapse_all(): void
    collapse_row(path: TreePath): boolean
    columns_autosize(): void
    convert_bin_window_to_tree_coords(bx: number, by: number): [ /* tx */ number, /* ty */ number ]
    convert_bin_window_to_widget_coords(bx: number, by: number): [ /* wx */ number, /* wy */ number ]
    convert_tree_to_bin_window_coords(tx: number, ty: number): [ /* bx */ number, /* by */ number ]
    convert_tree_to_widget_coords(tx: number, ty: number): [ /* wx */ number, /* wy */ number ]
    convert_widget_to_bin_window_coords(wx: number, wy: number): [ /* bx */ number, /* by */ number ]
    convert_widget_to_tree_coords(wx: number, wy: number): [ /* tx */ number, /* ty */ number ]
    create_row_drag_icon(path: TreePath): Gdk.Paintable | null
    enable_model_drag_dest(formats: Gdk.ContentFormats, actions: Gdk.DragAction): void
    enable_model_drag_source(start_button_mask: Gdk.ModifierType, formats: Gdk.ContentFormats, actions: Gdk.DragAction): void
    expand_all(): void
    expand_row(path: TreePath, open_all: boolean): boolean
    expand_to_path(path: TreePath): void
    get_activate_on_single_click(): boolean
    get_background_area(path?: TreePath | null, column?: TreeViewColumn | null): /* rect */ Gdk.Rectangle
    get_cell_area(path?: TreePath | null, column?: TreeViewColumn | null): /* rect */ Gdk.Rectangle
    get_column(n: number): TreeViewColumn | null
    get_columns(): TreeViewColumn[]
    get_cursor(): [ /* path */ TreePath | null, /* focus_column */ TreeViewColumn | null ]
    get_dest_row_at_pos(drag_x: number, drag_y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* pos */ TreeViewDropPosition | null ]
    get_drag_dest_row(): [ /* path */ TreePath | null, /* pos */ TreeViewDropPosition | null ]
    get_enable_search(): boolean
    get_enable_tree_lines(): boolean
    get_expander_column(): TreeViewColumn | null
    get_fixed_height_mode(): boolean
    get_grid_lines(): TreeViewGridLines
    get_headers_clickable(): boolean
    get_headers_visible(): boolean
    get_hover_expand(): boolean
    get_hover_selection(): boolean
    get_level_indentation(): number
    get_model(): TreeModel | null
    get_n_columns(): number
    get_path_at_pos(x: number, y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* column */ TreeViewColumn | null, /* cell_x */ number | null, /* cell_y */ number | null ]
    get_reorderable(): boolean
    get_rubber_banding(): boolean
    get_search_column(): number
    get_search_entry(): Editable | null
    get_selection(): TreeSelection
    get_show_expanders(): boolean
    get_tooltip_column(): number
    get_tooltip_context(x: number, y: number, keyboard_tip: boolean): [ /* returnType */ boolean, /* model */ TreeModel | null, /* path */ TreePath | null, /* iter */ TreeIter | null ]
    get_visible_range(): [ /* returnType */ boolean, /* start_path */ TreePath | null, /* end_path */ TreePath | null ]
    get_visible_rect(): /* visible_rect */ Gdk.Rectangle
    insert_column(column: TreeViewColumn, position: number): number
    insert_column_with_data_func(position: number, title: string, cell: CellRenderer, func: TreeCellDataFunc): number
    is_blank_at_pos(x: number, y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* column */ TreeViewColumn | null, /* cell_x */ number | null, /* cell_y */ number | null ]
    is_rubber_banding_active(): boolean
    map_expanded_rows(func: TreeViewMappingFunc): void
    move_column_after(column: TreeViewColumn, base_column?: TreeViewColumn | null): void
    remove_column(column: TreeViewColumn): number
    row_activated(path: TreePath, column: TreeViewColumn): void
    row_expanded(path: TreePath): boolean
    scroll_to_cell(path: TreePath | null, column: TreeViewColumn | null, use_align: boolean, row_align: number, col_align: number): void
    scroll_to_point(tree_x: number, tree_y: number): void
    set_activate_on_single_click(single: boolean): void
    set_column_drag_function(func?: TreeViewColumnDropFunc | null): void
    set_cursor(path: TreePath, focus_column: TreeViewColumn | null, start_editing: boolean): void
    set_cursor_on_cell(path: TreePath, focus_column: TreeViewColumn | null, focus_cell: CellRenderer | null, start_editing: boolean): void
    set_drag_dest_row(path: TreePath | null, pos: TreeViewDropPosition): void
    set_enable_search(enable_search: boolean): void
    set_enable_tree_lines(enabled: boolean): void
    set_expander_column(column?: TreeViewColumn | null): void
    set_fixed_height_mode(enable: boolean): void
    set_grid_lines(grid_lines: TreeViewGridLines): void
    set_headers_clickable(setting: boolean): void
    set_headers_visible(headers_visible: boolean): void
    set_hover_expand(expand: boolean): void
    set_hover_selection(hover: boolean): void
    set_level_indentation(indentation: number): void
    set_model(model?: TreeModel | null): void
    set_reorderable(reorderable: boolean): void
    set_row_separator_func(func?: TreeViewRowSeparatorFunc | null): void
    set_rubber_banding(enable: boolean): void
    set_search_column(column: number): void
    set_search_entry(entry?: Editable | null): void
    set_search_equal_func(search_equal_func: TreeViewSearchEqualFunc): void
    set_show_expanders(enabled: boolean): void
    set_tooltip_cell(tooltip: Tooltip, path?: TreePath | null, column?: TreeViewColumn | null, cell?: CellRenderer | null): void
    set_tooltip_column(column: number): void
    set_tooltip_row(tooltip: Tooltip, path: TreePath): void
    unset_rows_drag_dest(): void
    unset_rows_drag_source(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.TreeView */
    vfunc_columns_changed(): void
    vfunc_cursor_changed(): void
    vfunc_expand_collapse_cursor_row(logical: boolean, expand: boolean, open_all: boolean): boolean
    vfunc_move_cursor(step: MovementStep, count: number, extend: boolean, modify: boolean): boolean
    vfunc_row_activated(path: TreePath, column: TreeViewColumn): void
    vfunc_row_collapsed(iter: TreeIter, path: TreePath): void
    vfunc_row_expanded(iter: TreeIter, path: TreePath): void
    vfunc_select_all(): boolean
    vfunc_select_cursor_parent(): boolean
    vfunc_select_cursor_row(start_editing: boolean): boolean
    vfunc_start_interactive_search(): boolean
    vfunc_test_collapse_row(iter: TreeIter, path: TreePath): boolean
    vfunc_test_expand_row(iter: TreeIter, path: TreePath): boolean
    vfunc_toggle_cursor_row(): boolean
    vfunc_unselect_all(): boolean
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeView */
    connect(sigName: "columns-changed", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "columns-changed", callback: (($obj: TreeView) => void)): number
    emit(sigName: "columns-changed"): void
    connect(sigName: "cursor-changed", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "cursor-changed", callback: (($obj: TreeView) => void)): number
    emit(sigName: "cursor-changed"): void
    connect(sigName: "expand-collapse-cursor-row", callback: (($obj: TreeView, object: boolean, p0: boolean, p1: boolean) => boolean)): number
    connect_after(sigName: "expand-collapse-cursor-row", callback: (($obj: TreeView, object: boolean, p0: boolean, p1: boolean) => boolean)): number
    emit(sigName: "expand-collapse-cursor-row", object: boolean, p0: boolean, p1: boolean): void
    connect(sigName: "move-cursor", callback: (($obj: TreeView, step: MovementStep, direction: number, extend: boolean, modify: boolean) => boolean)): number
    connect_after(sigName: "move-cursor", callback: (($obj: TreeView, step: MovementStep, direction: number, extend: boolean, modify: boolean) => boolean)): number
    emit(sigName: "move-cursor", step: MovementStep, direction: number, extend: boolean, modify: boolean): void
    connect(sigName: "row-activated", callback: (($obj: TreeView, path: TreePath, column: TreeViewColumn) => void)): number
    connect_after(sigName: "row-activated", callback: (($obj: TreeView, path: TreePath, column: TreeViewColumn) => void)): number
    emit(sigName: "row-activated", path: TreePath, column: TreeViewColumn): void
    connect(sigName: "row-collapsed", callback: (($obj: TreeView, iter: TreeIter, path: TreePath) => void)): number
    connect_after(sigName: "row-collapsed", callback: (($obj: TreeView, iter: TreeIter, path: TreePath) => void)): number
    emit(sigName: "row-collapsed", iter: TreeIter, path: TreePath): void
    connect(sigName: "row-expanded", callback: (($obj: TreeView, iter: TreeIter, path: TreePath) => void)): number
    connect_after(sigName: "row-expanded", callback: (($obj: TreeView, iter: TreeIter, path: TreePath) => void)): number
    emit(sigName: "row-expanded", iter: TreeIter, path: TreePath): void
    connect(sigName: "select-all", callback: (($obj: TreeView) => boolean)): number
    connect_after(sigName: "select-all", callback: (($obj: TreeView) => boolean)): number
    emit(sigName: "select-all"): void
    connect(sigName: "select-cursor-parent", callback: (($obj: TreeView) => boolean)): number
    connect_after(sigName: "select-cursor-parent", callback: (($obj: TreeView) => boolean)): number
    emit(sigName: "select-cursor-parent"): void
    connect(sigName: "select-cursor-row", callback: (($obj: TreeView, object: boolean) => boolean)): number
    connect_after(sigName: "select-cursor-row", callback: (($obj: TreeView, object: boolean) => boolean)): number
    emit(sigName: "select-cursor-row", object: boolean): void
    connect(sigName: "start-interactive-search", callback: (($obj: TreeView) => boolean)): number
    connect_after(sigName: "start-interactive-search", callback: (($obj: TreeView) => boolean)): number
    emit(sigName: "start-interactive-search"): void
    connect(sigName: "test-collapse-row", callback: (($obj: TreeView, iter: TreeIter, path: TreePath) => boolean)): number
    connect_after(sigName: "test-collapse-row", callback: (($obj: TreeView, iter: TreeIter, path: TreePath) => boolean)): number
    emit(sigName: "test-collapse-row", iter: TreeIter, path: TreePath): void
    connect(sigName: "test-expand-row", callback: (($obj: TreeView, iter: TreeIter, path: TreePath) => boolean)): number
    connect_after(sigName: "test-expand-row", callback: (($obj: TreeView, iter: TreeIter, path: TreePath) => boolean)): number
    emit(sigName: "test-expand-row", iter: TreeIter, path: TreePath): void
    connect(sigName: "toggle-cursor-row", callback: (($obj: TreeView) => boolean)): number
    connect_after(sigName: "toggle-cursor-row", callback: (($obj: TreeView) => boolean)): number
    emit(sigName: "toggle-cursor-row"): void
    connect(sigName: "unselect-all", callback: (($obj: TreeView) => boolean)): number
    connect_after(sigName: "unselect-all", callback: (($obj: TreeView) => boolean)): number
    emit(sigName: "unselect-all"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: TreeView) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: TreeView, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: TreeView, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "hide", callback: (($obj: TreeView) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: TreeView, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: TreeView, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "map", callback: (($obj: TreeView) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: TreeView, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: TreeView, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: TreeView, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: TreeView, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: TreeView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: TreeView, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "realize", callback: (($obj: TreeView) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "show", callback: (($obj: TreeView) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: TreeView, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: TreeView, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: TreeView) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: TreeView) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: TreeView) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::activate-on-single-click", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::activate-on-single-click", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-grid-lines", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-grid-lines", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-search", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-search", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enable-tree-lines", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enable-tree-lines", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::expander-column", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expander-column", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fixed-height-mode", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed-height-mode", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::headers-clickable", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::headers-clickable", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::headers-visible", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::headers-visible", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hover-expand", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hover-expand", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hover-selection", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hover-selection", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::level-indentation", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::level-indentation", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::model", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::model", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reorderable", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reorderable", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rubber-banding", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rubber-banding", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::search-column", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search-column", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::show-expanders", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::show-expanders", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-column", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-column", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscroll-policy", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscroll-policy", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscroll-policy", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscroll-policy", callback: (($obj: TreeView, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeView_ConstructProps)
    _init (config?: TreeView_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): TreeView
    static new_with_model(model: TreeModel): TreeView
    static $gtype: GObject.Type
}
export interface TreeViewColumn_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    alignment?: number
    cell_area?: CellArea
    clickable?: boolean
    expand?: boolean
    fixed_width?: number
    max_width?: number
    min_width?: number
    reorderable?: boolean
    resizable?: boolean
    sizing?: TreeViewColumnSizing
    sort_column_id?: number
    sort_indicator?: boolean
    sort_order?: SortType
    spacing?: number
    title?: string
    visible?: boolean
    widget?: Widget
}
export class TreeViewColumn {
    /* Properties of Gtk.TreeViewColumn */
    alignment: number
    clickable: boolean
    expand: boolean
    fixed_width: number
    max_width: number
    min_width: number
    reorderable: boolean
    resizable: boolean
    sizing: TreeViewColumnSizing
    sort_column_id: number
    sort_indicator: boolean
    sort_order: SortType
    spacing: number
    title: string
    visible: boolean
    widget: Widget
    readonly width: number
    readonly x_offset: number
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.TreeViewColumn */
    add_attribute(cell_renderer: CellRenderer, attribute: string, column: number): void
    cell_get_position(cell_renderer: CellRenderer): [ /* returnType */ boolean, /* x_offset */ number | null, /* width */ number | null ]
    cell_get_size(): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    cell_is_visible(): boolean
    cell_set_cell_data(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    clear(): void
    clear_attributes(cell_renderer: CellRenderer): void
    clicked(): void
    focus_cell(cell: CellRenderer): void
    get_alignment(): number
    get_button(): Widget
    get_clickable(): boolean
    get_expand(): boolean
    get_fixed_width(): number
    get_max_width(): number
    get_min_width(): number
    get_reorderable(): boolean
    get_resizable(): boolean
    get_sizing(): TreeViewColumnSizing
    get_sort_column_id(): number
    get_sort_indicator(): boolean
    get_sort_order(): SortType
    get_spacing(): number
    get_title(): string
    get_tree_view(): Widget | null
    get_visible(): boolean
    get_widget(): Widget | null
    get_width(): number
    get_x_offset(): number
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    queue_resize(): void
    set_alignment(xalign: number): void
    set_cell_data_func(cell_renderer: CellRenderer, func: TreeCellDataFunc | null): void
    set_clickable(clickable: boolean): void
    set_expand(expand: boolean): void
    set_fixed_width(fixed_width: number): void
    set_max_width(max_width: number): void
    set_min_width(min_width: number): void
    set_reorderable(reorderable: boolean): void
    set_resizable(resizable: boolean): void
    set_sizing(type: TreeViewColumnSizing): void
    set_sort_column_id(sort_column_id: number): void
    set_sort_indicator(setting: boolean): void
    set_sort_order(order: SortType): void
    set_spacing(spacing: number): void
    set_title(title: string): void
    set_visible(visible: boolean): void
    set_widget(widget?: Widget | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.CellLayout */
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    reorder(cell: CellRenderer, position: number): void
    /* Virtual methods of Gtk.TreeViewColumn */
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    vfunc_add_attribute(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear(): void
    vfunc_clear_attributes(cell: CellRenderer): void
    vfunc_get_area(): CellArea | null
    vfunc_get_cells(): CellRenderer[]
    vfunc_pack_end(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start(cell: CellRenderer, expand: boolean): void
    vfunc_reorder(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeViewColumn */
    connect(sigName: "clicked", callback: (($obj: TreeViewColumn) => void)): number
    connect_after(sigName: "clicked", callback: (($obj: TreeViewColumn) => void)): number
    emit(sigName: "clicked"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::alignment", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alignment", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::clickable", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::clickable", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::expand", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expand", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fixed-width", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed-width", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-width", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-width", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-width", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-width", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reorderable", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reorderable", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sizing", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sizing", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sort-column-id", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sort-column-id", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sort-indicator", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sort-indicator", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sort-order", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sort-order", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spacing", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spacing", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::widget", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::x-offset", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::x-offset", callback: (($obj: TreeViewColumn, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TreeViewColumn_ConstructProps)
    _init (config?: TreeViewColumn_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): TreeViewColumn
    static new_with_area(area: CellArea): TreeViewColumn
    static $gtype: GObject.Type
}
export interface Video_ConstructProps extends Widget_ConstructProps {
    autoplay?: boolean
    file?: Gio.File
    loop?: boolean
    media_stream?: MediaStream
    accessible_role?: AccessibleRole
}
export class Video {
    /* Properties of Gtk.Video */
    autoplay: boolean
    file: Gio.File
    loop: boolean
    media_stream: MediaStream
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Video */
    get_autoplay(): boolean
    get_file(): Gio.File | null
    get_loop(): boolean
    get_media_stream(): MediaStream | null
    set_autoplay(autoplay: boolean): void
    set_file(file?: Gio.File | null): void
    set_filename(filename?: string | null): void
    set_loop(loop: boolean): void
    set_media_stream(stream?: MediaStream | null): void
    set_resource(resource_path?: string | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Video) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Video) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Video, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Video, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Video) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Video) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Video, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Video, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Video) => void)): number
    connect_after(sigName: "map", callback: (($obj: Video) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Video, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Video, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Video, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Video, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Video, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Video, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Video) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Video) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Video) => void)): number
    connect_after(sigName: "show", callback: (($obj: Video) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Video, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Video, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Video) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Video) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Video) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Video) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autoplay", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autoplay", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::file", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loop", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loop", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media-stream", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-stream", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Video, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Video_ConstructProps)
    _init (config?: Video_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Video
    static new_for_file(file?: Gio.File | null): Video
    static new_for_filename(filename?: string | null): Video
    static new_for_media_stream(stream?: MediaStream | null): Video
    static new_for_resource(resource_path?: string | null): Video
    static $gtype: GObject.Type
}
export interface Viewport_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    scroll_to_focus?: boolean
    accessible_role?: AccessibleRole
    hadjustment?: Adjustment
    hscroll_policy?: ScrollablePolicy
    vadjustment?: Adjustment
    vscroll_policy?: ScrollablePolicy
}
export class Viewport {
    /* Properties of Gtk.Viewport */
    child: Widget
    scroll_to_focus: boolean
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Scrollable */
    hadjustment: Adjustment
    hscroll_policy: ScrollablePolicy
    vadjustment: Adjustment
    vscroll_policy: ScrollablePolicy
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Viewport */
    get_child(): Widget | null
    get_scroll_to_focus(): boolean
    set_child(child?: Widget | null): void
    set_scroll_to_focus(scroll_to_focus: boolean): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.Viewport */
    vfunc_get_border(): [ /* returnType */ boolean, /* border */ Border ]
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Viewport) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Viewport) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Viewport, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Viewport, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Viewport) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Viewport) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Viewport, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Viewport, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Viewport) => void)): number
    connect_after(sigName: "map", callback: (($obj: Viewport) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Viewport, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Viewport, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Viewport, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Viewport, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Viewport, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Viewport, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Viewport) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Viewport) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Viewport) => void)): number
    connect_after(sigName: "show", callback: (($obj: Viewport) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Viewport, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Viewport, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Viewport) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Viewport) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Viewport) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Viewport) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-to-focus", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-to-focus", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hadjustment", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hadjustment", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hscroll-policy", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hscroll-policy", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vadjustment", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vadjustment", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vscroll-policy", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vscroll-policy", callback: (($obj: Viewport, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Viewport_ConstructProps)
    _init (config?: Viewport_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(hadjustment?: Adjustment | null, vadjustment?: Adjustment | null): Viewport
    static $gtype: GObject.Type
}
export interface VolumeButton_ConstructProps extends ScaleButton_ConstructProps {
    use_symbolic?: boolean
    accessible_role?: AccessibleRole
    orientation?: Orientation
}
export class VolumeButton {
    /* Properties of Gtk.VolumeButton */
    use_symbolic: boolean
    /* Properties of Gtk.ScaleButton */
    adjustment: Adjustment
    icons: string[]
    value: number
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Properties of Gtk.Orientable */
    orientation: Orientation
    /* Fields of Gtk.ScaleButton */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.ScaleButton */
    get_adjustment(): Adjustment
    get_minus_button(): Button
    get_plus_button(): Button
    get_popup(): Widget
    get_value(): number
    set_adjustment(adjustment: Adjustment): void
    set_icons(icons: string[]): void
    set_value(value: number): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.ScaleButton */
    vfunc_value_changed(value: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ScaleButton */
    connect(sigName: "popdown", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "popdown", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "popdown"): void
    connect(sigName: "popup", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "popup", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "popup"): void
    connect(sigName: "value-changed", callback: (($obj: VolumeButton, value: number) => void)): number
    connect_after(sigName: "value-changed", callback: (($obj: VolumeButton, value: number) => void)): number
    emit(sigName: "value-changed", value: number): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: VolumeButton, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: VolumeButton, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "hide", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: VolumeButton, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: VolumeButton, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "map", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: VolumeButton, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: VolumeButton, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: VolumeButton, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: VolumeButton, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: VolumeButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: VolumeButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "realize", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "show", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: VolumeButton, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: VolumeButton, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: VolumeButton) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: VolumeButton) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::use-symbolic", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-symbolic", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::adjustment", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::adjustment", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icons", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icons", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::orientation", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: VolumeButton, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: VolumeButton_ConstructProps)
    _init (config?: VolumeButton_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): VolumeButton
    static new(min: number, max: number, step: number, icons?: string[] | null): VolumeButton
    static $gtype: GObject.Type
}
export interface Widget_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    can_focus?: boolean
    can_target?: boolean
    css_classes?: string[]
    css_name?: string
    cursor?: Gdk.Cursor
    focus_on_click?: boolean
    focusable?: boolean
    halign?: Align
    has_tooltip?: boolean
    height_request?: number
    hexpand?: boolean
    hexpand_set?: boolean
    layout_manager?: LayoutManager
    margin_bottom?: number
    margin_end?: number
    margin_start?: number
    margin_top?: number
    name?: string
    opacity?: number
    overflow?: Overflow
    receives_default?: boolean
    sensitive?: boolean
    tooltip_markup?: string
    tooltip_text?: string
    valign?: Align
    vexpand?: boolean
    vexpand_set?: boolean
    visible?: boolean
    width_request?: number
    accessible_role?: AccessibleRole
}
export class Widget {
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Widget) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Widget) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Widget, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Widget, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Widget) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Widget) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Widget, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Widget, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Widget) => void)): number
    connect_after(sigName: "map", callback: (($obj: Widget) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Widget, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Widget, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Widget, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Widget, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Widget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Widget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Widget) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Widget) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Widget) => void)): number
    connect_after(sigName: "show", callback: (($obj: Widget) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Widget, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Widget, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Widget) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Widget) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Widget) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Widget) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::can-focus", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Widget, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Widget_ConstructProps)
    _init (config?: Widget_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get_default_direction(): TextDirection
    static set_default_direction(dir: TextDirection): void
    static add_shortcut(widget_class: Widget | Function | GObject.Type, shortcut: Shortcut): void
    static bind_template_callback_full(widget_class: Widget | Function | GObject.Type, callback_name: string, callback_symbol: GObject.Callback): void
    static bind_template_child_full(widget_class: Widget | Function | GObject.Type, name: string, internal_child: boolean, struct_offset: number): void
    static get_accessible_role(widget_class: Widget | Function | GObject.Type): AccessibleRole
    static get_activate_signal(widget_class: Widget | Function | GObject.Type): number
    static get_css_name(widget_class: Widget | Function | GObject.Type): string
    static get_layout_manager_type(widget_class: Widget | Function | GObject.Type): GObject.Type
    static install_action(widget_class: Widget | Function | GObject.Type, action_name: string, parameter_type: string | null, activate: WidgetActionActivateFunc): void
    static install_property_action(widget_class: Widget | Function | GObject.Type, action_name: string, property_name: string): void
    static query_action(widget_class: Widget | Function | GObject.Type, index_: number): [ /* returnType */ boolean, /* owner */ any, /* action_name */ string, /* parameter_type */ GLib.VariantType | null, /* property_name */ string | null ]
    static set_accessible_role(widget_class: Widget | Function | GObject.Type, accessible_role: AccessibleRole): void
    static set_activate_signal(widget_class: Widget | Function | GObject.Type, signal_id: number): void
    static set_activate_signal_from_name(widget_class: Widget | Function | GObject.Type, signal_name: string): void
    static set_css_name(widget_class: Widget | Function | GObject.Type, name: string): void
    static set_layout_manager_type(widget_class: Widget | Function | GObject.Type, type: GObject.Type): void
    static set_template(widget_class: Widget | Function | GObject.Type, template_bytes: GLib.Bytes): void
    static set_template_from_resource(widget_class: Widget | Function | GObject.Type, resource_name: string): void
    static set_template_scope(widget_class: Widget | Function | GObject.Type, scope: BuilderScope): void
    static $gtype: GObject.Type
}
export interface WidgetPaintable_ConstructProps extends GObject.Object_ConstructProps {
    widget?: Widget
}
export class WidgetPaintable {
    /* Properties of Gtk.WidgetPaintable */
    widget: Widget
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.WidgetPaintable */
    get_widget(): Widget | null
    set_widget(widget?: Widget | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gdk.Paintable */
    compute_concrete_size(specified_width: number, specified_height: number, default_width: number, default_height: number): [ /* concrete_width */ number, /* concrete_height */ number ]
    get_current_image(): Gdk.Paintable
    get_flags(): Gdk.PaintableFlags
    get_intrinsic_aspect_ratio(): number
    get_intrinsic_height(): number
    get_intrinsic_width(): number
    invalidate_contents(): void
    invalidate_size(): void
    snapshot(snapshot: Gdk.Snapshot, width: number, height: number): void
    /* Virtual methods of Gtk.WidgetPaintable */
    vfunc_get_current_image(): Gdk.Paintable
    vfunc_get_flags(): Gdk.PaintableFlags
    vfunc_get_intrinsic_aspect_ratio(): number
    vfunc_get_intrinsic_height(): number
    vfunc_get_intrinsic_width(): number
    vfunc_snapshot(snapshot: Gdk.Snapshot, width: number, height: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: WidgetPaintable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: WidgetPaintable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of Gdk.Paintable */
    connect(sigName: "invalidate-contents", callback: (($obj: WidgetPaintable) => void)): number
    connect_after(sigName: "invalidate-contents", callback: (($obj: WidgetPaintable) => void)): number
    emit(sigName: "invalidate-contents"): void
    connect(sigName: "invalidate-size", callback: (($obj: WidgetPaintable) => void)): number
    connect_after(sigName: "invalidate-size", callback: (($obj: WidgetPaintable) => void)): number
    emit(sigName: "invalidate-size"): void
    connect(sigName: "notify::widget", callback: (($obj: WidgetPaintable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::widget", callback: (($obj: WidgetPaintable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: WidgetPaintable_ConstructProps)
    _init (config?: WidgetPaintable_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(widget?: Widget | null): WidgetPaintable
    static new_empty(intrinsic_width: number, intrinsic_height: number): Gdk.Paintable
    static $gtype: GObject.Type
}
export interface Window_ConstructProps extends Widget_ConstructProps {
    application?: Application
    child?: Widget
    decorated?: boolean
    default_height?: number
    default_widget?: Widget
    default_width?: number
    deletable?: boolean
    destroy_with_parent?: boolean
    display?: Gdk.Display
    focus_visible?: boolean
    focus_widget?: Widget
    fullscreened?: boolean
    handle_menubar_accel?: boolean
    hide_on_close?: boolean
    icon_name?: string
    maximized?: boolean
    mnemonics_visible?: boolean
    modal?: boolean
    resizable?: boolean
    startup_id?: string
    title?: string
    transient_for?: Window
    accessible_role?: AccessibleRole
}
export class Window {
    /* Properties of Gtk.Window */
    application: Application
    child: Widget
    decorated: boolean
    default_height: number
    default_widget: Widget
    default_width: number
    deletable: boolean
    destroy_with_parent: boolean
    display: Gdk.Display
    focus_visible: boolean
    focus_widget: Widget
    fullscreened: boolean
    handle_menubar_accel: boolean
    hide_on_close: boolean
    icon_name: string
    readonly is_active: boolean
    maximized: boolean
    mnemonics_visible: boolean
    modal: boolean
    resizable: boolean
    startup_id: string
    title: string
    transient_for: Window
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Window */
    parent_instance: Widget
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.Window */
    close(): void
    destroy(): void
    fullscreen(): void
    fullscreen_on_monitor(monitor: Gdk.Monitor): void
    get_application(): Application | null
    get_child(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_visible(): boolean
    get_group(): WindowGroup
    get_handle_menubar_accel(): boolean
    get_hide_on_close(): boolean
    get_icon_name(): string | null
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_resizable(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    has_group(): boolean
    is_fullscreen(): boolean
    is_maximized(): boolean
    maximize(): void
    minimize(): void
    present(): void
    present_with_time(timestamp: number): void
    set_application(application?: Application | null): void
    set_child(child?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default_size(width: number, height: number): void
    set_default_widget(default_widget?: Widget | null): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_display(display: Gdk.Display): void
    set_focus(focus?: Widget | null): void
    set_focus_visible(setting: boolean): void
    set_handle_menubar_accel(handle_menubar_accel: boolean): void
    set_hide_on_close(setting: boolean): void
    set_icon_name(name?: string | null): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_resizable(resizable: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title?: string | null): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    unfullscreen(): void
    unmaximize(): void
    unminimize(): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Methods of Gtk.Native */
    get_renderer(): Gsk.Renderer
    get_surface(): Gdk.Surface
    get_surface_transform(): [ /* x */ number, /* y */ number ]
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default(): void
    vfunc_activate_focus(): void
    vfunc_close_request(): boolean
    vfunc_enable_debugging(toggle: boolean): boolean
    vfunc_keys_changed(): void
    vfunc_add_controller(controller: ShortcutController): void
    vfunc_remove_controller(controller: ShortcutController): void
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: (($obj: Window) => void)): number
    connect_after(sigName: "activate-default", callback: (($obj: Window) => void)): number
    emit(sigName: "activate-default"): void
    connect(sigName: "activate-focus", callback: (($obj: Window) => void)): number
    connect_after(sigName: "activate-focus", callback: (($obj: Window) => void)): number
    emit(sigName: "activate-focus"): void
    connect(sigName: "close-request", callback: (($obj: Window) => boolean)): number
    connect_after(sigName: "close-request", callback: (($obj: Window) => boolean)): number
    emit(sigName: "close-request"): void
    connect(sigName: "enable-debugging", callback: (($obj: Window, toggle: boolean) => boolean)): number
    connect_after(sigName: "enable-debugging", callback: (($obj: Window, toggle: boolean) => boolean)): number
    emit(sigName: "enable-debugging", toggle: boolean): void
    connect(sigName: "keys-changed", callback: (($obj: Window) => void)): number
    connect_after(sigName: "keys-changed", callback: (($obj: Window) => void)): number
    emit(sigName: "keys-changed"): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: Window) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: Window) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: Window, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: Window, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: Window) => void)): number
    connect_after(sigName: "hide", callback: (($obj: Window) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: Window, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: Window, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: Window) => void)): number
    connect_after(sigName: "map", callback: (($obj: Window) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: Window, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: Window, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: Window, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: Window, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: Window, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: Window, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: Window) => void)): number
    connect_after(sigName: "realize", callback: (($obj: Window) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: Window) => void)): number
    connect_after(sigName: "show", callback: (($obj: Window) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: Window, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: Window, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: Window) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: Window) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: Window) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: Window) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::application", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::decorated", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decorated", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-height", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-height", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-widget", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-widget", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-width", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-width", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::deletable", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::deletable", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::destroy-with-parent", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::destroy-with-parent", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::display", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::display", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-visible", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-visible", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-widget", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-widget", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fullscreened", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fullscreened", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::handle-menubar-accel", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::handle-menubar-accel", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hide-on-close", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hide-on-close", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::icon-name", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::icon-name", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maximized", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maximized", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mnemonics-visible", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mnemonics-visible", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::modal", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::modal", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::resizable", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::resizable", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::startup-id", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::startup-id", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::transient-for", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::transient-for", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: Window, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Window_ConstructProps)
    _init (config?: Window_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): Window
    static get_default_icon_name(): string | null
    static get_toplevels(): Gio.ListModel
    static list_toplevels(): Widget[]
    static set_auto_startup_notification(setting: boolean): void
    static set_default_icon_name(name: string): void
    static set_interactive_debugging(enable: boolean): void
    static get_for_surface(surface: Gdk.Surface): Native
    static $gtype: GObject.Type
}
export interface WindowControls_ConstructProps extends Widget_ConstructProps {
    decoration_layout?: string
    side?: PackType
    accessible_role?: AccessibleRole
}
export class WindowControls {
    /* Properties of Gtk.WindowControls */
    decoration_layout: string
    readonly empty: boolean
    side: PackType
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.WindowControls */
    get_decoration_layout(): string | null
    get_empty(): boolean
    get_side(): PackType
    set_decoration_layout(layout?: string | null): void
    set_side(side: PackType): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: WindowControls) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: WindowControls) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: WindowControls, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: WindowControls, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: WindowControls) => void)): number
    connect_after(sigName: "hide", callback: (($obj: WindowControls) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: WindowControls, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: WindowControls, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: WindowControls) => void)): number
    connect_after(sigName: "map", callback: (($obj: WindowControls) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: WindowControls, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: WindowControls, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: WindowControls, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: WindowControls, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: WindowControls, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: WindowControls, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: WindowControls) => void)): number
    connect_after(sigName: "realize", callback: (($obj: WindowControls) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: WindowControls) => void)): number
    connect_after(sigName: "show", callback: (($obj: WindowControls) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: WindowControls, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: WindowControls, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: WindowControls) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: WindowControls) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: WindowControls) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: WindowControls) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::decoration-layout", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decoration-layout", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::empty", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::empty", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::side", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::side", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: WindowControls, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: WindowControls_ConstructProps)
    _init (config?: WindowControls_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(side: PackType): WindowControls
    static $gtype: GObject.Type
}
export interface WindowGroup_ConstructProps extends GObject.Object_ConstructProps {
}
export class WindowGroup {
    /* Fields of Gtk.WindowGroup */
    parent_instance: GObject.Object
    priv: WindowGroupPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.WindowGroup */
    add_window(window: Window): void
    list_windows(): Window[]
    remove_window(window: Window): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: WindowGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: WindowGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: WindowGroup_ConstructProps)
    _init (config?: WindowGroup_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): WindowGroup
    static $gtype: GObject.Type
}
export interface WindowHandle_ConstructProps extends Widget_ConstructProps {
    child?: Widget
    accessible_role?: AccessibleRole
}
export class WindowHandle {
    /* Properties of Gtk.WindowHandle */
    child: Widget
    /* Properties of Gtk.Widget */
    can_focus: boolean
    can_target: boolean
    css_classes: string[]
    cursor: Gdk.Cursor
    focus_on_click: boolean
    focusable: boolean
    halign: Align
    readonly has_default: boolean
    readonly has_focus: boolean
    has_tooltip: boolean
    height_request: number
    hexpand: boolean
    hexpand_set: boolean
    layout_manager: LayoutManager
    margin_bottom: number
    margin_end: number
    margin_start: number
    margin_top: number
    name: string
    opacity: number
    overflow: Overflow
    readonly parent: Widget
    receives_default: boolean
    readonly root: Root
    readonly scale_factor: number
    sensitive: boolean
    tooltip_markup: string
    tooltip_text: string
    valign: Align
    vexpand: boolean
    vexpand_set: boolean
    visible: boolean
    width_request: number
    /* Properties of Gtk.Accessible */
    accessible_role: AccessibleRole
    /* Fields of Gtk.Widget */
    parent_instance: GObject.InitiallyUnowned
    /* Fields of GObject.InitiallyUnowned */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gtk.WindowHandle */
    get_child(): Widget | null
    set_child(child?: Widget | null): void
    /* Methods of Gtk.Widget */
    action_set_enabled(action_name: string, enabled: boolean): void
    activate(): boolean
    activate_action(name: string, args?: GLib.Variant | null): boolean
    activate_default(): void
    add_controller(controller: EventController): void
    add_css_class(css_class: string): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback): number
    allocate(width: number, height: number, baseline: number, transform?: Gsk.Transform | null): void
    child_focus(direction: DirectionType): boolean
    compute_bounds(target: Widget): [ /* returnType */ boolean, /* out_bounds */ Graphene.Rect ]
    compute_expand(orientation: Orientation): boolean
    compute_point(target: Widget, point: Graphene.Point): [ /* returnType */ boolean, /* out_point */ Graphene.Point ]
    compute_transform(target: Widget): [ /* returnType */ boolean, /* out_transform */ Graphene.Matrix ]
    contains(x: number, y: number): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    error_bell(): void
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: GObject.Type): Widget | null
    get_can_focus(): boolean
    get_can_target(): boolean
    get_child_visible(): boolean
    get_clipboard(): Gdk.Clipboard
    get_css_classes(): string[]
    get_css_name(): string
    get_cursor(): Gdk.Cursor | null
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_first_child(): Widget | null
    get_focus_child(): Widget | null
    get_focus_on_click(): boolean
    get_focusable(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_height(): number
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_last_child(): Widget | null
    get_layout_manager(): LayoutManager | null
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_start(): number
    get_margin_top(): number
    get_name(): string
    get_native(): Native | null
    get_next_sibling(): Widget | null
    get_opacity(): number
    get_overflow(): Overflow
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_prev_sibling(): Widget | null
    get_primary_clipboard(): Gdk.Clipboard
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_root(): Root | null
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size(orientation: Orientation): number
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_template_child(widget_type: GObject.Type, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_valign(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_width(): number
    grab_focus(): boolean
    has_css_class(css_class: string): boolean
    has_visible_focus(): boolean
    hide(): void
    in_destruction(): boolean
    init_template(): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    insert_after(parent: Widget, previous_sibling?: Widget | null): void
    insert_before(parent: Widget, next_sibling?: Widget | null): void
    is_ancestor(ancestor: Widget): boolean
    is_drawable(): boolean
    is_focus(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_mnemonic_labels(): Widget[]
    map(): void
    measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate(group_cycling: boolean): boolean
    observe_children(): Gio.ListModel
    observe_controllers(): Gio.ListModel
    pick(x: number, y: number, flags: PickFlags): Widget | null
    queue_allocate(): void
    queue_draw(): void
    queue_resize(): void
    realize(): void
    remove_controller(controller: EventController): void
    remove_css_class(css_class: string): void
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    set_can_focus(can_focus: boolean): void
    set_can_target(can_target: boolean): void
    set_child_visible(child_visible: boolean): void
    set_css_classes(classes: string[]): void
    set_cursor(cursor?: Gdk.Cursor | null): void
    set_cursor_from_name(name?: string | null): void
    set_direction(dir: TextDirection): void
    set_focus_child(child?: Widget | null): void
    set_focus_on_click(focus_on_click: boolean): void
    set_focusable(focusable: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_layout_manager(layout_manager?: LayoutManager | null): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_opacity(opacity: number): void
    set_overflow(overflow: Overflow): void
    set_parent(parent: Widget): void
    set_receives_default(receives_default: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    should_layout(): boolean
    show(): void
    size_allocate(allocation: Allocation, baseline: number): void
    snapshot_child(child: Widget, snapshot: Snapshot): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.Accessible */
    get_accessible_role(): AccessibleRole
    reset_property(property: AccessibleProperty): void
    reset_relation(relation: AccessibleRelation): void
    reset_state(state: AccessibleState): void
    update_property(properties: AccessibleProperty[], values: any): void
    update_relation(relations: AccessibleRelation[], values: any): void
    update_state(states: AccessibleState[], values: any): void
    /* Methods of Gtk.Buildable */
    get_buildable_id(): string
    /* Virtual methods of Gtk.Widget */
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_contains(x: number, y: number): boolean
    vfunc_css_changed(change: CssStyleChange): void
    vfunc_direction_changed(previous_direction: TextDirection): void
    vfunc_focus(direction: DirectionType): boolean
    vfunc_get_request_mode(): SizeRequestMode
    vfunc_grab_focus(): boolean
    vfunc_hide(): void
    vfunc_keynav_failed(direction: DirectionType): boolean
    vfunc_map(): void
    vfunc_measure(orientation: Orientation, for_size: number): [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_move_focus(direction: DirectionType): void
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_realize(): void
    vfunc_root(): void
    vfunc_set_focus_child(child?: Widget | null): void
    vfunc_show(): void
    vfunc_size_allocate(width: number, height: number, baseline: number): void
    vfunc_snapshot(snapshot: Snapshot): void
    vfunc_state_flags_changed(previous_state_flags: StateFlags): void
    vfunc_system_setting_changed(settings: SystemSetting): void
    vfunc_unmap(): void
    vfunc_unrealize(): void
    vfunc_unroot(): void
    vfunc_add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    vfunc_get_id(): string
    vfunc_get_internal_child(builder: Builder, childname: string): GObject.Object
    vfunc_parser_finished(builder: Builder): void
    vfunc_set_buildable_property(builder: Builder, name: string, value: any): void
    vfunc_set_id(id: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "destroy", callback: (($obj: WindowHandle) => void)): number
    connect_after(sigName: "destroy", callback: (($obj: WindowHandle) => void)): number
    emit(sigName: "destroy"): void
    connect(sigName: "direction-changed", callback: (($obj: WindowHandle, previous_direction: TextDirection) => void)): number
    connect_after(sigName: "direction-changed", callback: (($obj: WindowHandle, previous_direction: TextDirection) => void)): number
    emit(sigName: "direction-changed", previous_direction: TextDirection): void
    connect(sigName: "hide", callback: (($obj: WindowHandle) => void)): number
    connect_after(sigName: "hide", callback: (($obj: WindowHandle) => void)): number
    emit(sigName: "hide"): void
    connect(sigName: "keynav-failed", callback: (($obj: WindowHandle, direction: DirectionType) => boolean)): number
    connect_after(sigName: "keynav-failed", callback: (($obj: WindowHandle, direction: DirectionType) => boolean)): number
    emit(sigName: "keynav-failed", direction: DirectionType): void
    connect(sigName: "map", callback: (($obj: WindowHandle) => void)): number
    connect_after(sigName: "map", callback: (($obj: WindowHandle) => void)): number
    emit(sigName: "map"): void
    connect(sigName: "mnemonic-activate", callback: (($obj: WindowHandle, group_cycling: boolean) => boolean)): number
    connect_after(sigName: "mnemonic-activate", callback: (($obj: WindowHandle, group_cycling: boolean) => boolean)): number
    emit(sigName: "mnemonic-activate", group_cycling: boolean): void
    connect(sigName: "move-focus", callback: (($obj: WindowHandle, direction: DirectionType) => void)): number
    connect_after(sigName: "move-focus", callback: (($obj: WindowHandle, direction: DirectionType) => void)): number
    emit(sigName: "move-focus", direction: DirectionType): void
    connect(sigName: "query-tooltip", callback: (($obj: WindowHandle, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    connect_after(sigName: "query-tooltip", callback: (($obj: WindowHandle, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean)): number
    emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): void
    connect(sigName: "realize", callback: (($obj: WindowHandle) => void)): number
    connect_after(sigName: "realize", callback: (($obj: WindowHandle) => void)): number
    emit(sigName: "realize"): void
    connect(sigName: "show", callback: (($obj: WindowHandle) => void)): number
    connect_after(sigName: "show", callback: (($obj: WindowHandle) => void)): number
    emit(sigName: "show"): void
    connect(sigName: "state-flags-changed", callback: (($obj: WindowHandle, flags: StateFlags) => void)): number
    connect_after(sigName: "state-flags-changed", callback: (($obj: WindowHandle, flags: StateFlags) => void)): number
    emit(sigName: "state-flags-changed", flags: StateFlags): void
    connect(sigName: "unmap", callback: (($obj: WindowHandle) => void)): number
    connect_after(sigName: "unmap", callback: (($obj: WindowHandle) => void)): number
    emit(sigName: "unmap"): void
    connect(sigName: "unrealize", callback: (($obj: WindowHandle) => void)): number
    connect_after(sigName: "unrealize", callback: (($obj: WindowHandle) => void)): number
    emit(sigName: "unrealize"): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-focus", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-focus", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::can-target", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::can-target", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-classes", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-classes", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cursor", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cursor", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-on-click", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-on-click", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focusable", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focusable", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::halign", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::halign", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-default", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-default", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-focus", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-focus", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::has-tooltip", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::has-tooltip", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height-request", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height-request", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hexpand-set", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hexpand-set", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layout-manager", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layout-manager", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-bottom", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-bottom", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-end", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-end", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-start", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-start", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-top", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-top", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opacity", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opacity", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overflow", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overflow", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::receives-default", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::receives-default", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scale-factor", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scale-factor", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sensitive", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sensitive", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-markup", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-markup", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tooltip-text", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tooltip-text", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valign", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valign", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vexpand-set", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vexpand-set", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visible", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width-request", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width-request", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::accessible-role", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accessible-role", callback: (($obj: WindowHandle, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: WindowHandle_ConstructProps)
    _init (config?: WindowHandle_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): WindowHandle
    static $gtype: GObject.Type
}
export abstract class ATContextClass {
    static name: string
}
export abstract class AccessibleInterface {
    static name: string
}
export abstract class ActionableInterface {
    /* Fields of Gtk.ActionableInterface */
    get_action_name: (actionable: Actionable) => string | null
    set_action_name: (actionable: Actionable, action_name?: string | null) => void
    get_action_target_value: (actionable: Actionable) => GLib.Variant | null
    set_action_target_value: (actionable: Actionable, target_value?: GLib.Variant | null) => void
    static name: string
}
export abstract class ActivateActionClass {
    static name: string
}
export abstract class AdjustmentClass {
    /* Fields of Gtk.AdjustmentClass */
    parent_class: GObject.InitiallyUnownedClass
    changed: (adjustment: Adjustment) => void
    value_changed: (adjustment: Adjustment) => void
    static name: string
}
export abstract class AlternativeTriggerClass {
    static name: string
}
export abstract class AnyFilterClass {
    static name: string
}
export abstract class ApplicationClass {
    /* Fields of Gtk.ApplicationClass */
    parent_class: Gio.ApplicationClass
    window_added: (application: Application, window: Window) => void
    window_removed: (application: Application, window: Window) => void
    static name: string
}
export abstract class ApplicationWindowClass {
    /* Fields of Gtk.ApplicationWindowClass */
    parent_class: WindowClass
    static name: string
}
export abstract class BinLayoutClass {
    /* Fields of Gtk.BinLayoutClass */
    parent_class: LayoutManagerClass
    static name: string
}
export class Bitset {
    /* Methods of Gtk.Bitset */
    add(value: number): boolean
    add_range(start: number, n_items: number): void
    add_range_closed(first: number, last: number): void
    add_rectangle(start: number, width: number, height: number, stride: number): void
    contains(value: number): boolean
    copy(): Bitset
    difference(other: Bitset): void
    equals(other: Bitset): boolean
    get_maximum(): number
    get_minimum(): number
    get_nth(nth: number): number
    get_size(): number
    get_size_in_range(first: number, last: number): number
    intersect(other: Bitset): void
    is_empty(): boolean
    ref(): Bitset
    remove(value: number): boolean
    remove_all(): void
    remove_range(start: number, n_items: number): void
    remove_range_closed(first: number, last: number): void
    remove_rectangle(start: number, width: number, height: number, stride: number): void
    shift_left(amount: number): void
    shift_right(amount: number): void
    splice(position: number, removed: number, added: number): void
    subtract(other: Bitset): void
    union(other: Bitset): void
    unref(): void
    static name: string
    /* Static methods and pseudo-constructors */
    static new_empty(): Bitset
    static new_range(start: number, n_items: number): Bitset
}
export class BitsetIter {
    /* Methods of Gtk.BitsetIter */
    get_value(): number
    is_valid(): boolean
    next(): [ /* returnType */ boolean, /* value */ number | null ]
    previous(): [ /* returnType */ boolean, /* value */ number | null ]
    static name: string
    /* Static methods and pseudo-constructors */
    static init_at(set: Bitset, target: number): [ /* returnType */ boolean, /* iter */ BitsetIter, /* value */ number | null ]
    static init_first(set: Bitset): [ /* returnType */ boolean, /* iter */ BitsetIter, /* value */ number | null ]
    static init_last(set: Bitset): [ /* returnType */ boolean, /* iter */ BitsetIter, /* value */ number | null ]
}
export abstract class BookmarkListClass {
    /* Fields of Gtk.BookmarkListClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class BoolFilterClass {
    /* Fields of Gtk.BoolFilterClass */
    parent_class: FilterClass
    static name: string
}
export class Border {
    /* Fields of Gtk.Border */
    left: number
    right: number
    top: number
    bottom: number
    /* Methods of Gtk.Border */
    copy(): Border
    free(): void
    static name: string
    static new(): Border
    constructor()
    /* Static methods and pseudo-constructors */
    static new(): Border
}
export abstract class BoxClass {
    /* Fields of Gtk.BoxClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class BoxLayoutClass {
    /* Fields of Gtk.BoxLayoutClass */
    parent_class: LayoutManagerClass
    static name: string
}
export abstract class BuildableIface {
    /* Fields of Gtk.BuildableIface */
    g_iface: GObject.TypeInterface
    set_id: (buildable: Buildable, id: string) => void
    get_id: (buildable: Buildable) => string
    add_child: (buildable: Buildable, builder: Builder, child: GObject.Object, type?: string | null) => void
    set_buildable_property: (buildable: Buildable, builder: Builder, name: string, value: any) => void
    custom_tag_start: (buildable: Buildable, builder: Builder, child: GObject.Object | null, tagname: string) => [ /* returnType */ boolean, /* parser */ BuildableParser, /* data */ object | null ]
    custom_tag_end: (buildable: Buildable, builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null) => void
    custom_finished: (buildable: Buildable, builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null) => void
    parser_finished: (buildable: Buildable, builder: Builder) => void
    get_internal_child: (buildable: Buildable, builder: Builder, childname: string) => GObject.Object
    static name: string
}
export class BuildableParseContext {
    /* Methods of Gtk.BuildableParseContext */
    get_element(): string | null
    get_element_stack(): string[]
    get_position(): [ /* line_number */ number | null, /* char_number */ number | null ]
    pop(): object | null
    push(parser: BuildableParser, user_data?: object | null): void
    static name: string
}
export class BuildableParser {
    /* Fields of Gtk.BuildableParser */
    start_element: (context: BuildableParseContext, element_name: string, attribute_names: string, attribute_values: string) => void
    end_element: (context: BuildableParseContext, element_name: string) => void
    text: (context: BuildableParseContext, text: string, text_len: number) => void
    error: (context: BuildableParseContext, error: GLib.Error) => void
    static name: string
}
export abstract class BuilderCScopeClass {
    /* Fields of Gtk.BuilderCScopeClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class BuilderClass {
    static name: string
}
export abstract class BuilderListItemFactoryClass {
    static name: string
}
export abstract class BuilderScopeInterface {
    /* Fields of Gtk.BuilderScopeInterface */
    get_type_from_name: (self: BuilderScope, builder: Builder, type_name: string) => GObject.Type
    get_type_from_function: (self: BuilderScope, builder: Builder, function_name: string) => GObject.Type
    create_closure: (self: BuilderScope, builder: Builder, function_name: string, flags: BuilderClosureFlags, object: GObject.Object) => Function
    static name: string
}
export abstract class ButtonClass {
    /* Fields of Gtk.ButtonClass */
    parent_class: WidgetClass
    clicked: (button: Button) => void
    activate: (button: Button) => void
    static name: string
}
export class ButtonPrivate {
    static name: string
}
export abstract class CallbackActionClass {
    static name: string
}
export abstract class CellAreaClass {
    /* Fields of Gtk.CellAreaClass */
    add: (area: CellArea, renderer: CellRenderer) => void
    remove: (area: CellArea, renderer: CellRenderer) => void
    foreach: (area: CellArea, callback: CellCallback) => void
    foreach_alloc: (area: CellArea, context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback) => void
    event: (area: CellArea, context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState) => number
    snapshot: (area: CellArea, context: CellAreaContext, widget: Widget, snapshot: Snapshot, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean) => void
    apply_attributes: (area: CellArea, tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean) => void
    create_context: (area: CellArea) => CellAreaContext
    copy_context: (area: CellArea, context: CellAreaContext) => CellAreaContext
    get_request_mode: (area: CellArea) => SizeRequestMode
    get_preferred_width: (area: CellArea, context: CellAreaContext, widget: Widget) => [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_height_for_width: (area: CellArea, context: CellAreaContext, widget: Widget, width: number) => [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height: (area: CellArea, context: CellAreaContext, widget: Widget) => [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_width_for_height: (area: CellArea, context: CellAreaContext, widget: Widget, height: number) => [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    set_cell_property: (area: CellArea, renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec) => void
    get_cell_property: (area: CellArea, renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec) => void
    focus: (area: CellArea, direction: DirectionType) => boolean
    is_activatable: (area: CellArea) => boolean
    activate: (area: CellArea, context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean) => boolean
    /* Methods of Gtk.CellAreaClass */
    find_cell_property(aclass: CellArea | Function | GObject.Type, property_name: string): GObject.ParamSpec
    install_cell_property(aclass: CellArea | Function | GObject.Type, property_id: number, pspec: GObject.ParamSpec): void
    list_cell_properties(aclass: CellArea | Function | GObject.Type): GObject.ParamSpec[]
    static name: string
}
export abstract class CellAreaContextClass {
    /* Fields of Gtk.CellAreaContextClass */
    allocate: (context: CellAreaContext, width: number, height: number) => void
    reset: (context: CellAreaContext) => void
    get_preferred_height_for_width: (context: CellAreaContext, width: number) => [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_width_for_height: (context: CellAreaContext, height: number) => [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    static name: string
}
export class CellAreaContextPrivate {
    static name: string
}
export abstract class CellEditableIface {
    /* Fields of Gtk.CellEditableIface */
    editing_done: (cell_editable: CellEditable) => void
    remove_widget: (cell_editable: CellEditable) => void
    start_editing: (cell_editable: CellEditable, event?: Gdk.Event | null) => void
    static name: string
}
export abstract class CellLayoutIface {
    /* Fields of Gtk.CellLayoutIface */
    pack_start: (cell_layout: CellLayout, cell: CellRenderer, expand: boolean) => void
    pack_end: (cell_layout: CellLayout, cell: CellRenderer, expand: boolean) => void
    clear: (cell_layout: CellLayout) => void
    add_attribute: (cell_layout: CellLayout, cell: CellRenderer, attribute: string, column: number) => void
    set_cell_data_func: (cell_layout: CellLayout, cell: CellRenderer, func: CellLayoutDataFunc | null) => void
    clear_attributes: (cell_layout: CellLayout, cell: CellRenderer) => void
    reorder: (cell_layout: CellLayout, cell: CellRenderer, position: number) => void
    get_cells: (cell_layout: CellLayout) => CellRenderer[]
    get_area: (cell_layout: CellLayout) => CellArea | null
    static name: string
}
export abstract class CellRendererClass {
    /* Fields of Gtk.CellRendererClass */
    get_request_mode: (cell: CellRenderer) => SizeRequestMode
    get_preferred_width: (cell: CellRenderer, widget: Widget) => [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width: (cell: CellRenderer, widget: Widget, width: number) => [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height: (cell: CellRenderer, widget: Widget) => [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height: (cell: CellRenderer, widget: Widget, height: number) => [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_aligned_area: (cell: CellRenderer, widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle) => /* aligned_area */ Gdk.Rectangle
    snapshot: (cell: CellRenderer, snapshot: Snapshot, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState) => void
    activate: (cell: CellRenderer, event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState) => boolean
    start_editing: (cell: CellRenderer, event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState) => CellEditable | null
    editing_canceled: (cell: CellRenderer) => void
    editing_started: (cell: CellRenderer, editable: CellEditable, path: string) => void
    static name: string
}
export class CellRendererClassPrivate {
    static name: string
}
export class CellRendererPrivate {
    static name: string
}
export abstract class CellRendererTextClass {
    /* Fields of Gtk.CellRendererTextClass */
    parent_class: CellRendererClass
    edited: (cell_renderer_text: CellRendererText, path: string, new_text: string) => void
    static name: string
}
export abstract class CenterBoxClass {
    static name: string
}
export abstract class CenterLayoutClass {
    /* Fields of Gtk.CenterLayoutClass */
    parent_class: LayoutManagerClass
    static name: string
}
export abstract class CheckButtonClass {
    /* Fields of Gtk.CheckButtonClass */
    parent_class: WidgetClass
    toggled: (check_button: CheckButton) => void
    activate: (check_button: CheckButton) => void
    static name: string
}
export abstract class ColorChooserInterface {
    /* Fields of Gtk.ColorChooserInterface */
    base_interface: GObject.TypeInterface
    get_rgba: (chooser: ColorChooser) => /* color */ Gdk.RGBA
    set_rgba: (chooser: ColorChooser, color: Gdk.RGBA) => void
    add_palette: (chooser: ColorChooser, orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null) => void
    color_activated: (chooser: ColorChooser, color: Gdk.RGBA) => void
    static name: string
}
export abstract class ColumnViewClass {
    static name: string
}
export abstract class ColumnViewColumnClass {
    static name: string
}
export abstract class ComboBoxClass {
    /* Fields of Gtk.ComboBoxClass */
    parent_class: WidgetClass
    changed: (combo_box: ComboBox) => void
    format_entry_text: (combo_box: ComboBox, path: string) => string
    static name: string
}
export abstract class ConstraintClass {
    /* Fields of Gtk.ConstraintClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class ConstraintGuideClass {
    /* Fields of Gtk.ConstraintGuideClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class ConstraintLayoutChildClass {
    /* Fields of Gtk.ConstraintLayoutChildClass */
    parent_class: LayoutChildClass
    static name: string
}
export abstract class ConstraintLayoutClass {
    /* Fields of Gtk.ConstraintLayoutClass */
    parent_class: LayoutManagerClass
    static name: string
}
export abstract class ConstraintTargetInterface {
    static name: string
}
export class CssLocation {
    /* Fields of Gtk.CssLocation */
    bytes: number
    chars: number
    lines: number
    line_bytes: number
    line_chars: number
    static name: string
}
export abstract class CssProviderClass {
    static name: string
}
export class CssProviderPrivate {
    static name: string
}
export class CssSection {
    /* Methods of Gtk.CssSection */
    get_end_location(): CssLocation
    get_file(): Gio.File
    get_parent(): CssSection | null
    get_start_location(): CssLocation
    print(string: GLib.String): void
    ref(): CssSection
    to_string(): string
    unref(): void
    static name: string
    static new(file: Gio.File | null, start: CssLocation, end: CssLocation): CssSection
    constructor(file: Gio.File | null, start: CssLocation, end: CssLocation)
    /* Static methods and pseudo-constructors */
    static new(file: Gio.File | null, start: CssLocation, end: CssLocation): CssSection
}
export class CssStyleChange {
    static name: string
}
export abstract class CustomFilterClass {
    /* Fields of Gtk.CustomFilterClass */
    parent_class: FilterClass
    static name: string
}
export abstract class CustomLayoutClass {
    /* Fields of Gtk.CustomLayoutClass */
    parent_class: LayoutManagerClass
    static name: string
}
export abstract class CustomSorterClass {
    /* Fields of Gtk.CustomSorterClass */
    parent_class: SorterClass
    static name: string
}
export abstract class DialogClass {
    /* Fields of Gtk.DialogClass */
    parent_class: WindowClass
    response: (dialog: Dialog, response_id: number) => void
    close: (dialog: Dialog) => void
    static name: string
}
export abstract class DirectoryListClass {
    /* Fields of Gtk.DirectoryListClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class DragIconClass {
    /* Fields of Gtk.DragIconClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class DragSourceClass {
    static name: string
}
export abstract class DrawingAreaClass {
    /* Fields of Gtk.DrawingAreaClass */
    parent_class: WidgetClass
    resize: (area: DrawingArea, width: number, height: number) => void
    static name: string
}
export abstract class DropControllerMotionClass {
    static name: string
}
export abstract class DropDownClass {
    /* Fields of Gtk.DropDownClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class DropTargetAsyncClass {
    static name: string
}
export abstract class DropTargetClass {
    static name: string
}
export abstract class EditableInterface {
    /* Fields of Gtk.EditableInterface */
    base_iface: GObject.TypeInterface
    insert_text: (editable: Editable, text: string, length: number, position: number) => /* position */ number
    delete_text: (editable: Editable, start_pos: number, end_pos: number) => void
    changed: (editable: Editable) => void
    get_text: (editable: Editable) => string
    do_insert_text: (editable: Editable, text: string, length: number, position: number) => /* position */ number
    do_delete_text: (editable: Editable, start_pos: number, end_pos: number) => void
    get_selection_bounds: (editable: Editable) => [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    set_selection_bounds: (editable: Editable, start_pos: number, end_pos: number) => void
    get_delegate: (editable: Editable) => Editable | null
    static name: string
}
export abstract class EditableLabelClass {
    /* Fields of Gtk.EditableLabelClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class EmojiChooserClass {
    static name: string
}
export abstract class EntryBufferClass {
    /* Fields of Gtk.EntryBufferClass */
    parent_class: GObject.ObjectClass
    inserted_text: (buffer: EntryBuffer, position: number, chars: string, n_chars: number) => void
    deleted_text: (buffer: EntryBuffer, position: number, n_chars: number) => void
    get_text: (buffer: EntryBuffer, n_bytes: number) => string
    get_length: (buffer: EntryBuffer) => number
    insert_text: (buffer: EntryBuffer, position: number, chars: string, n_chars: number) => number
    delete_text: (buffer: EntryBuffer, position: number, n_chars: number) => number
    static name: string
}
export abstract class EntryClass {
    /* Fields of Gtk.EntryClass */
    parent_class: WidgetClass
    activate: (entry: Entry) => void
    static name: string
}
export abstract class EventControllerClass {
    static name: string
}
export abstract class EventControllerFocusClass {
    static name: string
}
export abstract class EventControllerKeyClass {
    static name: string
}
export abstract class EventControllerLegacyClass {
    static name: string
}
export abstract class EventControllerMotionClass {
    static name: string
}
export abstract class EventControllerScrollClass {
    static name: string
}
export abstract class EveryFilterClass {
    static name: string
}
export class ExpressionWatch {
    /* Methods of Gtk.ExpressionWatch */
    evaluate(value: any): boolean
    ref(): ExpressionWatch
    unref(): void
    unwatch(): void
    static name: string
}
export abstract class FileChooserNativeClass {
    /* Fields of Gtk.FileChooserNativeClass */
    parent_class: NativeDialogClass
    static name: string
}
export abstract class FilterClass {
    /* Fields of Gtk.FilterClass */
    parent_class: GObject.ObjectClass
    match: (self: Filter, item?: GObject.Object | null) => boolean
    get_strictness: (self: Filter) => FilterMatch
    static name: string
}
export abstract class FilterListModelClass {
    /* Fields of Gtk.FilterListModelClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class FixedClass {
    /* Fields of Gtk.FixedClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class FixedLayoutChildClass {
    /* Fields of Gtk.FixedLayoutChildClass */
    parent_class: LayoutChildClass
    static name: string
}
export abstract class FixedLayoutClass {
    /* Fields of Gtk.FixedLayoutClass */
    parent_class: LayoutManagerClass
    static name: string
}
export abstract class FlattenListModelClass {
    /* Fields of Gtk.FlattenListModelClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class FlowBoxChildClass {
    /* Fields of Gtk.FlowBoxChildClass */
    activate: (child: FlowBoxChild) => void
    static name: string
}
export abstract class FontChooserIface {
    /* Fields of Gtk.FontChooserIface */
    base_iface: GObject.TypeInterface
    get_font_family: (fontchooser: FontChooser) => Pango.FontFamily | null
    get_font_face: (fontchooser: FontChooser) => Pango.FontFace | null
    get_font_size: (fontchooser: FontChooser) => number
    set_filter_func: (fontchooser: FontChooser, filter: FontFilterFunc | null) => void
    font_activated: (chooser: FontChooser, fontname: string) => void
    set_font_map: (fontchooser: FontChooser, fontmap?: Pango.FontMap | null) => void
    get_font_map: (fontchooser: FontChooser) => Pango.FontMap | null
    static name: string
}
export abstract class FrameClass {
    /* Fields of Gtk.FrameClass */
    parent_class: WidgetClass
    compute_child_allocation: (frame: Frame, allocation: Allocation) => void
    static name: string
}
export abstract class GLAreaClass {
    /* Fields of Gtk.GLAreaClass */
    render: (area: GLArea, context: Gdk.GLContext) => boolean
    resize: (area: GLArea, width: number, height: number) => void
    static name: string
}
export abstract class GestureClass {
    static name: string
}
export abstract class GestureClickClass {
    static name: string
}
export abstract class GestureDragClass {
    static name: string
}
export abstract class GestureLongPressClass {
    static name: string
}
export abstract class GesturePanClass {
    static name: string
}
export abstract class GestureRotateClass {
    static name: string
}
export abstract class GestureSingleClass {
    static name: string
}
export abstract class GestureStylusClass {
    static name: string
}
export abstract class GestureSwipeClass {
    static name: string
}
export abstract class GestureZoomClass {
    static name: string
}
export abstract class GridClass {
    /* Fields of Gtk.GridClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class GridLayoutChildClass {
    /* Fields of Gtk.GridLayoutChildClass */
    parent_class: LayoutChildClass
    static name: string
}
export abstract class GridLayoutClass {
    /* Fields of Gtk.GridLayoutClass */
    parent_class: LayoutManagerClass
    static name: string
}
export abstract class GridViewClass {
    static name: string
}
export abstract class IMContextClass {
    /* Fields of Gtk.IMContextClass */
    preedit_start: (context: IMContext) => void
    preedit_end: (context: IMContext) => void
    preedit_changed: (context: IMContext) => void
    commit: (context: IMContext, str: string) => void
    retrieve_surrounding: (context: IMContext) => boolean
    delete_surrounding: (context: IMContext, offset: number, n_chars: number) => boolean
    set_client_widget: (context: IMContext, widget?: Widget | null) => void
    get_preedit_string: (context: IMContext) => [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    filter_keypress: (context: IMContext, event: Gdk.Event) => boolean
    focus_in: (context: IMContext) => void
    focus_out: (context: IMContext) => void
    reset: (context: IMContext) => void
    set_cursor_location: (context: IMContext, area: Gdk.Rectangle) => void
    set_use_preedit: (context: IMContext, use_preedit: boolean) => void
    set_surrounding: (context: IMContext, text: string, len: number, cursor_index: number) => void
    get_surrounding: (context: IMContext) => [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    set_surrounding_with_selection: (context: IMContext, text: string, len: number, cursor_index: number, anchor_index: number) => void
    get_surrounding_with_selection: (context: IMContext) => [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number, /* anchor_index */ number ]
    static name: string
}
export abstract class IMContextSimpleClass {
    /* Fields of Gtk.IMContextSimpleClass */
    parent_class: IMContextClass
    static name: string
}
export class IMContextSimplePrivate {
    static name: string
}
export abstract class IMMulticontextClass {
    /* Fields of Gtk.IMMulticontextClass */
    parent_class: IMContextClass
    static name: string
}
export class IMMulticontextPrivate {
    static name: string
}
export abstract class KeyvalTriggerClass {
    static name: string
}
export abstract class LayoutChildClass {
    static name: string
}
export abstract class LayoutManagerClass {
    /* Fields of Gtk.LayoutManagerClass */
    get_request_mode: (manager: LayoutManager, widget: Widget) => SizeRequestMode
    measure: (manager: LayoutManager, widget: Widget, orientation: Orientation, for_size: number) => [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    allocate: (manager: LayoutManager, widget: Widget, width: number, height: number, baseline: number) => void
    layout_child_type: GObject.Type
    create_layout_child: (manager: LayoutManager, widget: Widget, for_child: Widget) => LayoutChild
    root: (manager: LayoutManager) => void
    unroot: (manager: LayoutManager) => void
    static name: string
}
export abstract class ListBaseClass {
    static name: string
}
export abstract class ListBoxRowClass {
    /* Fields of Gtk.ListBoxRowClass */
    parent_class: WidgetClass
    activate: (row: ListBoxRow) => void
    static name: string
}
export abstract class ListItemClass {
    static name: string
}
export abstract class ListItemFactoryClass {
    static name: string
}
export abstract class ListStoreClass {
    /* Fields of Gtk.ListStoreClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class ListStorePrivate {
    static name: string
}
export abstract class ListViewClass {
    static name: string
}
export abstract class MapListModelClass {
    /* Fields of Gtk.MapListModelClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class MediaControlsClass {
    /* Fields of Gtk.MediaControlsClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class MediaFileClass {
    /* Fields of Gtk.MediaFileClass */
    parent_class: MediaStreamClass
    open: (self: MediaFile) => void
    close: (self: MediaFile) => void
    static name: string
}
export abstract class MediaStreamClass {
    /* Fields of Gtk.MediaStreamClass */
    parent_class: GObject.ObjectClass
    play: (self: MediaStream) => boolean
    pause: (self: MediaStream) => void
    seek: (self: MediaStream, timestamp: number) => void
    update_audio: (self: MediaStream, muted: boolean, volume: number) => void
    realize: (self: MediaStream, surface: Gdk.Surface) => void
    unrealize: (self: MediaStream, surface: Gdk.Surface) => void
    static name: string
}
export abstract class MessageDialogClass {
    static name: string
}
export abstract class MnemonicActionClass {
    static name: string
}
export abstract class MnemonicTriggerClass {
    static name: string
}
export abstract class MountOperationClass {
    /* Fields of Gtk.MountOperationClass */
    parent_class: Gio.MountOperationClass
    static name: string
}
export class MountOperationPrivate {
    static name: string
}
export abstract class MultiFilterClass {
    static name: string
}
export abstract class MultiSelectionClass {
    /* Fields of Gtk.MultiSelectionClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class MultiSorterClass {
    /* Fields of Gtk.MultiSorterClass */
    parent_class: SorterClass
    static name: string
}
export abstract class NamedActionClass {
    static name: string
}
export abstract class NativeDialogClass {
    /* Fields of Gtk.NativeDialogClass */
    response: (self: NativeDialog, response_id: number) => void
    show: (self: NativeDialog) => void
    hide: (self: NativeDialog) => void
    static name: string
}
export abstract class NativeInterface {
    static name: string
}
export abstract class NeverTriggerClass {
    static name: string
}
export abstract class NoSelectionClass {
    /* Fields of Gtk.NoSelectionClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class NothingActionClass {
    static name: string
}
export abstract class NumericSorterClass {
    /* Fields of Gtk.NumericSorterClass */
    parent_class: SorterClass
    static name: string
}
export abstract class OrientableIface {
    /* Fields of Gtk.OrientableIface */
    base_iface: GObject.TypeInterface
    static name: string
}
export abstract class OverlayLayoutChildClass {
    /* Fields of Gtk.OverlayLayoutChildClass */
    parent_class: LayoutChildClass
    static name: string
}
export abstract class OverlayLayoutClass {
    /* Fields of Gtk.OverlayLayoutClass */
    parent_class: LayoutManagerClass
    static name: string
}
export class PadActionEntry {
    /* Fields of Gtk.PadActionEntry */
    type: PadActionType
    index: number
    mode: number
    label: string
    action_name: string
    static name: string
}
export abstract class PadControllerClass {
    static name: string
}
export class PageRange {
    /* Fields of Gtk.PageRange */
    start: number
    end: number
    static name: string
}
export class PaperSize {
    /* Methods of Gtk.PaperSize */
    copy(): PaperSize
    free(): void
    get_default_bottom_margin(unit: Unit): number
    get_default_left_margin(unit: Unit): number
    get_default_right_margin(unit: Unit): number
    get_default_top_margin(unit: Unit): number
    get_display_name(): string
    get_height(unit: Unit): number
    get_name(): string
    get_ppd_name(): string
    get_width(unit: Unit): number
    is_custom(): boolean
    is_equal(size2: PaperSize): boolean
    is_ipp(): boolean
    set_size(width: number, height: number, unit: Unit): void
    to_gvariant(): GLib.Variant
    to_key_file(key_file: GLib.KeyFile, group_name: string): void
    static name: string
    static new(name?: string | null): PaperSize
    constructor(name?: string | null)
    /* Static methods and pseudo-constructors */
    static new(name?: string | null): PaperSize
    static new_custom(name: string, display_name: string, width: number, height: number, unit: Unit): PaperSize
    static new_from_gvariant(variant: GLib.Variant): PaperSize
    static new_from_ipp(ipp_name: string, width: number, height: number): PaperSize
    static new_from_key_file(key_file: GLib.KeyFile, group_name?: string | null): PaperSize
    static new_from_ppd(ppd_name: string, ppd_display_name: string, width: number, height: number): PaperSize
    static get_default(): string
    static get_paper_sizes(include_custom: boolean): PaperSize[]
}
export abstract class PasswordEntryClass {
    static name: string
}
export abstract class PictureClass {
    /* Fields of Gtk.PictureClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class PopoverClass {
    /* Fields of Gtk.PopoverClass */
    parent_class: WidgetClass
    closed: (popover: Popover) => void
    activate_default: (popover: Popover) => void
    static name: string
}
export class PrintBackend {
    static name: string
}
export abstract class PrintOperationClass {
    /* Fields of Gtk.PrintOperationClass */
    parent_class: GObject.ObjectClass
    done: (operation: PrintOperation, result: PrintOperationResult) => void
    begin_print: (operation: PrintOperation, context: PrintContext) => void
    paginate: (operation: PrintOperation, context: PrintContext) => boolean
    request_page_setup: (operation: PrintOperation, context: PrintContext, page_nr: number, setup: PageSetup) => void
    draw_page: (operation: PrintOperation, context: PrintContext, page_nr: number) => void
    end_print: (operation: PrintOperation, context: PrintContext) => void
    status_changed: (operation: PrintOperation) => void
    custom_widget_apply: (operation: PrintOperation, widget: Widget) => void
    preview: (operation: PrintOperation, preview: PrintOperationPreview, context: PrintContext, parent: Window) => boolean
    update_custom_widget: (operation: PrintOperation, widget: Widget, setup: PageSetup, settings: PrintSettings) => void
    static name: string
}
export abstract class PrintOperationPreviewIface {
    /* Fields of Gtk.PrintOperationPreviewIface */
    g_iface: GObject.TypeInterface
    ready: (preview: PrintOperationPreview, context: PrintContext) => void
    got_page_size: (preview: PrintOperationPreview, context: PrintContext, page_setup: PageSetup) => void
    render_page: (preview: PrintOperationPreview, page_nr: number) => void
    is_selected: (preview: PrintOperationPreview, page_nr: number) => boolean
    end_preview: (preview: PrintOperationPreview) => void
    static name: string
}
export class PrintOperationPrivate {
    static name: string
}
export abstract class RangeClass {
    /* Fields of Gtk.RangeClass */
    parent_class: WidgetClass
    value_changed: (range: Range) => void
    adjust_bounds: (range: Range, new_value: number) => void
    move_slider: (range: Range, scroll: ScrollType) => void
    get_range_border: (range: Range, border_: Border) => void
    change_value: (range: Range, scroll: ScrollType, new_value: number) => boolean
    static name: string
}
export class RecentData {
    /* Fields of Gtk.RecentData */
    display_name: string
    description: string
    mime_type: string
    app_name: string
    app_exec: string
    groups: string[]
    is_private: boolean
    static name: string
}
export class RecentInfo {
    /* Methods of Gtk.RecentInfo */
    create_app_info(app_name?: string | null): Gio.AppInfo | null
    exists(): boolean
    get_added(): GLib.DateTime
    get_age(): number
    get_application_info(app_name: string): [ /* returnType */ boolean, /* app_exec */ string, /* count */ number, /* stamp */ GLib.DateTime ]
    get_applications(): string[]
    get_description(): string
    get_display_name(): string
    get_gicon(): Gio.Icon | null
    get_groups(): string[]
    get_mime_type(): string
    get_modified(): GLib.DateTime
    get_private_hint(): boolean
    get_short_name(): string
    get_uri(): string
    get_uri_display(): string | null
    get_visited(): GLib.DateTime
    has_application(app_name: string): boolean
    has_group(group_name: string): boolean
    is_local(): boolean
    last_application(): string
    match(info_b: RecentInfo): boolean
    ref(): RecentInfo
    unref(): void
    static name: string
}
export abstract class RecentManagerClass {
    /* Fields of Gtk.RecentManagerClass */
    changed: (manager: RecentManager) => void
    static name: string
}
export class RecentManagerPrivate {
    static name: string
}
export class RequestedSize {
    /* Fields of Gtk.RequestedSize */
    data: object
    minimum_size: number
    natural_size: number
    static name: string
}
export class Requisition {
    /* Fields of Gtk.Requisition */
    width: number
    height: number
    /* Methods of Gtk.Requisition */
    copy(): Requisition
    free(): void
    static name: string
    static new(): Requisition
    constructor()
    /* Static methods and pseudo-constructors */
    static new(): Requisition
}
export abstract class RootInterface {
    static name: string
}
export abstract class ScaleButtonClass {
    /* Fields of Gtk.ScaleButtonClass */
    parent_class: WidgetClass
    value_changed: (button: ScaleButton, value: number) => void
    static name: string
}
export abstract class ScaleClass {
    /* Fields of Gtk.ScaleClass */
    parent_class: RangeClass
    get_layout_offsets: (scale: Scale) => [ /* x */ number | null, /* y */ number | null ]
    static name: string
}
export abstract class ScrollableInterface {
    /* Fields of Gtk.ScrollableInterface */
    base_iface: GObject.TypeInterface
    get_border: (scrollable: Scrollable) => [ /* returnType */ boolean, /* border */ Border ]
    static name: string
}
export abstract class SelectionFilterModelClass {
    /* Fields of Gtk.SelectionFilterModelClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class SelectionModelInterface {
    /* Fields of Gtk.SelectionModelInterface */
    is_selected: (model: SelectionModel, position: number) => boolean
    get_selection_in_range: (model: SelectionModel, position: number, n_items: number) => Bitset
    select_item: (model: SelectionModel, position: number, unselect_rest: boolean) => boolean
    unselect_item: (model: SelectionModel, position: number) => boolean
    select_range: (model: SelectionModel, position: number, n_items: number, unselect_rest: boolean) => boolean
    unselect_range: (model: SelectionModel, position: number, n_items: number) => boolean
    select_all: (model: SelectionModel) => boolean
    unselect_all: (model: SelectionModel) => boolean
    set_selection: (model: SelectionModel, selected: Bitset, mask: Bitset) => boolean
    static name: string
}
export abstract class ShortcutActionClass {
    static name: string
}
export abstract class ShortcutClass {
    /* Fields of Gtk.ShortcutClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class ShortcutControllerClass {
    static name: string
}
export abstract class ShortcutLabelClass {
    static name: string
}
export abstract class ShortcutManagerInterface {
    /* Fields of Gtk.ShortcutManagerInterface */
    add_controller: (self: ShortcutManager, controller: ShortcutController) => void
    remove_controller: (self: ShortcutManager, controller: ShortcutController) => void
    static name: string
}
export abstract class ShortcutTriggerClass {
    static name: string
}
export abstract class ShortcutsGroupClass {
    static name: string
}
export abstract class ShortcutsSectionClass {
    static name: string
}
export abstract class ShortcutsShortcutClass {
    static name: string
}
export abstract class SignalActionClass {
    static name: string
}
export abstract class SignalListItemFactoryClass {
    static name: string
}
export abstract class SingleSelectionClass {
    /* Fields of Gtk.SingleSelectionClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class SliceListModelClass {
    /* Fields of Gtk.SliceListModelClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class SnapshotClass {
    static name: string
}
export abstract class SortListModelClass {
    /* Fields of Gtk.SortListModelClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class SorterClass {
    /* Fields of Gtk.SorterClass */
    parent_class: GObject.ObjectClass
    compare: (self: Sorter, item1?: GObject.Object | null, item2?: GObject.Object | null) => Ordering
    get_order: (self: Sorter) => SorterOrder
    static name: string
}
export abstract class StringFilterClass {
    /* Fields of Gtk.StringFilterClass */
    parent_class: FilterClass
    static name: string
}
export abstract class StringListClass {
    /* Fields of Gtk.StringListClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class StringObjectClass {
    /* Fields of Gtk.StringObjectClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class StringSorterClass {
    /* Fields of Gtk.StringSorterClass */
    parent_class: SorterClass
    static name: string
}
export abstract class StyleContextClass {
    /* Fields of Gtk.StyleContextClass */
    parent_class: GObject.ObjectClass
    changed: (context: StyleContext) => void
    static name: string
}
export abstract class TextBufferClass {
    /* Fields of Gtk.TextBufferClass */
    parent_class: GObject.ObjectClass
    insert_text: (buffer: TextBuffer, pos: TextIter, new_text: string, new_text_length: number) => void
    insert_paintable: (buffer: TextBuffer, iter: TextIter, paintable: Gdk.Paintable) => void
    insert_child_anchor: (buffer: TextBuffer, iter: TextIter, anchor: TextChildAnchor) => void
    delete_range: (buffer: TextBuffer, start: TextIter, end: TextIter) => void
    changed: (buffer: TextBuffer) => void
    modified_changed: (buffer: TextBuffer) => void
    mark_set: (buffer: TextBuffer, location: TextIter, mark: TextMark) => void
    mark_deleted: (buffer: TextBuffer, mark: TextMark) => void
    apply_tag: (buffer: TextBuffer, tag: TextTag, start: TextIter, end: TextIter) => void
    remove_tag: (buffer: TextBuffer, tag: TextTag, start: TextIter, end: TextIter) => void
    begin_user_action: (buffer: TextBuffer) => void
    end_user_action: (buffer: TextBuffer) => void
    paste_done: (buffer: TextBuffer, clipboard: Gdk.Clipboard) => void
    undo: (buffer: TextBuffer) => void
    redo: (buffer: TextBuffer) => void
    static name: string
}
export class TextBufferPrivate {
    static name: string
}
export abstract class TextChildAnchorClass {
    /* Fields of Gtk.TextChildAnchorClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class TextIter {
    /* Methods of Gtk.TextIter */
    assign(other: TextIter): void
    backward_char(): boolean
    backward_chars(count: number): boolean
    backward_cursor_position(): boolean
    backward_cursor_positions(count: number): boolean
    backward_find_char(pred: TextCharPredicate, limit?: TextIter | null): boolean
    backward_line(): boolean
    backward_lines(count: number): boolean
    backward_search(str: string, flags: TextSearchFlags, limit?: TextIter | null): [ /* returnType */ boolean, /* match_start */ TextIter | null, /* match_end */ TextIter | null ]
    backward_sentence_start(): boolean
    backward_sentence_starts(count: number): boolean
    backward_to_tag_toggle(tag?: TextTag | null): boolean
    backward_visible_cursor_position(): boolean
    backward_visible_cursor_positions(count: number): boolean
    backward_visible_line(): boolean
    backward_visible_lines(count: number): boolean
    backward_visible_word_start(): boolean
    backward_visible_word_starts(count: number): boolean
    backward_word_start(): boolean
    backward_word_starts(count: number): boolean
    can_insert(default_editability: boolean): boolean
    compare(rhs: TextIter): number
    copy(): TextIter
    editable(default_setting: boolean): boolean
    ends_line(): boolean
    ends_sentence(): boolean
    ends_tag(tag?: TextTag | null): boolean
    ends_word(): boolean
    equal(rhs: TextIter): boolean
    forward_char(): boolean
    forward_chars(count: number): boolean
    forward_cursor_position(): boolean
    forward_cursor_positions(count: number): boolean
    forward_find_char(pred: TextCharPredicate, limit?: TextIter | null): boolean
    forward_line(): boolean
    forward_lines(count: number): boolean
    forward_search(str: string, flags: TextSearchFlags, limit?: TextIter | null): [ /* returnType */ boolean, /* match_start */ TextIter | null, /* match_end */ TextIter | null ]
    forward_sentence_end(): boolean
    forward_sentence_ends(count: number): boolean
    forward_to_end(): void
    forward_to_line_end(): boolean
    forward_to_tag_toggle(tag?: TextTag | null): boolean
    forward_visible_cursor_position(): boolean
    forward_visible_cursor_positions(count: number): boolean
    forward_visible_line(): boolean
    forward_visible_lines(count: number): boolean
    forward_visible_word_end(): boolean
    forward_visible_word_ends(count: number): boolean
    forward_word_end(): boolean
    forward_word_ends(count: number): boolean
    free(): void
    get_buffer(): TextBuffer
    get_bytes_in_line(): number
    get_char(): number
    get_chars_in_line(): number
    get_child_anchor(): TextChildAnchor
    get_language(): Pango.Language
    get_line(): number
    get_line_index(): number
    get_line_offset(): number
    get_marks(): TextMark[]
    get_offset(): number
    get_paintable(): Gdk.Paintable
    get_slice(end: TextIter): string
    get_tags(): TextTag[]
    get_text(end: TextIter): string
    get_toggled_tags(toggled_on: boolean): TextTag[]
    get_visible_line_index(): number
    get_visible_line_offset(): number
    get_visible_slice(end: TextIter): string
    get_visible_text(end: TextIter): string
    has_tag(tag: TextTag): boolean
    in_range(start: TextIter, end: TextIter): boolean
    inside_sentence(): boolean
    inside_word(): boolean
    is_cursor_position(): boolean
    is_end(): boolean
    is_start(): boolean
    order(second: TextIter): void
    set_line(line_number: number): void
    set_line_index(byte_on_line: number): void
    set_line_offset(char_on_line: number): void
    set_offset(char_offset: number): void
    set_visible_line_index(byte_on_line: number): void
    set_visible_line_offset(char_on_line: number): void
    starts_line(): boolean
    starts_sentence(): boolean
    starts_tag(tag?: TextTag | null): boolean
    starts_word(): boolean
    toggles_tag(tag?: TextTag | null): boolean
    static name: string
}
export abstract class TextMarkClass {
    /* Fields of Gtk.TextMarkClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class TextTagClass {
    /* Fields of Gtk.TextTagClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class TextTagPrivate {
    static name: string
}
export abstract class TextViewClass {
    /* Fields of Gtk.TextViewClass */
    parent_class: WidgetClass
    move_cursor: (text_view: TextView, step: MovementStep, count: number, extend_selection: boolean) => void
    set_anchor: (text_view: TextView) => void
    insert_at_cursor: (text_view: TextView, str: string) => void
    delete_from_cursor: (text_view: TextView, type: DeleteType, count: number) => void
    backspace: (text_view: TextView) => void
    cut_clipboard: (text_view: TextView) => void
    copy_clipboard: (text_view: TextView) => void
    paste_clipboard: (text_view: TextView) => void
    toggle_overwrite: (text_view: TextView) => void
    snapshot_layer: (text_view: TextView, layer: TextViewLayer, snapshot: Snapshot) => void
    extend_selection: (text_view: TextView, granularity: TextExtendSelection, location: TextIter, start: TextIter, end: TextIter) => boolean
    insert_emoji: (text_view: TextView) => void
    static name: string
}
export class TextViewPrivate {
    static name: string
}
export abstract class ToggleButtonClass {
    /* Fields of Gtk.ToggleButtonClass */
    parent_class: ButtonClass
    toggled: (toggle_button: ToggleButton) => void
    static name: string
}
export abstract class TreeDragDestIface {
    /* Fields of Gtk.TreeDragDestIface */
    drag_data_received: (drag_dest: TreeDragDest, dest: TreePath, value: any) => boolean
    row_drop_possible: (drag_dest: TreeDragDest, dest_path: TreePath, value: any) => boolean
    static name: string
}
export abstract class TreeDragSourceIface {
    /* Fields of Gtk.TreeDragSourceIface */
    row_draggable: (drag_source: TreeDragSource, path: TreePath) => boolean
    drag_data_get: (drag_source: TreeDragSource, path: TreePath) => Gdk.ContentProvider | null
    drag_data_delete: (drag_source: TreeDragSource, path: TreePath) => boolean
    static name: string
}
export abstract class TreeExpanderClass {
    /* Fields of Gtk.TreeExpanderClass */
    parent_class: WidgetClass
    static name: string
}
export class TreeIter {
    /* Fields of Gtk.TreeIter */
    stamp: number
    user_data: object
    user_data2: object
    user_data3: object
    /* Methods of Gtk.TreeIter */
    copy(): TreeIter
    free(): void
    static name: string
}
export abstract class TreeListModelClass {
    /* Fields of Gtk.TreeListModelClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class TreeListRowClass {
    /* Fields of Gtk.TreeListRowClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export abstract class TreeListRowSorterClass {
    /* Fields of Gtk.TreeListRowSorterClass */
    parent_class: SorterClass
    static name: string
}
export abstract class TreeModelFilterClass {
    /* Fields of Gtk.TreeModelFilterClass */
    parent_class: GObject.ObjectClass
    visible: (self: TreeModelFilter, child_model: TreeModel, iter: TreeIter) => boolean
    modify: (self: TreeModelFilter, child_model: TreeModel, iter: TreeIter, value: any, column: number) => void
    static name: string
}
export class TreeModelFilterPrivate {
    static name: string
}
export abstract class TreeModelIface {
    /* Fields of Gtk.TreeModelIface */
    row_changed: (tree_model: TreeModel, path: TreePath, iter: TreeIter) => void
    row_inserted: (tree_model: TreeModel, path: TreePath, iter: TreeIter) => void
    row_has_child_toggled: (tree_model: TreeModel, path: TreePath, iter: TreeIter) => void
    row_deleted: (tree_model: TreeModel, path: TreePath) => void
    rows_reordered: (tree_model: TreeModel, path: TreePath, iter: TreeIter, new_order: number) => void
    get_flags: (tree_model: TreeModel) => TreeModelFlags
    get_n_columns: (tree_model: TreeModel) => number
    get_column_type: (tree_model: TreeModel, index_: number) => GObject.Type
    get_iter: (tree_model: TreeModel, path: TreePath) => [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_path: (tree_model: TreeModel, iter: TreeIter) => TreePath
    get_value: (tree_model: TreeModel, iter: TreeIter, column: number) => /* value */ any
    iter_next: (tree_model: TreeModel, iter: TreeIter) => boolean
    iter_previous: (tree_model: TreeModel, iter: TreeIter) => boolean
    iter_children: (tree_model: TreeModel, parent?: TreeIter | null) => [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child: (tree_model: TreeModel, iter: TreeIter) => boolean
    iter_n_children: (tree_model: TreeModel, iter?: TreeIter | null) => number
    iter_nth_child: (tree_model: TreeModel, parent: TreeIter | null, n: number) => [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent: (tree_model: TreeModel, child: TreeIter) => [ /* returnType */ boolean, /* iter */ TreeIter ]
    ref_node: (tree_model: TreeModel, iter: TreeIter) => void
    unref_node: (tree_model: TreeModel, iter: TreeIter) => void
    static name: string
}
export abstract class TreeModelSortClass {
    /* Fields of Gtk.TreeModelSortClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class TreeModelSortPrivate {
    static name: string
}
export class TreePath {
    /* Methods of Gtk.TreePath */
    append_index(index_: number): void
    compare(b: TreePath): number
    copy(): TreePath
    down(): void
    free(): void
    get_depth(): number
    get_indices(): number[]
    is_ancestor(descendant: TreePath): boolean
    is_descendant(ancestor: TreePath): boolean
    next(): void
    prepend_index(index_: number): void
    prev(): boolean
    to_string(): string | null
    up(): boolean
    static name: string
    static new(): TreePath
    constructor()
    /* Static methods and pseudo-constructors */
    static new(): TreePath
    static new_first(): TreePath
    static new_from_indices(indices: number[]): TreePath
    static new_from_string(path: string): TreePath
}
export class TreeRowReference {
    /* Methods of Gtk.TreeRowReference */
    copy(): TreeRowReference
    free(): void
    get_model(): TreeModel
    get_path(): TreePath | null
    valid(): boolean
    static name: string
    static new(model: TreeModel, path: TreePath): TreeRowReference
    constructor(model: TreeModel, path: TreePath)
    /* Static methods and pseudo-constructors */
    static new(model: TreeModel, path: TreePath): TreeRowReference
    static new_proxy(proxy: GObject.Object, model: TreeModel, path: TreePath): TreeRowReference
    static deleted(proxy: GObject.Object, path: TreePath): void
    static inserted(proxy: GObject.Object, path: TreePath): void
}
export abstract class TreeSortableIface {
    /* Fields of Gtk.TreeSortableIface */
    sort_column_changed: (sortable: TreeSortable) => void
    get_sort_column_id: (sortable: TreeSortable) => [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    set_sort_column_id: (sortable: TreeSortable, sort_column_id: number, order: SortType) => void
    set_sort_func: (sortable: TreeSortable, sort_column_id: number, sort_func: TreeIterCompareFunc) => void
    set_default_sort_func: (sortable: TreeSortable, sort_func: TreeIterCompareFunc) => void
    has_default_sort_func: (sortable: TreeSortable) => boolean
    static name: string
}
export abstract class TreeStoreClass {
    /* Fields of Gtk.TreeStoreClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class TreeStorePrivate {
    static name: string
}
export abstract class TreeViewClass {
    /* Fields of Gtk.TreeViewClass */
    parent_class: WidgetClass
    row_activated: (tree_view: TreeView, path: TreePath, column: TreeViewColumn) => void
    test_expand_row: (tree_view: TreeView, iter: TreeIter, path: TreePath) => boolean
    test_collapse_row: (tree_view: TreeView, iter: TreeIter, path: TreePath) => boolean
    row_expanded: (tree_view: TreeView, iter: TreeIter, path: TreePath) => void
    row_collapsed: (tree_view: TreeView, iter: TreeIter, path: TreePath) => void
    columns_changed: (tree_view: TreeView) => void
    cursor_changed: (tree_view: TreeView) => void
    move_cursor: (tree_view: TreeView, step: MovementStep, count: number, extend: boolean, modify: boolean) => boolean
    select_all: (tree_view: TreeView) => boolean
    unselect_all: (tree_view: TreeView) => boolean
    select_cursor_row: (tree_view: TreeView, start_editing: boolean) => boolean
    toggle_cursor_row: (tree_view: TreeView) => boolean
    expand_collapse_cursor_row: (tree_view: TreeView, logical: boolean, expand: boolean, open_all: boolean) => boolean
    select_cursor_parent: (tree_view: TreeView) => boolean
    start_interactive_search: (tree_view: TreeView) => boolean
    static name: string
}
export abstract class VideoClass {
    /* Fields of Gtk.VideoClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class WidgetClass {
    /* Fields of Gtk.WidgetClass */
    parent_class: GObject.InitiallyUnownedClass
    show: (widget: Widget) => void
    hide: (widget: Widget) => void
    map: (widget: Widget) => void
    unmap: (widget: Widget) => void
    realize: (widget: Widget) => void
    unrealize: (widget: Widget) => void
    root: (widget: Widget) => void
    unroot: (widget: Widget) => void
    size_allocate: (widget: Widget, width: number, height: number, baseline: number) => void
    state_flags_changed: (widget: Widget, previous_state_flags: StateFlags) => void
    direction_changed: (widget: Widget, previous_direction: TextDirection) => void
    get_request_mode: (widget: Widget) => SizeRequestMode
    measure: (widget: Widget, orientation: Orientation, for_size: number) => [ /* minimum */ number | null, /* natural */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    mnemonic_activate: (widget: Widget, group_cycling: boolean) => boolean
    grab_focus: (widget: Widget) => boolean
    focus: (widget: Widget, direction: DirectionType) => boolean
    set_focus_child: (widget: Widget, child?: Widget | null) => void
    move_focus: (widget: Widget, direction: DirectionType) => void
    keynav_failed: (widget: Widget, direction: DirectionType) => boolean
    query_tooltip: (widget: Widget, x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip) => boolean
    compute_expand: (widget: Widget, hexpand_p: boolean, vexpand_p: boolean) => void
    css_changed: (widget: Widget, change: CssStyleChange) => void
    system_setting_changed: (widget: Widget, settings: SystemSetting) => void
    snapshot: (widget: Widget, snapshot: Snapshot) => void
    contains: (widget: Widget, x: number, y: number) => boolean
    /* Methods of Gtk.WidgetClass */
    add_shortcut(widget_class: Widget | Function | GObject.Type, shortcut: Shortcut): void
    bind_template_callback_full(widget_class: Widget | Function | GObject.Type, callback_name: string, callback_symbol: GObject.Callback): void
    bind_template_child_full(widget_class: Widget | Function | GObject.Type, name: string, internal_child: boolean, struct_offset: number): void
    get_accessible_role(widget_class: Widget | Function | GObject.Type): AccessibleRole
    get_activate_signal(widget_class: Widget | Function | GObject.Type): number
    get_css_name(widget_class: Widget | Function | GObject.Type): string
    get_layout_manager_type(widget_class: Widget | Function | GObject.Type): GObject.Type
    install_action(widget_class: Widget | Function | GObject.Type, action_name: string, parameter_type: string | null, activate: WidgetActionActivateFunc): void
    install_property_action(widget_class: Widget | Function | GObject.Type, action_name: string, property_name: string): void
    query_action(widget_class: Widget | Function | GObject.Type, index_: number): [ /* returnType */ boolean, /* owner */ any, /* action_name */ string, /* parameter_type */ GLib.VariantType | null, /* property_name */ string | null ]
    set_accessible_role(widget_class: Widget | Function | GObject.Type, accessible_role: AccessibleRole): void
    set_activate_signal(widget_class: Widget | Function | GObject.Type, signal_id: number): void
    set_activate_signal_from_name(widget_class: Widget | Function | GObject.Type, signal_name: string): void
    set_css_name(widget_class: Widget | Function | GObject.Type, name: string): void
    set_layout_manager_type(widget_class: Widget | Function | GObject.Type, type: GObject.Type): void
    set_template(widget_class: Widget | Function | GObject.Type, template_bytes: GLib.Bytes): void
    set_template_from_resource(widget_class: Widget | Function | GObject.Type, resource_name: string): void
    set_template_scope(widget_class: Widget | Function | GObject.Type, scope: BuilderScope): void
    static name: string
}
export class WidgetClassPrivate {
    static name: string
}
export abstract class WidgetPaintableClass {
    /* Fields of Gtk.WidgetPaintableClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class WidgetPrivate {
    static name: string
}
export abstract class WindowClass {
    /* Fields of Gtk.WindowClass */
    parent_class: WidgetClass
    activate_focus: (window: Window) => void
    activate_default: (window: Window) => void
    keys_changed: (window: Window) => void
    enable_debugging: (window: Window, toggle: boolean) => boolean
    close_request: (window: Window) => boolean
    static name: string
}
export abstract class WindowControlsClass {
    /* Fields of Gtk.WindowControlsClass */
    parent_class: WidgetClass
    static name: string
}
export abstract class WindowGroupClass {
    /* Fields of Gtk.WindowGroupClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class WindowGroupPrivate {
    static name: string
}
export abstract class WindowHandleClass {
    /* Fields of Gtk.WindowHandleClass */
    parent_class: WidgetClass
    static name: string
}
type Allocation = Gdk.Rectangle